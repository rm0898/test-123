<xccdf:Benchmark xmlns:xccdf="http://checklists.nist.gov/xccdf/1.2" xmlns="http://checklists.nist.gov/xccdf/1.2" xmlns:ae="http://benchmarks.cisecurity.org/ae/0.5" xmlns:cc6="http://cisecurity.org/20-cc/v6.1" xmlns:cc7="http://cisecurity.org/20-cc/v7.0" xmlns:cc8="http://cisecurity.org/20-cc/v8.0" xmlns:ciscf="https://benchmarks.cisecurity.org/ciscf/1.0" xmlns:notes="http://benchmarks.cisecurity.org/notes" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="xccdf_org.cisecurity.benchmarks_benchmark_1.0.0_CIS_PostgreSQL_14_Benchmark" style="SCAP_1.2" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.2 https://scap.nist.gov/schema/xccdf/1.2/xccdf_1.2.xsd">
  <xccdf:status date="2021-10-21">draft</xccdf:status>
  <xccdf:title xml:lang="en">CIS PostgreSQL 14 Benchmark</xccdf:title>
  <xccdf:description xml:lang="en">
    <xhtml:p>
This document, CIS PostgreSQL 14 Benchmark, provides prescriptive guidance for establishing a secure configuration posture for PostgreSQL 14. This guide was tested against PostgreSQL 14 running on RHEL 8, but applies to other Linux distributions as well. To obtain the latest version of this guide, please visit       <xhtml:a href="http://benchmarks.cisecurity.org/">http://benchmarks.cisecurity.org</xhtml:a>
. If you have questions, comments, or have identified ways to improve this guide, please write us at       <xhtml:a href="mailto:feedback@cisecurity.org">feedback@cisecurity.org</xhtml:a>
.    </xhtml:p>
  </xccdf:description>
  <xccdf:notice id="terms-of-use" xml:lang="en">	BACKGROUND.
	The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide.	Recommendations contained in the Products ("Recommendations") result from a consensus-building process that involves many security experts and are generally generic in nature.	The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their networks, systems, and devices.	Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements.	The Recommendations are not in any way intended to be a "quick fix" for anyone's information security needs.
	NO REPRESENTATIONS, WARRANTIES, OR COVENANTS.
	CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability, timeliness, or completeness of	the Products or the Recommendations.	CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.	USER AGREEMENTS.
	By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that:
	1.	No network, system, device, hardware, software, or component can be made fully secure;
	2.	We are using the Products and the Recommendations solely at our own risk;
	3.	We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even risks that result from 		CIS's negligence or failure to perform; 
	4.	We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the 			Recommendations to our particular circumstances and requirements;
	5.	Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us of 		the need for any such corrections, updates, upgrades, or bug fixes; and
	6.	Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or otherwise) for 		any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage 		to reputation,loss of customers, loss of software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, 	business interruption, wasted management or other staff resources or claims of any kind against us from third parties) arising out of or in any way 	Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such 	damages), including without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, 	viruses, worms, backdoors, Trojan horses or other harmful items.
	GRANT OF LIMITED RIGHTS.
	CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use:
	1.	Except to the extent that we may have received additional authorization pursuant to a written agreement with CIS, each user may download, install and 	use each of the Products on a single computer;
	2.	Each user may print one or more copies of any Product or any component of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided 		that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its entirety.
	RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION.
	The Products are protected by copyright and other intellectual property laws and by international treaties.	We acknowledge and agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties.	CIS reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights."
	Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product.	We will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph.
	We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors, members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs) incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim.	We further agree that all CIS Parties are third-party beneficiaries of our undertakings in these Agreed Terms of Use.	SPECIAL RULES.
	CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which CIS has a written contractual relationship.	Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules.
	CIS hereby grants each CIS Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means.	Each such Member acknowledges and agrees that the foregoing grant is subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time.
	CHOICE OF LAW; JURISDICTION; VENUE.
	We acknowledge and agree that these Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action.	If any of these Agreed Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
	BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.</xccdf:notice>
  <xccdf:version>1.0.0</xccdf:version>
  <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1_-_PostgreSQL">
    <xccdf:title xml:lang="en">Level 1 - PostgreSQL</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>Items in this profile apply to PostgreSQL 14 and intend to:</xhtml:p>
      <xhtml:ul>
        <xhtml:li>be practical and prudent;</xhtml:li>
        <xhtml:li>provide a clear security benefit; and</xhtml:li>
        <xhtml:li>not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
      </xhtml:ul>
      <xhtml:p>
        <xhtml:strong>Note:</xhtml:strong>
 The intent of this profile is to include checks that can be assessed by remotely connecting to PostgreSQL. Therefore, file system-related checks are not contained in this profile.      </xhtml:p>
    </xccdf:description>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Ensure_the_log_destinations_are_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Ensure_the_logging_collector_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Ensure_the_log_file_destination_directory_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Ensure_the_filename_pattern_for_log_files_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Ensure_the_log_file_permissions_are_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Ensure_log_truncate_on_rotation_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Ensure_the_maximum_log_file_lifetime_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Ensure_the_maximum_log_file_size_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Ensure_the_correct_syslog_facility_is_selected" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ensure_syslog_messages_are_not_suppressed" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Ensure_syslog_messages_are_not_lost_due_to_size" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Ensure_the_program_name_for_PostgreSQL_syslog_messages_is_correct" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Ensure_the_correct_messages_are_written_to_the_server_log" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Ensure_the_correct_SQL_statements_generating_errors_are_recorded" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Ensure_debug_print_parse_is_disabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Ensure_debug_print_rewritten_is_disabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Ensure_debug_print_plan_is_disabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.19_Ensure_debug_pretty_print_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.20_Ensure_log_connections_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.21_Ensure_log_disconnections_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.22_Ensure_log_error_verbosity_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.23_Ensure_log_hostname_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.24_Ensure_log_line_prefix_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.25_Ensure_log_statement_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.26_Ensure_log_timezone_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_the_PostgreSQL_Audit_Extension_pgAudit_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_excessive_administrative_privileges_are_revoked" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_excessive_DML_privileges_are_revoked" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Ensure_Row_Level_Security_RLS_is_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_the_set_user_extension_is_installed" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.7_Make_use_of_predefined_roles" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Understanding_attack_vectors_and_runtime_parameters" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_backend_runtime_parameters_are_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_Postmaster_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_SIGHUP_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Ensure_Superuser_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_User_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_TLS_is_enabled_and_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_the_pgcrypto_extension_is_installed_and_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Ensure_a_replication-only_user_is_created_and_used_for_streaming_replication" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Ensure_logging_of_replication_commands_is_configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Ensure_base_backups_are_configured_and_functional" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5_Ensure_streaming_replication_parameters_are_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1_Ensure_PostgreSQL_configuration_files_are_outside_the_data_cluster" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2_Ensure_PostgreSQL_subdirectory_locations_are_outside_the_data_cluster" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Ensure_miscellaneous_configuration_settings_are_correct" selected="true"/>
  </xccdf:Profile>
  <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1_-_PostgreSQL_on_Linux">
    <xccdf:title xml:lang="en">Level 1 - PostgreSQL on Linux</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>Items in this profile apply to PostgreSQL 14 running on Linux and intend to:</xhtml:p>
      <xhtml:ul>
        <xhtml:li>be practical and prudent;</xhtml:li>
        <xhtml:li>provide a clear security benefit; and</xhtml:li>
        <xhtml:li>not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
      </xhtml:ul>
    </xccdf:description>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Ensure_packages_are_obtained_from_authorized_repositories" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2_Ensure_systemd_Service_Files_Are_Enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.3_Ensure_Data_Cluster_Initialized_Successfully" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Ensure_the_file_permissions_mask_is_correct" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Ensure_the_log_destinations_are_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Ensure_the_logging_collector_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Ensure_the_log_file_destination_directory_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Ensure_the_filename_pattern_for_log_files_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Ensure_the_log_file_permissions_are_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Ensure_log_truncate_on_rotation_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Ensure_the_maximum_log_file_lifetime_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Ensure_the_maximum_log_file_size_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Ensure_the_correct_syslog_facility_is_selected" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ensure_syslog_messages_are_not_suppressed" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Ensure_syslog_messages_are_not_lost_due_to_size" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Ensure_the_program_name_for_PostgreSQL_syslog_messages_is_correct" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Ensure_the_correct_messages_are_written_to_the_server_log" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Ensure_the_correct_SQL_statements_generating_errors_are_recorded" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Ensure_debug_print_parse_is_disabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Ensure_debug_print_rewritten_is_disabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Ensure_debug_print_plan_is_disabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.19_Ensure_debug_pretty_print_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.20_Ensure_log_connections_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.21_Ensure_log_disconnections_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.22_Ensure_log_error_verbosity_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.23_Ensure_log_hostname_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.24_Ensure_log_line_prefix_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.25_Ensure_log_statement_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.26_Ensure_log_timezone_is_set_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_the_PostgreSQL_Audit_Extension_pgAudit_is_enabled" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Ensure_sudo_is_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_excessive_administrative_privileges_are_revoked" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Ensure_excessive_function_privileges_are_revoked" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_excessive_DML_privileges_are_revoked" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Ensure_Row_Level_Security_RLS_is_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_the_set_user_extension_is_installed" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.7_Make_use_of_predefined_roles" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Ensure_login_via_local_UNIX_Domain_Socket_is_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_login_via_host_TCPIP_Socket_is_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Understanding_attack_vectors_and_runtime_parameters" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_backend_runtime_parameters_are_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_Postmaster_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_SIGHUP_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Ensure_Superuser_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_User_Runtime_Parameters_are_Configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Ensure_FIPS_140-2_OpenSSL_Cryptography_Is_Used" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_TLS_is_enabled_and_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_the_pgcrypto_extension_is_installed_and_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Ensure_a_replication-only_user_is_created_and_used_for_streaming_replication" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Ensure_logging_of_replication_commands_is_configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Ensure_base_backups_are_configured_and_functional" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4_Ensure_WAL_archiving_is_configured_and_functional" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5_Ensure_streaming_replication_parameters_are_configured_correctly" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1_Ensure_PostgreSQL_configuration_files_are_outside_the_data_cluster" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2_Ensure_PostgreSQL_subdirectory_locations_are_outside_the_data_cluster" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3_Ensure_the_backup_and_restore_tool_pgBackRest_is_installed_and_configured" selected="true"/>
    <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Ensure_miscellaneous_configuration_settings_are_correct" selected="true"/>
  </xccdf:Profile>
  <Value abstract="false" hidden="false" id="xccdf_org.cisecurity_value_jdbc.url" interactive="1" prohibitChanges="false" type="string">
    <title override="0">Database connection string</title>
    <description override="0">This value allows for user-supplied connection strings</description>
    <value selector=""/>
    <default>jdbc:postgresql://localhost:5432/?user=test&amp;password=secret&amp;ssl=true</default>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589211_var" operator="pattern match" type="string">
    <title>Ensure the log destinations are set correctly</title>
    <description>This value is used in Rule: Ensure the log destinations are set correctly</description>
    <value>^.+$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589231_var" operator="pattern match" type="string">
    <title>Ensure the logging collector is enabled</title>
    <description>This value is used in Rule: Ensure the logging collector is enabled</description>
    <value>^(?i)on$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589251_var" operator="pattern match" type="string">
    <title>Ensure the log file destination directory is set correctly</title>
    <description>This value is used in Rule: Ensure the log file destination directory is set correctly</description>
    <value>^.+$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589261_var" operator="pattern match" type="string">
    <title>Ensure the filename pattern for log files is set correctly</title>
    <description>This value is used in Rule: Ensure the filename pattern for log files is set correctly</description>
    <value>^.+([-_]*%[a-eA-EFghGHIjklmMnOpr-zR-Z+%][-_]*)+\.(?i)log$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589281_var" operator="equals" type="string">
    <title>Ensure the log file permissions are set correctly</title>
    <description>This value is used in Rule: Ensure the log file permissions are set correctly</description>
    <value>0600</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589301_var" operator="pattern match" type="string">
    <title>Ensure 'log_truncate_on_rotation' is enabled</title>
    <description>This value is used in Rule: Ensure 'log_truncate_on_rotation' is enabled</description>
    <value>^(?i)on$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589331_var" operator="pattern match" type="string">
    <title>Ensure the maximum log file lifetime is set correctly</title>
    <description>This value is used in Rule: Ensure the maximum log file lifetime is set correctly</description>
    <value>^[1-9][0-9]*(hr|d|m)$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589351_var" operator="pattern match" type="string">
    <title>Ensure the maximum log file size is set correctly</title>
    <description>This value is used in Rule: Ensure the maximum log file size is set correctly</description>
    <value>^[1-9][0-9]*(?i)[GM]B$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589371_var" operator="pattern match" type="string">
    <title>Ensure the program name for PostgreSQL syslog messages is correct</title>
    <description>This value is used in Rule: Ensure the program name for PostgreSQL syslog messages is correct</description>
    <value>^.+$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589381_var" operator="pattern match" type="string">
    <title>Ensure the correct messages are written to the server log</title>
    <description>This value is used in Rule: Ensure the correct messages are written to the server log</description>
    <value>^(?i)debug+[1-5]|info|notice|warning$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589421_var" operator="pattern match" type="string">
    <title>Ensure the correct SQL statements generating errors are recorded</title>
    <description>This value is used in Rule: Ensure the correct SQL statements generating errors are recorded</description>
    <value>^(?i)debug+[1-5]|info|notice|warning|error$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589441_var" operator="pattern match" type="string">
    <title>Ensure 'debug_print_parse' is disabled</title>
    <description>This value is used in Rule: Ensure 'debug_print_parse' is disabled</description>
    <value>^(?i)off$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589451_var" operator="pattern match" type="string">
    <title>Ensure 'debug_print_rewritten' is disabled</title>
    <description>This value is used in Rule: Ensure 'debug_print_rewritten' is disabled</description>
    <value>^(?i)off$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589471_var" operator="pattern match" type="string">
    <title>Ensure 'debug_print_plan' is disabled</title>
    <description>This value is used in Rule: Ensure 'debug_print_plan' is disabled</description>
    <value>^(?i)off$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589481_var" operator="pattern match" type="string">
    <title>Ensure 'debug_pretty_print' is enabled</title>
    <description>This value is used in Rule: Ensure 'debug_pretty_print' is enabled</description>
    <value>^(?i)on$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589491_var" operator="pattern match" type="string">
    <title>Ensure 'log_connections' is enabled</title>
    <description>This value is used in Rule: Ensure 'log_connections' is enabled</description>
    <value>^(?i)on$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589501_var" operator="pattern match" type="string">
    <title>Ensure 'log_disconnections' is enabled</title>
    <description>This value is used in Rule: Ensure 'log_disconnections' is enabled</description>
    <value>^(?i)on$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589511_var" operator="pattern match" type="string">
    <title>Ensure 'log_error_verbosity' is set correctly</title>
    <description>This value is used in Rule: Ensure 'log_error_verbosity' is set correctly</description>
    <value>^(?i)verbose$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589521_var" operator="pattern match" type="string">
    <title>Ensure 'log_hostname' is set correctly</title>
    <description>This value is used in Rule: Ensure 'log_hostname' is set correctly</description>
    <value>^(?i)off$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589531_var" operator="pattern match" type="string">
    <title>Ensure 'log_line_prefix' is set correctly</title>
    <description>This value is used in Rule: Ensure 'log_line_prefix' is set correctly</description>
    <value>^.*(?=.*(\%m))(?=.*(\[\%p]:))(?=.*(\[\%l-1]))(?=.*(db=\%d))(?=.*(user=\%u))(?=.*(app=\%a))(?=.*(client=\%h)).*$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589541_var" operator="pattern match" type="string">
    <title>Ensure 'log_statement' is set correctly</title>
    <description>This value is used in Rule: Ensure 'log_statement' is set correctly</description>
    <value>^(?i)ddl|mod|all$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589551_var" operator="pattern match" type="string">
    <title>Ensure 'log_timezone' is set correctly</title>
    <description>This value is used in Rule: Ensure 'log_timezone' is set correctly</description>
    <value>^GMT|UTC$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589561_var" operator="pattern match" type="string">
    <title>Ensure the PostgreSQL Audit Extension (pgAudit) is enabled</title>
    <description>This value is used in Rule: Ensure the PostgreSQL Audit Extension (pgAudit) is enabled</description>
    <value>^.*(?i)pgaudit.*$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589151_var" operator="equals" type="string">
    <title>Ensure excessive function privileges are revoked</title>
    <description>This value is used in Rule: Ensure excessive function privileges are revoked</description>
    <value>t</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589271_var" operator="equals" type="string">
    <title>Ensure 'backend' runtime parameters are configured correctly</title>
    <description>This value is used in Rule: Ensure 'backend' runtime parameters are configured correctly</description>
    <value>off</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589291_var" operator="equals" type="string">
    <title>Ensure 'backend' runtime parameters are configured correctly</title>
    <description>This value is used in Rule: Ensure 'backend' runtime parameters are configured correctly</description>
    <value>on</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589311_var" operator="equals" type="string">
    <title>Ensure 'backend' runtime parameters are configured correctly</title>
    <description>This value is used in Rule: Ensure 'backend' runtime parameters are configured correctly</description>
    <value>on</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589321_var" operator="equals" type="number">
    <title>Ensure 'backend' runtime parameters are configured correctly</title>
    <description>This value is used in Rule: Ensure 'backend' runtime parameters are configured correctly</description>
    <value>0</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589341_var" operator="equals" type="string">
    <title>Ensure 'backend' runtime parameters are configured correctly</title>
    <description>This value is used in Rule: Ensure 'backend' runtime parameters are configured correctly</description>
    <value>off</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589361_var" operator="equals" type="string">
    <title>Ensure 'backend' runtime parameters are configured correctly</title>
    <description>This value is used in Rule: Ensure 'backend' runtime parameters are configured correctly</description>
    <value>off</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589411_var" operator="pattern match" type="string">
    <title>Ensure TLS is enabled and configured correctly</title>
    <description>This value is used in Rule: Ensure TLS is enabled and configured correctly</description>
    <value>^(?i)on$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589401_var" operator="pattern match" type="string">
    <title>Ensure WAL archiving is configured and functional</title>
    <description>This value is used in Rule: Ensure WAL archiving is configured and functional</description>
    <value>(?i)^on$</value>
  </Value>
  <Value id="xccdf_org.cisecurity.benchmarks_value_16589431_var" operator="pattern match" type="string">
    <title>Ensure WAL archiving is configured and functional</title>
    <description>This value is used in Rule: Ensure WAL archiving is configured and functional</description>
    <value>^'rsync.+-e ssh.*'\s*$</value>
  </Value>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1_Installation_and_Patches">
    <xccdf:title xml:lang="en">Installation and Patches</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>One of the best ways to ensure PostgreSQL security is to implement security updates as they come out, along with any applicable OS patches that will not interfere with system operations. It is additionally prudent to ensure the installed version has not reached end-of-life.</xhtml:p>
    </xccdf:description>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1_Ensure_packages_are_obtained_from_authorized_repositories" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure packages are obtained from authorized repositories</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>Standard Linux distributions, although possessing the requisite packages, often do not have PostgreSQL pre-installed. The installation process includes installing the binaries and the means to generate a data cluster. Package installation should include both the server and client packages. Contribution modules are optional depending upon one's architectural requirements (they are recommended though).</xhtml:p>
        <xhtml:p>
When obtaining and installing software packages (typically via           <xhtml:span class="inline_block">dnf</xhtml:span>
 or           <xhtml:span class="inline_block">apt</xhtml:span>
), it's imperative that packages are sourced only from valid and authorized repositories. For PostgreSQL, the canonical repositories are the official PostgreSQL YUM repository (yum.postgresql.org) and the official PostgreSQL APT repository (apt.postgresql.org). Your chosen PostgreSQL vendor may offer its own software repositories as well.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Establish and Maintain a Software Inventory" urn="urn:cisecurity.org:controls:8.0:2:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Identify</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Maintain Inventory of Authorized Software" urn="urn:cisecurity.org:controls:7.0:2:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Identify</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>Being open-source, PostgreSQL packages are widely available across the internet through package aggregators and providers. However, using invalid or unauthorized sources for packages can lead to implementing untested, defective, or malicious software.</xhtml:p>
        <xhtml:p>Many organizations choose to implement a local software repository within their organization. Care must be taken to ensure that only valid and authorized packages are downloaded and installed into such local repositories.</xhtml:p>
        <xhtml:p>
From a security perspective, it's imperative to verify the PostgreSQL binary packages are sourced from a valid software repository. For a complete listing of all PostgreSQL binaries available via configured repositories inspect the output from           <xhtml:span class="inline_block">dnf provides '*libpq.so'</xhtml:span>
 or           <xhtml:span class="inline_block">apt-file search /usr/pgsql-14/lib/libpq.so.5</xhtml:span>
.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/2/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/2/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://en.wikipedia.org/wiki/DNF_(software)</xccdf:ident>
      <xccdf:ident system="URL">https://en.wikipedia.org/wiki/APT_(software)</xccdf:ident>
      <xccdf:ident system="URL">https://yum.postgresql.org</xccdf:ident>
      <xccdf:ident system="URL">https://apt.postgresql.org</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Alter the configured repositories so they only include valid and authorized sources of packages.</xhtml:p>
            <xhtml:p>
As an example of adding an authorized repository, we will install the PGDG repository RPM from '              <xhtml:a href="https://yum.postgresql.org">yum.postgresql.org</xhtml:a>
' (note that because of a change in the way packaging is handled in RHEL 8, we also need to disable the Red Hat built-in PostgreSQL module):            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm              <br/>
Last metadata expiration check: 0:01:35 ago on Fri 04 Oct 2019 01:19:37 PM EDT.              <br/>
[snip]              <br/>
Installed:              <br/>
  pgdg-redhat-repo-42.0-19.noarch              <br/>
              <br/>
Complete!              <br/>
# dnf -qy module disable postgresql
            </xhtml:code>
            <xhtml:p>Verify the repository has been added and is enabled:</xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# dnf repolist all | egrep 'enabled$'              <br/>
pgdg-common                                           PostgreSQL common enabled              <br/>
pgdg10                                                PostgreSQL 10 for enabled              <br/>
pgdg11                                                PostgreSQL 11 for enabled              <br/>
pgdg12                                                PostgreSQL 12 for enabled              <br/>
pgdg13                                                PostgreSQL 13 for enabled              <br/>
pgdg14                                                PostgreSQL 14 for enabled              <br/>
pgdg96                                                PostgreSQL 9.6 fo enabled              <br/>
rhel-8-for-x86_64-appstream-rpms                      Red Hat Enterpris enabled              <br/>
rhel-8-for-x86_64-baseos-rpms                         Red Hat Enterpris enabled
            </xhtml:code>
            <xhtml:p>If the version of PostgreSQL installed is not 14.x or they did not come from a valid repository, the packages may be uninstalled using this command:</xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# dnf remove $(rpm -qa|grep postgres)
            </xhtml:code>
            <xhtml:p>To install the PGDG RPMs for PostgreSQL 14.x, run:</xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# dnf install -y postgresql14-{server,contrib}              <br/>
&lt;snip&gt;              <br/>
Installed:              <br/>
  lz4-1.8.3-3.el8_4.x86_64                           postgresql14-14.0-1PGDG.rhel8.x86_64              <br/>
  postgresql14-contrib-14.0-1PGDG.rhel8.x86_64       postgresql14-libs-14.0-1PGDG.rhel8.x86_64              <br/>
  postgresql14-server-14.0-1PGDG.rhel8.x86_64              <br/>
Complete!
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.2_Ensure_systemd_Service_Files_Are_Enabled" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure systemd Service Files Are Enabled</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
Confirm, and correct if necessary, the PostgreSQL           <xhtml:span class="inline_block">systemd</xhtml:span>
 service is enabled.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
Enabling the           <xhtml:span class="inline_block">systemd</xhtml:span>
 service on the OS ensures the database service is active when a change of state occurs as in the case of a system startup or reboot.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://man7.org/linux/man-pages/man1/systemctl.1.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.freedesktop.org/software/systemd/man/systemd.special.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Irrespective of package source, PostgreSQL services can be identified because it typically includes the text string "postgresql". PGDG installs do not automatically register the service as a "want" of the default               <xhtml:span class="inline_block">systemd</xhtml:span>
 target. Multiple instances of PostgreSQL services often distinguish themselves using a version number.            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# systemctl enable postgresql-14              <br/>
Created symlink /etc/systemd/system/multi-user.target.wants/postgresql-14.service → /usr/lib/systemd/system/postgresql-14.service.              <br/>
# systemctl list-dependencies multi-user.target | grep -i postgres              <br/>
● ├─postgresql-14.service
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658917"/>
      </check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.3_Ensure_Data_Cluster_Initialized_Successfully" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure Data Cluster Initialized Successfully</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>First-time installs of PostgreSQL require the instantiation of the database cluster. A database cluster is a collection of databases that are managed by a single server instance.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>For the purposes of security, PostgreSQL enforces ownership and permissions of the data cluster such that:</xhtml:p>
        <xhtml:ul>
          <xhtml:li>An initialized data cluster is owned by the UNIX account that created it.</xhtml:li>
          <xhtml:li>The data cluster cannot be accessed by other UNIX user accounts.</xhtml:li>
          <xhtml:li>
The data-cluster cannot be created or owned by             <xhtml:span class="inline_block">root</xhtml:span>
          </xhtml:li>
          <xhtml:li>
The PostgreSQL process cannot be invoked by             <xhtml:span class="inline_block">root</xhtml:span>
 nor any UNIX user account other than the owner of the data cluster.          </xhtml:li>
        </xhtml:ul>
        <xhtml:p>Incorrectly instantiating the data cluster will result in a failed installation.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/app-initdb.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Attempting to instantiate a data cluster to an existing non-empty directory will fail:</xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# PGSETUP_INITDB_OPTIONS="-k" /usr/pgsql-14/bin/postgresql-14-setup initdb              <br/>
Data directory is not empty!
            </xhtml:code>
            <xhtml:p>
In the case of a cluster instantiation failure, one must delete/remove the entire data cluster directory and repeat the               <xhtml:span class="inline_block">initdb</xhtml:span>
 command:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# rm -rf ~postgres/14              <br/>
# PGSETUP_INITDB_OPTIONS="-k" /usr/pgsql-13/bin/postgresql-13-setup initdb              <br/>
Initializing database ... OK
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658918"/>
        </check>
        <xccdf:complex-check operator="AND">
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658920"/>
          </check>
          <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
              <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658922"/>
            </check>
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
              <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658924"/>
            </check>
          </xccdf:complex-check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2_Directory_and_File_Permissions">
    <xccdf:title xml:lang="en">Directory and File Permissions</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>This section provides guidance on securing all operating system specific objects for PostgreSQL.</xhtml:p>
    </xccdf:description>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1_Ensure_the_file_permissions_mask_is_correct" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure the file permissions mask is correct</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
Files are always created using a default set of permissions. File permissions can be restricted by applying a permissions mask called the           <xhtml:strong>
            <xhtml:span class="inline_block">umask</xhtml:span>
          </xhtml:strong>
. The           <xhtml:span class="inline_block">postgres</xhtml:span>
 user account should use a umask of           <xhtml:span class="inline_block">077</xhtml:span>
 to deny file access to all user accounts except the owner.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
The Linux OS defaults the umask to           <xhtml:span class="inline_block">002</xhtml:span>
, which means the owner and primary group can read and write the file, and other accounts are permitted to read the file. Not explicitly setting the umask to a value as restrictive as           <xhtml:span class="inline_block">077</xhtml:span>
 allows other users to read, write, or even execute files and scripts created by the           <xhtml:span class="inline_block">postgres</xhtml:span>
 user account. The alternative to using a umask is explicitly updating file permissions after file creation using the command line utility           <xhtml:span class="inline_block">chmod</xhtml:span>
 (a manual and error-prone process that is not advised).        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://man7.org/linux/man-pages/man2/umask.2.html</xccdf:ident>
      <xccdf:ident system="URL">https://man7.org/linux/man-pages/man1/umask.1p.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Depending upon the               <xhtml:span class="inline_block">postgres</xhtml:span>
 user's environment, the umask is typically set in the initialization file               <xhtml:span class="inline_block">.bash_profile</xhtml:span>
, but may also be set in               <xhtml:span class="inline_block">.profile</xhtml:span>
 or               <xhtml:span class="inline_block">.bashrc</xhtml:span>
. To set the umask, add the following to the appropriate profile file:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
postgres              <br/>
# cd ~              <br/>
# ls -ld .{bash_profile,profile,bashrc}              <br/>
ls: cannot access .profile: No such file or directory              <br/>
ls: cannot access .bashrc: No such file or directory              <br/>
-rwx------. 1 postgres postgres 267 Aug 14 12:59 .bash_profile              <br/>
# echo "umask 077" &gt;&gt; .bash_profile              <br/>
# source .bash_profile              <br/>
# umask              <br/>
0077
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3_Logging_Monitoring_And_Auditing">
    <xccdf:title xml:lang="en">Logging Monitoring And Auditing</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>This section provides guidance with respect to PostgreSQL's auditing and logging behavior.</xhtml:p>
    </xccdf:description>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3.1_PostgreSQL_Logging">
      <xccdf:title xml:lang="en">PostgreSQL Logging</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
This section provides guidance with respect to PostgreSQL's logging behavior           <xhtml:em>as it applies to security and auditing</xhtml:em>
. PostgreSQL contains significantly more logging options that are not audit and/or security related (and as such, are not covered herein).        </xhtml:p>
      </xccdf:description>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3.1.1_Logging_Rationale">
        <xccdf:title xml:lang="en">Logging Rationale</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>Having an audit trail is an important feature of any relational database system. You want enough detail to describe when an event of interest has started and stopped, what the event is/was, the event's cause, and what the event did/is doing to the system.</xhtml:p>
          <xhtml:p>Ideally, the logged information is in a format permitting further analysis giving us new perspectives and insight.</xhtml:p>
          <xhtml:p>
The PostgreSQL configuration file             <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 is where all adjustable parameters can be set. A configuration file is created as part of the data cluster's creation i.e.             <xhtml:span class="inline_block">initdb</xhtml:span>
. The configuration file enumerates all tunable parameters and even though most of them are commented out it is understood that they are in fact active and at those very same documented values. The reason that they are commented out is to signify their default values. Uncommenting them will force the server to read these values instead of using the default values.          </xhtml:p>
        </xccdf:description>
      </xccdf:Group>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Ensure_the_log_destinations_are_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the log destinations are set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
PostgreSQL supports several methods for logging server messages, including             <xhtml:span class="inline_block">stderr</xhtml:span>
,             <xhtml:span class="inline_block">csvlog</xhtml:span>
 and             <xhtml:span class="inline_block">syslog</xhtml:span>
. On Windows,             <xhtml:span class="inline_block">eventlog</xhtml:span>
 is also supported. One or more of these destinations should be set for server log output.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
          <notes:notes xml:lang="en">
            <xhtml:p>
              <xhtml:span class="inline_block">logging_collector</xhtml:span>
 (detailed in the next section) must be enabled to generate CSV-format log output.            </xhtml:p>
          </notes:notes>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
If             <xhtml:span class="inline_block">log_destination</xhtml:span>
 is not set, then any log messages generated by the core PostgreSQL processes will be lost.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statements to remediate this setting (in this example, setting the log destination to                 <xhtml:span class="inline_block">csvlog</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_destination = 'csvlog';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p>
                <xhtml:strong>Note:</xhtml:strong>
 If more than one log destination is to be used, set this parameter to a list of desired log destinations separated by commas (e.g. '                <xhtml:span class="inline_block">csvlog, stderr</xhtml:span>
').              </xhtml:p>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658921" value-id="xccdf_org.cisecurity.benchmarks_value_16589211_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658921"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Ensure_the_logging_collector_is_enabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the logging collector is enabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The logging collector is a background process that captures log messages sent to             <xhtml:span class="inline_block">stderr</xhtml:span>
 and redirects them into log files. The             <xhtml:span class="inline_block">logging_collector</xhtml:span>
 setting must be enabled in order for this process to run. It can only be set at the server start.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
The logging collector approach is often more useful than logging to             <xhtml:span class="inline_block">syslog</xhtml:span>
, since some types of messages might not appear in             <xhtml:span class="inline_block">syslog</xhtml:span>
 output. One common example is dynamic-linker failure message; another may be error messages produced by scripts such as             <xhtml:span class="inline_block">archive_command</xhtml:span>
.          </xhtml:p>
          <xhtml:p>
            <xhtml:strong>Note:</xhtml:strong>
 This setting             <xhtml:em>must</xhtml:em>
 be enabled when             <xhtml:span class="inline_block">log_destination</xhtml:span>
 is either             <xhtml:span class="inline_block">stderr</xhtml:span>
 or             <xhtml:span class="inline_block">csvlog</xhtml:span>
 and for certain other logging parameters to take effect.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set logging_collector = 'on';                <br/>
ALTER SYSTEM
              </xhtml:code>
              <xhtml:p>Unfortunately, this setting can only be changed at the server (re)start. As root, restart the PostgreSQL service for this change to take effect:</xhtml:p>
              <xhtml:code class="code_block">
# whoami                <br/>
root                <br/>
# systemctl restart postgresql-14                <br/>
# systemctl status postgresql-14|grep 'ago$'                <br/>
   Active: active (running) since &lt;date&gt;; &lt;count&gt;s ago
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658923" value-id="xccdf_org.cisecurity.benchmarks_value_16589231_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658923"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Ensure_the_log_file_destination_directory_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the log file destination directory is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_directory</xhtml:span>
 setting specifies the destination directory for log files when             <xhtml:span class="inline_block">log_destination</xhtml:span>
 is             <xhtml:span class="inline_block">stderr</xhtml:span>
 or             <xhtml:span class="inline_block">csvlog</xhtml:span>
. It can be specified as relative to the cluster data directory (            <xhtml:span class="inline_block">$PGDATA</xhtml:span>
) or as an absolute path.             <xhtml:span class="inline_block">log_directory</xhtml:span>
 should be set according to your organization's logging policy.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
If             <xhtml:span class="inline_block">log_directory</xhtml:span>
 is not set, it is interpreted as the absolute path             <xhtml:span class="inline_block">'/'</xhtml:span>
 and PostgreSQL will attempt to write its logs there (and typically fail due to a lack of permissions to that directory). This parameter should be set to direct the logs into the appropriate directory location as defined by your organization's logging policy.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_directory='/var/log/postgres';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)                <br/>
postgres=# show log_directory;                <br/>
 log_directory                <br/>
---------------                <br/>
 /var/log/postgres                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p>
                <xhtml:strong>Note:</xhtml:strong>
 The use of                 <xhtml:span class="inline_block">/var/log/postgres</xhtml:span>
, above, is an example. This should be set to an appropriate path as defined by your organization's logging requirements. Having said that, it                 <xhtml:strong>is</xhtml:strong>
 a good idea to have the logs outside of your                 <xhtml:span class="inline_block">PGDATA</xhtml:span>
 directory so that they are not included by things like                 <xhtml:span class="inline_block">pg_basebackup</xhtml:span>
 or                 <xhtml:span class="inline_block">pgBackRest</xhtml:span>
.              </xhtml:p>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658925" value-id="xccdf_org.cisecurity.benchmarks_value_16589251_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658925"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Ensure_the_filename_pattern_for_log_files_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the filename pattern for log files is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_filename</xhtml:span>
 setting specifies the filename pattern for log files. The value for             <xhtml:span class="inline_block">log_filename</xhtml:span>
 should match your organization's logging policy.          </xhtml:p>
          <xhtml:p>
The value is treated as a             <xhtml:span class="inline_block">strftime</xhtml:span>
 pattern, so             <xhtml:span class="inline_block">%-escapes</xhtml:span>
 can be used to specify time-varying file names. The supported             <xhtml:span class="inline_block">%-escapes</xhtml:span>
 are similar to those listed in the Open Group's             <xhtml:span class="inline_block">strftime</xhtml:span>
 specification. If you specify a file name without escapes, you should plan to use a log rotation utility to avoid eventually filling the partition that contains             <xhtml:span class="inline_block">log_directory</xhtml:span>
. If there are any time-zone-dependent             <xhtml:span class="inline_block">%-escapes</xhtml:span>
, the computation is done in the zone specified by             <xhtml:span class="inline_block">log_timezone</xhtml:span>
. Also, the system's             <xhtml:span class="inline_block">strftime</xhtml:span>
 is not used directly, so platform-specific (nonstandard) extensions do not work.          </xhtml:p>
          <xhtml:p>
If CSV-format output is enabled in             <xhtml:span class="inline_block">log_destination</xhtml:span>
,             <xhtml:span class="inline_block">.csv</xhtml:span>
 will be appended to the log filename. (If             <xhtml:span class="inline_block">log_filename</xhtml:span>
 ends in             <xhtml:span class="inline_block">.log</xhtml:span>
, the suffix is replaced instead.)          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
If             <xhtml:span class="inline_block">log_filename</xhtml:span>
 is not set, then the value of             <xhtml:span class="inline_block">log_directory</xhtml:span>
 is appended to an empty string and PostgreSQL will fail to start as it will try to write to a directory instead of a file.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://man7.org/linux/man-pages/man3/strftime.3.html</xccdf:ident>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_filename='postgresql-%Y%m%d.log';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)                <br/>
postgres=# show log_filename;                <br/>
   log_filename                <br/>
-------------------                <br/>
 postgresql-%Y%m%d.log                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p>
                <xhtml:strong>Note:</xhtml:strong>
 In this example, a new log file will be created for each day (e.g.                 <xhtml:span class="inline_block">postgresql-20200804.log</xhtml:span>
)              </xhtml:p>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658926" value-id="xccdf_org.cisecurity.benchmarks_value_16589261_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658926"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Ensure_the_log_file_permissions_are_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the log file permissions are set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_file_mode</xhtml:span>
 setting determines the file permissions for log files when             <xhtml:span class="inline_block">logging_collector</xhtml:span>
 is enabled. The parameter value is expected to be a numeric mode specification in the form accepted by the             <xhtml:span class="inline_block">chmod</xhtml:span>
 and             <xhtml:span class="inline_block">umask</xhtml:span>
 system calls. (To use the customary octal format, the number must start with a             <xhtml:span class="inline_block">0</xhtml:span>
 (zero).)          </xhtml:p>
          <xhtml:p>
The permissions should be set to allow only the necessary access to authorized personnel. In most cases, the best setting is             <xhtml:span class="inline_block">0600</xhtml:span>
, so that only the server owner can read or write the log files. The other commonly useful setting is             <xhtml:span class="inline_block">0640</xhtml:span>
, allowing members of the owner's group to read the files, although to make use of that, you will need to alter the             <xhtml:span class="inline_block">log_directory</xhtml:span>
 setting to store the log files outside the cluster data directory.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Data</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Data</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>Log files often contain sensitive data. Allowing unnecessary access to log files may inadvertently expose sensitive data to unauthorized personnel.</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) to remediate this setting (with the example assuming the desired value of                 <xhtml:span class="inline_block">0600</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_file_mode = '0600';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)                <br/>
postgres=# show log_file_mode;                <br/>
 log_file_mode                <br/>
---------------                <br/>
 0600                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658928" value-id="xccdf_org.cisecurity.benchmarks_value_16589281_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658928"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Ensure_log_truncate_on_rotation_is_enabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_truncate_on_rotation' is enabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
Enabling the             <xhtml:span class="inline_block">log_truncate_on_rotation</xhtml:span>
 setting when             <xhtml:span class="inline_block">logging_collector</xhtml:span>
 is enabled causes PostgreSQL to truncate (overwrite) existing log files with the same name during log rotation instead of appending to them. For example, using this setting in combination with a             <xhtml:span class="inline_block">log_filename</xhtml:span>
 setting value like             <xhtml:span class="inline_block">postgresql-%H.log</xhtml:span>
 would result in generating 24 hourly log files and then cyclically overwriting them:          </xhtml:p>
          <xhtml:code class="code_block">
postgresql-00.log            <br/>
postgresql-01.log            <br/>
[...]            <br/>
postgresql-23.log
          </xhtml:code>
          <xhtml:p>
            <xhtml:strong>Note:</xhtml:strong>
 Truncation will occur             <xhtml:strong>
              <xhtml:em>only</xhtml:em>
            </xhtml:strong>
 when a new file is being opened due to time-based rotation, not during server startup or size-based rotation (see later in this benchmark for size-based rotation details).          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Ensure Adequate Audit Log Storage" urn="urn:cisecurity.org:controls:8.0:8:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Ensure adequate storage for logs" urn="urn:cisecurity.org:controls:7.0:6:4">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
          <notes:notes xml:lang="en">
            <xhtml:p>Be sure to consider your organization's logging retention policies and the use of any external log consumption tools before deciding if truncation should be enabled or disabled.</xhtml:p>
          </notes:notes>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
If this setting is disabled, pre-existing log files will be appended to if             <xhtml:span class="inline_block">log_filename</xhtml:span>
 is configured in such a way that static names are generated.          </xhtml:p>
          <xhtml:p>
Enabling or disabling the truncation should only be decided when             <xhtml:strong>also</xhtml:strong>
 considering the value of             <xhtml:span class="inline_block">log_filename</xhtml:span>
 and             <xhtml:span class="inline_block">log_rotation_age</xhtml:span>
/            <xhtml:span class="inline_block">log_rotation_size</xhtml:span>
. Some examples to illustrate the interaction between these settings:          </xhtml:p>
          <xhtml:code class="code_block">
# truncation is moot, as each rotation gets a unique filename (postgresql-20180605.log)            <br/>
log_truncate_on_rotation = on            <br/>
log_filename = 'postgresql-%Y%m%d.log'            <br/>
log_rotation_age = '1d'            <br/>
log_rotation_size = 0
          </xhtml:code>
          <xhtml:code class="code_block">
# truncation every hour, losing log data every hour until the date changes            <br/>
log_truncate_on_rotation = on            <br/>
log_filename = 'postgresql-%Y%m%d.log'            <br/>
log_rotation_age = '1h'            <br/>
log_rotation_size = 0
          </xhtml:code>
          <xhtml:code class="code_block">
# no truncation if the date changed before generating 100M of log data, truncation otherwise            <br/>
log_truncate_on_rotation = on            <br/>
log_filename = 'postgresql-%Y%m%d.log'            <br/>
log_rotation_age = '0'            <br/>
log_rotation_size = '100M'
          </xhtml:code>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_truncate_on_rotation = 'on';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)                <br/>
postgres=# show log_truncate_on_rotation;                <br/>
 log_truncate_on_rotation                <br/>
--------------------------                <br/>
 on                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658930" value-id="xccdf_org.cisecurity.benchmarks_value_16589301_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658930"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Ensure_the_maximum_log_file_lifetime_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the maximum log file lifetime is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
When             <xhtml:span class="inline_block">logging_collector</xhtml:span>
 is enabled, the             <xhtml:span class="inline_block">log_rotation_age</xhtml:span>
 parameter determines the maximum lifetime of an individual log file (depending on the value of             <xhtml:span class="inline_block">log_filename</xhtml:span>
). After this many minutes have elapsed, a new log file will be created via automatic log file rotation. Current best practices advise log rotation             <xhtml:em>at least</xhtml:em>
 daily, but your organization's logging policy should dictate your rotation schedule.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Ensure Adequate Audit Log Storage" urn="urn:cisecurity.org:controls:8.0:8:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Ensure adequate storage for logs" urn="urn:cisecurity.org:controls:7.0:6:4">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>Log rotation is a standard best practice for log management.</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting (in this example, setting it to one hour):</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_rotation_age='1h';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658933" value-id="xccdf_org.cisecurity.benchmarks_value_16589331_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658933"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Ensure_the_maximum_log_file_size_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the maximum log file size is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_rotation_size</xhtml:span>
 setting determines the maximum size of an individual log file. Once the maximum size is reached, automatic log file rotation will occur.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Ensure Adequate Audit Log Storage" urn="urn:cisecurity.org:controls:8.0:8:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Ensure adequate storage for logs" urn="urn:cisecurity.org:controls:7.0:6:4">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>If this is set to zero, the size-triggered creation of new log files is disabled. This will prevent automatic log file rotation when files become too large, which could put log data at increased risk of loss (unless age-based rotation is configured).</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) to remediate this setting (in this example, setting it to                 <xhtml:span class="inline_block">1GB</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_rotation_size = '1GB';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658935" value-id="xccdf_org.cisecurity.benchmarks_value_16589351_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658935"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Ensure_the_correct_syslog_facility_is_selected" role="unscored" selected="false" weight="0.0">
        <xccdf:title xml:lang="en">Ensure the correct syslog facility is selected</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">syslog_facility</xhtml:span>
 setting specifies the syslog "facility" to be used when logging to             <xhtml:span class="inline_block">syslog</xhtml:span>
 is enabled. You can choose from any of the 'local' facilities:          </xhtml:p>
          <xhtml:ul>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL0</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL1</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL2</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL3</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL4</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL5</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL6</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOCAL7</xhtml:span>
            </xhtml:li>
          </xhtml:ul>
          <xhtml:p>
Your organization's logging policy should dictate which facility to use based on the             <xhtml:span class="inline_block">syslog</xhtml:span>
 daemon in use.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
If not set to the appropriate facility, the PostgreSQL log messages may be intermingled with other applications' log messages, incorrectly routed, or potentially dropped (depending on your             <xhtml:span class="inline_block">syslog</xhtml:span>
 configuration).          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://tools.ietf.org/html/rfc3164#section-4.1.1</xccdf:ident>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) to remediate this setting (in this example, setting it to the                 <xhtml:span class="inline_block">LOCAL1</xhtml:span>
 facility):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set syslog_facility = 'LOCAL1';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ensure_syslog_messages_are_not_suppressed" role="unscored" selected="false" weight="0.0">
        <xccdf:title xml:lang="en">Ensure syslog messages are not suppressed</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>When logging to Syslog and this is on, then each message will be prefixed by an increasing sequence number (such as [2]).</xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls"/>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>Many modern Syslog implementations perform a log optimization and suppress repeated log entries while emitting “--- last message repeated N times ---”. In more modern Syslog implementations, repeated message suppression can be configured (for example, $RepeatedMsgReduction in rsyslog).</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set syslog_sequence_numbers = 'on';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p class="bold">Impact:</xhtml:p>
              <xhtml:p>
                <xhtml:p>If disabled, messages sent to Syslog could be suppressed and not logged. While a message is emitted stating that a given message was repeated and suppressed, the timestamp associated with these suppressed messages are lost, potentially damaging the recreation of an incident timeline.</xhtml:p>
              </xhtml:p>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Ensure_syslog_messages_are_not_lost_due_to_size" role="unscored" selected="false" weight="0.0">
        <xccdf:title xml:lang="en">Ensure syslog messages are not lost due to size</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>PostgreSQL log messages can exceed 1024 bytes, which is a typical size limit for traditional Syslog implementations. When syslog_split_messages is off, PostgreSQL server log messages are delivered to the Syslog service as is, and it is up to the Syslog service to cope with the potentially bulky messages. When syslog_split_messages is on, messages are split by lines, and long lines are split so that they will fit into 1024 bytes.</xhtml:p>
          <xhtml:p>If syslog is ultimately logging to a text file, then the effect will be the same either way, and it is best to leave the setting on, since most syslog implementations either cannot handle large messages or would need to be specially configured to handle them. But if syslog is ultimately writing into some other medium, it might be necessary or more useful to keep messages logically together.</xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls"/>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set syslog_split_messages = 'on';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p class="bold">Impact:</xhtml:p>
              <xhtml:p>
                <xhtml:p>Depending on the Syslog server in use, log messages exceeding 1024 bytes may be lost or, potentially, cause the Syslog server processes to abort.</xhtml:p>
              </xhtml:p>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Ensure_the_program_name_for_PostgreSQL_syslog_messages_is_correct" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the program name for PostgreSQL syslog messages is correct</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">syslog_ident</xhtml:span>
 setting specifies the program name used to identify PostgreSQL messages in syslog logs. An example of a possible program name is             <xhtml:span class="inline_block">postgres</xhtml:span>
.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>If this is not set correctly, it may be difficult or impossible to distinguish PostgreSQL messages from other messages in Syslog logs.</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://tools.ietf.org/html/rfc3164#section-4.1.3</xccdf:ident>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) to remediate this setting (in this example, assuming a program name of                 <xhtml:span class="inline_block">proddb</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set syslog_ident = 'proddb';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)                <br/>
postgres=# show syslog_ident;                <br/>
 syslog_ident                <br/>
--------------                <br/>
 proddb                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658937" value-id="xccdf_org.cisecurity.benchmarks_value_16589371_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658937"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Ensure_the_correct_messages_are_written_to_the_server_log" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the correct messages are written to the server log</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_min_messages</xhtml:span>
 setting specifies the message levels that are written to the server log. Each level includes all the levels that follow it. The lower the level (vertically, below), the fewer messages are sent.          </xhtml:p>
          <xhtml:p>Valid values are:</xhtml:p>
          <xhtml:ul>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG5</xhtml:span>
        &lt;-- exceedingly chatty            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG4</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG3</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG2</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG1</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">INFO</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">NOTICE</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">WARNING</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">ERROR</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOG</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">FATAL</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">PANIC</xhtml:span>
         &lt;-- practically mute            </xhtml:li>
          </xhtml:ul>
          <xhtml:p>
            <xhtml:span class="inline_block">WARNING</xhtml:span>
 is considered the best practice unless indicated otherwise by your organization's logging policy.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Ensure Adequate Audit Log Storage" urn="urn:cisecurity.org:controls:8.0:8:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Ensure adequate storage for logs" urn="urn:cisecurity.org:controls:7.0:6:4">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>If this is not set to the correct value, too many messages or too few messages may be written to the server log.</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) as superuser to remediate this setting (in this example, to set it to                 <xhtml:span class="inline_block">warning</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_min_messages = 'warning';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658938" value-id="xccdf_org.cisecurity.benchmarks_value_16589381_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658938"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Ensure_the_correct_SQL_statements_generating_errors_are_recorded" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure the correct SQL statements generating errors are recorded</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_min_error_statement</xhtml:span>
 setting causes all SQL statements generating errors at or above the specified severity level to be recorded in the server log. Each level includes all the levels that follow it. The lower the level (vertically, below), the fewer messages are recorded. Valid values are:          </xhtml:p>
          <xhtml:ul>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG5</xhtml:span>
        &lt;-- exceedingly chatty            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG4</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG3</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG2</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEBUG1</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">INFO</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">NOTICE</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">WARNING</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">ERROR</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">LOG</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">FATAL</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">PANIC</xhtml:span>
         &lt;-- practically mute            </xhtml:li>
          </xhtml:ul>
          <xhtml:p>
            <xhtml:span class="inline_block">ERROR</xhtml:span>
 is considered the best practice setting. Changes should only be made in accordance with your organization's logging policy.          </xhtml:p>
          <xhtml:p>
            <xhtml:strong>Note:</xhtml:strong>
 To effectively turn off logging of failing statements, set this parameter to             <xhtml:span class="inline_block">PANIC</xhtml:span>
.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Ensure Adequate Audit Log Storage" urn="urn:cisecurity.org:controls:8.0:8:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Ensure adequate storage for logs" urn="urn:cisecurity.org:controls:7.0:6:4">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>If this is not set to the correct value, too many erring SQL statements or too few erring SQL statements may be written to the server log.</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) as superuser to remediate this setting (in the example, to                 <xhtml:span class="inline_block">error</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_min_error_statement = 'error';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658942" value-id="xccdf_org.cisecurity.benchmarks_value_16589421_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658942"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Ensure_debug_print_parse_is_disabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'debug_print_parse' is disabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">debug_print_parse</xhtml:span>
 setting enables printing the resulting parse tree for each executed query. These messages are emitted at the             <xhtml:span class="inline_block">LOG</xhtml:span>
 message level. Unless directed otherwise by your organization's logging policy, it is recommended this setting be disabled by setting it to             <xhtml:span class="inline_block">off</xhtml:span>
.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
Enabling any of the             <xhtml:span class="inline_block">DEBUG</xhtml:span>
 printing variables may cause the logging of sensitive information that would otherwise be omitted based on the configuration of the other logging settings.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set debug_print_parse='off';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658944" value-id="xccdf_org.cisecurity.benchmarks_value_16589441_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658944"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Ensure_debug_print_rewritten_is_disabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'debug_print_rewritten' is disabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">debug_print_rewritten</xhtml:span>
 setting enables printing the query rewriter output for each executed query. These messages are emitted at the             <xhtml:span class="inline_block">LOG</xhtml:span>
 message level. Unless directed otherwise by your organization's logging policy, it is recommended this setting be disabled by setting it to             <xhtml:span class="inline_block">off</xhtml:span>
.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
Enabling any of the             <xhtml:span class="inline_block">DEBUG</xhtml:span>
 printing variables may cause the logging of sensitive information that would otherwise be omitted based on the configuration of the other logging settings.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to disable this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set debug_print_rewritten = 'off';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658945" value-id="xccdf_org.cisecurity.benchmarks_value_16589451_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658945"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Ensure_debug_print_plan_is_disabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'debug_print_plan' is disabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">debug_print_plan</xhtml:span>
 setting enables printing the execution plan for each executed query. These messages are emitted at the             <xhtml:span class="inline_block">LOG</xhtml:span>
 message level. Unless directed otherwise by your organization's logging policy, it is recommended this setting be disabled by setting it to             <xhtml:span class="inline_block">off</xhtml:span>
.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
Enabling any of the             <xhtml:span class="inline_block">DEBUG</xhtml:span>
 printing variables may cause the logging of sensitive information that would otherwise be omitted based on the configuration of the other logging settings.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to disable this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set debug_print_plan = 'off';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658947" value-id="xccdf_org.cisecurity.benchmarks_value_16589471_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658947"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.19_Ensure_debug_pretty_print_is_enabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'debug_pretty_print' is enabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
Enabling             <xhtml:span class="inline_block">debug_pretty_print</xhtml:span>
 indents the messages produced by             <xhtml:span class="inline_block">debug_print_parse</xhtml:span>
,             <xhtml:span class="inline_block">debug_print_rewritten</xhtml:span>
, or             <xhtml:span class="inline_block">debug_print_plan</xhtml:span>
 making them significantly easier to read.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
If this setting is disabled, the "compact" format is used instead, significantly reducing the readability of the             <xhtml:span class="inline_block">DEBUG</xhtml:span>
 statement log messages.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to enable this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set debug_pretty_print = 'on';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p class="bold">Impact:</xhtml:p>
              <xhtml:p>
                <xhtml:p>
Be advised that the aforementioned                   <xhtml:span class="inline_block">DEBUG</xhtml:span>
 printing options are                   <xhtml:strong>disabled</xhtml:strong>
, but if your organizational logging policy requires them to be                   <xhtml:span class="inline_block">on</xhtml:span>
 then this option comes into play.                </xhtml:p>
              </xhtml:p>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658948" value-id="xccdf_org.cisecurity.benchmarks_value_16589481_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658948"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.20_Ensure_log_connections_is_enabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_connections' is enabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
Enabling the             <xhtml:span class="inline_block">log_connections</xhtml:span>
 setting causes each attempted connection to the server to be logged, as well as successful completion of client authentication. This parameter cannot be changed after the session start.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>PostgreSQL does not maintain an internal record of attempted connections to the database for later auditing. It is only by enabling the logging of these attempts that one can determine if unexpected attempts are being made.</xhtml:p>
          <xhtml:p>
Note that enabling this without also enabling             <xhtml:span class="inline_block">log_disconnections</xhtml:span>
 provides little value. Generally, you would enable/disable the pair together.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to enable this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_connections = 'on';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658949" value-id="xccdf_org.cisecurity.benchmarks_value_16589491_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658949"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.21_Ensure_log_disconnections_is_enabled" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_disconnections' is enabled</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
Enabling the             <xhtml:span class="inline_block">log_disconnections</xhtml:span>
 setting logs the end of each session, including session duration. This parameter cannot be changed after the session start.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>PostgreSQL does not maintain the beginning or ending of a connection internally for later review. It is only by enabling the logging of these that one can examine connections for failed attempts, 'over long' duration, or other anomalies.</xhtml:p>
          <xhtml:p>
Note that enabling this without also enabling             <xhtml:span class="inline_block">log_connections</xhtml:span>
 provides little value. Generally, you would enable/disable the pair together.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to enable this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_disconnections = 'on';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658950" value-id="xccdf_org.cisecurity.benchmarks_value_16589501_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658950"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.22_Ensure_log_error_verbosity_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_error_verbosity' is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_error_verbosity</xhtml:span>
 setting specifies the verbosity (amount of detail) of logged messages. Valid values are:          </xhtml:p>
          <xhtml:ul>
            <xhtml:li>
              <xhtml:span class="inline_block">TERSE</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DEFAULT</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">VERBOSE</xhtml:span>
            </xhtml:li>
          </xhtml:ul>
          <xhtml:p>with each containing the fields of the level above it as well as additional fields.</xhtml:p>
          <xhtml:p>
            <xhtml:span class="inline_block">TERSE</xhtml:span>
 excludes the logging of             <xhtml:span class="inline_block">DETAIL</xhtml:span>
,             <xhtml:span class="inline_block">HINT</xhtml:span>
,             <xhtml:span class="inline_block">QUERY</xhtml:span>
, and             <xhtml:span class="inline_block">CONTEXT</xhtml:span>
 error information.          </xhtml:p>
          <xhtml:p>
            <xhtml:span class="inline_block">VERBOSE</xhtml:span>
 output includes the             <xhtml:span class="inline_block">SQLSTATE</xhtml:span>
, error code, and the source code file name, function name, and line number that generated the error.          </xhtml:p>
          <xhtml:p>The appropriate value should be set based on your organization's logging policy.</xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>If this is not set to the correct value, too many details or too few details may be logged.</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) as superuser to remediate this setting (in this example, to                 <xhtml:span class="inline_block">verbose</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_error_verbosity = 'verbose';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658951" value-id="xccdf_org.cisecurity.benchmarks_value_16589511_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658951"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.23_Ensure_log_hostname_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_hostname' is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
Enabling the             <xhtml:span class="inline_block">log_hostname</xhtml:span>
 setting causes the hostname of the connecting host to be logged             <xhtml:strong>in addition</xhtml:strong>
 to the host's IP address for connection log messages. Disabling the setting causes only the connecting host's IP address to be logged, and not the hostname. Unless your organization's logging policy requires hostname logging, it is best to disable this setting so as not to incur the overhead of DNS resolution for each statement that is logged.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
                <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                <controls:asset_type>Applications</controls:asset_type>
                <controls:security_function>Protect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>Depending on your hostname resolution setup, enabling this setting might impose a non-negligible performance penalty. Additionally, the IP addresses that are logged can be resolved to their DNS names when reviewing the logs (unless dynamic hostnames are being used as part of your DHCP setup).</xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>
Execute the following SQL statement(s) to remediate this setting (in this example, to                 <xhtml:span class="inline_block">off</xhtml:span>
):              </xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_hostname='off';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658952" value-id="xccdf_org.cisecurity.benchmarks_value_16589521_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658952"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.24_Ensure_log_line_prefix_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_line_prefix' is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_line_prefix</xhtml:span>
 setting specifies a             <xhtml:span class="inline_block">printf</xhtml:span>
-style string that is prefixed to each logline. If blank, no prefix is used. You should configure this as recommended by the             <xhtml:a href="https://pgbadger.darold.net/">pgBadger</xhtml:a>
 development team unless directed otherwise by your organization's logging policy.          </xhtml:p>
          <xhtml:p>
            <xhtml:span class="inline_block">%</xhtml:span>
 characters begin "escape sequences" that are replaced with status information as outlined below. Unrecognized escapes are ignored. Other characters are copied straight to the logline. Some escapes are only recognized by session processes and will be treated as empty by background processes such as the main server process. Status information may be aligned either left or right by specifying a numeric literal after the             <xhtml:span class="inline_block">%</xhtml:span>
 and before the option. A negative value will cause the status information to be padded on the right with spaces to give it a minimum width, whereas a positive value will pad on the left. Padding can be useful to aid human readability in log files.          </xhtml:p>
          <xhtml:p>Any of the following escape sequences can be used:</xhtml:p>
          <xhtml:code class="code_block">
%a = application name            <br/>
%u = user name            <br/>
%d = database name            <br/>
%r = remote host and port            <br/>
%h = remote host            <br/>
%b = backend type            <br/>
%p = process ID            <br/>
%t = timestamp without milliseconds            <br/>
%m = timestamp with milliseconds            <br/>
%n = timestamp with milliseconds (as a Unix epoch)            <br/>
%Q = query ID (0 if none or not computed)            <br/>
%i = command tag            <br/>
%e = SQL state            <br/>
%c = session ID            <br/>
%l = session line number            <br/>
%s = session start timestamp            <br/>
%v = virtual transaction ID            <br/>
%x = transaction ID (0 if none)            <br/>
%q = stop here in non-session processes            <br/>
%% = '%'
          </xhtml:code>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
Properly setting             <xhtml:span class="inline_block">log_line_prefix</xhtml:span>
 allows for adding additional information to each log entry (such as the user, or the database). Said information may then be of use in auditing or security reviews.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://pgbadger.darold.net/</xccdf:ident>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_line_prefix = '%m [%p]: [%l-1] db=%d,user=%u,app=%a,client=%h';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658953" value-id="xccdf_org.cisecurity.benchmarks_value_16589531_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658953"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.25_Ensure_log_statement_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_statement' is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_statement</xhtml:span>
 setting specifies the types of SQL statements that are logged. Valid values are:          </xhtml:p>
          <xhtml:ul>
            <xhtml:li>
              <xhtml:span class="inline_block">none</xhtml:span>
 (off)            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">ddl</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">mod</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">all</xhtml:span>
 (all statements)            </xhtml:li>
          </xhtml:ul>
          <xhtml:p>
It is recommended this be set to             <xhtml:span class="inline_block">ddl</xhtml:span>
 unless otherwise directed by your organization's logging policy.          </xhtml:p>
          <xhtml:p>
            <xhtml:span class="inline_block">ddl</xhtml:span>
 logs all data definition statements:          </xhtml:p>
          <xhtml:ul>
            <xhtml:li>
              <xhtml:span class="inline_block">CREATE</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">ALTER</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DROP</xhtml:span>
            </xhtml:li>
          </xhtml:ul>
          <xhtml:p>
            <xhtml:span class="inline_block">mod</xhtml:span>
 logs all             <xhtml:span class="inline_block">ddl</xhtml:span>
 statements, plus data-modifying statements:          </xhtml:p>
          <xhtml:ul>
            <xhtml:li>
              <xhtml:span class="inline_block">INSERT</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">UPDATE</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">DELETE</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">TRUNCATE</xhtml:span>
            </xhtml:li>
            <xhtml:li>
              <xhtml:span class="inline_block">COPY FROM</xhtml:span>
            </xhtml:li>
          </xhtml:ul>
          <xhtml:p>
(            <xhtml:span class="inline_block">PREPARE</xhtml:span>
,             <xhtml:span class="inline_block">EXECUTE</xhtml:span>
, and             <xhtml:span class="inline_block">EXPLAIN ANALYZE</xhtml:span>
 statements are also logged if their contained command is of an appropriate type.)          </xhtml:p>
          <xhtml:p>For clients using extended query protocol, logging occurs when an Execute message is received, and values of the Bind parameters are included (with any embedded single-quote marks doubled).</xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>
Setting             <xhtml:span class="inline_block">log_statement</xhtml:span>
 to align with your organization's security and logging policies facilitates later auditing and review of database activities.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) as superuser to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_statement='ddl';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658954" value-id="xccdf_org.cisecurity.benchmarks_value_16589541_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658954"/>
        </check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.26_Ensure_log_timezone_is_set_correctly" role="full" selected="false" weight="1.0">
        <xccdf:title xml:lang="en">Ensure 'log_timezone' is set correctly</xccdf:title>
        <xccdf:description xml:lang="en">
          <xhtml:p>
The             <xhtml:span class="inline_block">log_timezone</xhtml:span>
 setting specifies the time zone to use in timestamps within log messages. This value is cluster-wide, so that all sessions will report timestamps consistently. Unless directed otherwise by your organization's logging policy, set this to either             <xhtml:span class="inline_block">GMT</xhtml:span>
 or             <xhtml:span class="inline_block">UTC</xhtml:span>
.          </xhtml:p>
        </xccdf:description>
        <xccdf:metadata>
          <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
            <controls:framework urn="urn:cisecurity.org:controls:8.0">
              <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
            <controls:framework urn="urn:cisecurity.org:controls:7.0">
              <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                <controls:implementation_groups ig2="true" ig3="true"/>
                <controls:asset_type>Network</controls:asset_type>
                <controls:security_function>Detect</controls:security_function>
              </controls:safeguard>
            </controls:framework>
          </controls:cis_controls>
        </xccdf:metadata>
        <xccdf:rationale xml:lang="en">
          <xhtml:p>Log entry timestamps should be configured for an appropriate time zone as defined by your organization's logging policy to ensure a lack of confusion around when a logged event occurred.</xhtml:p>
          <xhtml:p>
Note that this setting affects only the timestamps present in the logs. It does not affect the time zone in use by the database itself (for example,             <xhtml:span class="inline_block">select now()</xhtml:span>
), nor does it affect the host's time zone.          </xhtml:p>
        </xccdf:rationale>
        <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
        <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
        <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-logging.html</xccdf:ident>
        <xccdf:ident system="URL">https://en.wikipedia.org/wiki/Time_zone</xccdf:ident>
        <xccdf:fixtext xml:lang="en">
          <xhtml:div>
            <xhtml:p>
              <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
              <xhtml:code class="code_block">
postgres=# alter system set log_timezone = 'GMT';                <br/>
ALTER SYSTEM                <br/>
postgres=# select pg_reload_conf();                <br/>
 pg_reload_conf                <br/>
----------------                <br/>
 t                <br/>
(1 row)
              </xhtml:code>
              <xhtml:p/>
            </xhtml:p>
          </xhtml:div>
        </xccdf:fixtext>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658955" value-id="xccdf_org.cisecurity.benchmarks_value_16589551_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658955"/>
        </check>
      </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_the_PostgreSQL_Audit_Extension_pgAudit_is_enabled" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure the PostgreSQL Audit Extension (pgAudit) is enabled</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
The PostgreSQL Audit Extension (          <xhtml:a href="https://www.pgaudit.org/">pgAudit</xhtml:a>
) provides detailed session and/or object audit logging via the standard PostgreSQL logging facility. The goal of pgAudit is to provide PostgreSQL users with the capability to produce audit logs often required to comply with government, financial, or ISO certifications.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Collect Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:2">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Network</controls:asset_type>
              <controls:security_function>Detect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Network</controls:asset_type>
              <controls:security_function>Detect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
        <notes:notes xml:lang="en">
          <xhtml:p>pgAudit versions relate to PostgreSQL major versions; ensure you install the pgAudit package that matches your PostgreSQL version.</xhtml:p>
        </notes:notes>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
Basic statement logging can be provided by the standard logging facility with           <xhtml:span class="inline_block">log_statement = all</xhtml:span>
. This is acceptable for monitoring and other uses but does not provide the level of detail generally required for an audit. It is not enough to have a list of all the operations performed against the database, it must also be possible to find particular statements that are of interest to an auditor. The standard logging facility shows what the user requested, while pgAudit focuses on the details of what happened while the database was satisfying the request.        </xhtml:p>
        <xhtml:p>
When logging           <xhtml:span class="inline_block">SELECT</xhtml:span>
 and           <xhtml:span class="inline_block">DML</xhtml:span>
 statements, pgAudit can be configured to log a separate entry for each relation referenced in a statement. No parsing is required to find all statements that touch a particular table. In fact, the goal is that the statement text is provided primarily for deep forensics and should not be required for an audit.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.pgaudit.org/</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>To install and enable pgAudit, simply install the appropriate rpm from the PGDG repo:</xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# dnf -y install pgaudit16_14              <br/>
[snip]              <br/>
Installed:              <br/>
  pgaudit16_14-1.6.0-1.rhel8.x86_64              <br/>
              <br/>
Complete!
            </xhtml:code>
            <xhtml:p>
pgAudit is now installed and ready to be configured. Next, we need to alter the               <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 configuration file to:            </xhtml:p>
            <xhtml:ul>
              <xhtml:li>
enable pgAudit as an extension in the                 <xhtml:span class="inline_block">shared_preload_libraries</xhtml:span>
 parameter              </xhtml:li>
              <xhtml:li>
indicate which classes of statements we want to log via the                 <xhtml:span class="inline_block">pgaudit.log</xhtml:span>
 parameter              </xhtml:li>
            </xhtml:ul>
            <xhtml:p>and, finally, restart the PostgreSQL service:</xhtml:p>
            <xhtml:code class="code_block">$ vi ${PGDATA}/postgresql.conf
</xhtml:code>
            <xhtml:p>
Find the               <xhtml:span class="inline_block">shared_preload_libraries</xhtml:span>
 entry, and add 'pgaudit' to it (preserving any existing entries):            </xhtml:p>
            <xhtml:code class="code_block">
shared_preload_libraries = 'pgaudit'              <br/>
              <br/>
OR              <br/>
              <br/>
shared_preload_libraries = 'pgaudit,somethingelse'
            </xhtml:code>
            <xhtml:p>
Now, add a new               <xhtml:span class="inline_block">pgaudit</xhtml:span>
-specific entry:            </xhtml:p>
            <xhtml:code class="code_block">
# for this example we are logging the ddl and write operations              <br/>
pgaudit.log='ddl,write'
            </xhtml:code>
            <xhtml:p>Restart the PostgreSQL server for changes to take affect:</xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# systemctl restart postgresql-14              <br/>
# systemctl status postgresql-14|grep 'ago$'              <br/>
   Active: active (running) since [date] 10s ago
            </xhtml:code>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>
Depending on settings, it is possible for pgAudit to generate an                 <xhtml:em>enormous volume of logging</xhtml:em>
. Be careful to determine exactly what needs to be audit logged in your environment to avoid logging too much.              </xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658956" value-id="xccdf_org.cisecurity.benchmarks_value_16589561_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658956"/>
        </check>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658957"/>
        </check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_4_User_Access_and_Authorization">
    <xccdf:title xml:lang="en">User Access and Authorization</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>The capability to use database resources at a given level, or user authorization rules, allows for user manipulation of the various parts of the PostgreSQL database. These authorizations must be structured to block unauthorized use and/or corruption of vital data and services by setting restrictions on user capabilities.</xhtml:p>
    </xccdf:description>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.1_Ensure_sudo_is_configured_correctly" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure sudo is configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
It is common to have more than one authorized individual administering the PostgreSQL service at the Operating System level. It is also quite common to permit login privileges to individuals on a PostgreSQL host who otherwise are not authorized to access the server's data cluster and files. Administering the PostgreSQL data cluster, as opposed to its data, is to be accomplished via a localhost login of a regular UNIX user account. Access to the           <xhtml:span class="inline_block">postgres</xhtml:span>
 superuser account is restricted in such a manner as to interdict unauthorized access.           <xhtml:span class="inline_block">sudo</xhtml:span>
 satisfies the requirements by escalating ordinary user account privileges as the PostgreSQL RDBMS superuser.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Ensure the Use of Dedicated Administrative Accounts" urn="urn:cisecurity.org:controls:7.0:4:3">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
Without           <xhtml:span class="inline_block">sudo</xhtml:span>
, there would be no capabilities to strictly control access to the superuser account nor to securely and authoritatively audit its use.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.sudo.ws/man/1.8.15/sudo.man.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.sudo.ws/man/1.8.17/visudo.man.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
As superuser               <xhtml:span class="inline_block">root</xhtml:span>
, execute the following commands:            </xhtml:p>
            <xhtml:code class="code_block">
# echo '%dba ALL= /bin/su - postgres' &gt; /etc/sudoers.d/postgres              <br/>
# chmod 600 /etc/sudoers.d/postgres
            </xhtml:code>
            <xhtml:p>
This grants any Operating System user that is a member of the               <xhtml:span class="inline_block">dba</xhtml:span>
 group to use               <xhtml:span class="inline_block">sudo su - postgres</xhtml:span>
 to become the               <xhtml:span class="inline_block">postgres</xhtml:span>
 user.            </xhtml:p>
            <xhtml:p>Ensure that all Operating System user's that need such access are members of the group.</xhtml:p>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_excessive_administrative_privileges_are_revoked" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure excessive administrative privileges are revoked</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>With respect to PostgreSQL administrative SQL commands, only superusers should have elevated privileges. PostgreSQL regular, or application, users should not possess the ability to create roles, create new databases, manage replication, or perform any other action deemed privileged. Typically, regular users should only be granted the minimal set of privileges commensurate with managing the application:</xhtml:p>
        <xhtml:ul>
          <xhtml:li>
DDL (            <xhtml:span class="inline_block">create table</xhtml:span>
,             <xhtml:span class="inline_block">create view</xhtml:span>
,             <xhtml:span class="inline_block">create index</xhtml:span>
, etc.)          </xhtml:li>
          <xhtml:li>
DML (            <xhtml:span class="inline_block">select</xhtml:span>
,             <xhtml:span class="inline_block">insert</xhtml:span>
,             <xhtml:span class="inline_block">update</xhtml:span>
,             <xhtml:span class="inline_block">delete</xhtml:span>
)          </xhtml:li>
        </xhtml:ul>
        <xhtml:p>Further, it has become best practice to create separate roles for DDL and DML. Given an application called 'payroll', one would create the following users:</xhtml:p>
        <xhtml:ul>
          <xhtml:li>
            <xhtml:span class="inline_block">payroll_owner</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">payroll_user</xhtml:span>
          </xhtml:li>
        </xhtml:ul>
        <xhtml:p>
Any DDL privileges would be granted to the           <xhtml:span class="inline_block">payroll_owner</xhtml:span>
 account only, while DML privileges would be given to the           <xhtml:span class="inline_block">payroll_user</xhtml:span>
 account only. This prevents accidental creation/altering/dropping of database objects by application code that runs as the           <xhtml:span class="inline_block">payroll_user</xhtml:span>
 account.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>By not restricting global administrative commands to superusers only, regular users granted excessive privileges may execute administrative commands with unintended and undesirable results.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-revoke.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-createrole.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-alterrole.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
If any regular or application users have been granted excessive administrative rights, those privileges should be removed immediately via the PostgreSQL               <xhtml:span class="inline_block">ALTER ROLE</xhtml:span>
 SQL command. Using the same example above, the following SQL statements revoke all unnecessary elevated administrative privileges from the regular user               <xhtml:span class="inline_block">appuser</xhtml:span>
:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
postgres              <br/>
# psql -c "ALTER ROLE appuser NOSUPERUSER;"              <br/>
ALTER ROLE              <br/>
# psql -c "ALTER ROLE appuser NOCREATEROLE;"              <br/>
ALTER ROLE              <br/>
# psql -c "ALTER ROLE appuser NOCREATEDB;"              <br/>
ALTER ROLE              <br/>
# psql -c "ALTER ROLE appuser NOREPLICATION;"              <br/>
ALTER ROLE              <br/>
# psql -c "ALTER ROLE appuser NOBYPASSRLS;"              <br/>
ALTER ROLE              <br/>
# psql -c "ALTER ROLE appuser NOINHERIT;"              <br/>
ALTER ROLE
            </xhtml:code>
            <xhtml:p>
Verify the               <xhtml:span class="inline_block">appuser</xhtml:span>
 now passes your check by having no defined Attributes:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
postgres              <br/>
# psql -c "\du appuser"              <br/>
          List of roles              <br/>
Role name | Attributes | Member of              <br/>
----------+------------+-----------              <br/>
appuser   |            | {}
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.3_Ensure_excessive_function_privileges_are_revoked" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure excessive function privileges are revoked</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>In certain situations, to provide the required functionality, PostgreSQL needs to execute internal logic (stored procedures, functions, triggers, etc.) and/or external code modules with elevated privileges. However, if the privileges required for execution are at a higher level than the privileges assigned to organizational users invoking the functionality applications/programs, those users are indirectly provided with greater privileges than assigned by their organization. This is known as privilege elevation. Privilege elevation must be utilized only where necessary. Execute privileges for application functions should be restricted to authorized users only.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>Ideally, all application source code should be vetted to validate interactions between the application and the logic in the database, but this is usually not possible or feasible with available resources even if the source code is available. The DBA should attempt to obtain assurances from the development organization that this issue has been addressed and should document what has been discovered. The DBA should also inspect all application logic stored in the database (in the form of functions, rules, and triggers) for excessive privileges.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/catalog-pg-proc.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-grant.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-revoke.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-createfunction.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Where possible, revoke               <xhtml:span class="inline_block">SECURITY DEFINER</xhtml:span>
 on PostgreSQL functions. To change a               <xhtml:span class="inline_block">SECURITY DEFINER</xhtml:span>
 function to               <xhtml:span class="inline_block">SECURITY INVOKER</xhtml:span>
, run the following SQL:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# sudo su - postgres              <br/>
# psql -c "ALTER FUNCTION [functionname] SECURITY INVOKER;"
            </xhtml:code>
            <xhtml:p>
If it is not possible to revoke               <xhtml:span class="inline_block">SECURITY DEFINER</xhtml:span>
, ensure the function can be executed by only the accounts that absolutely need such functionality:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# SELECT proname, proacl FROM pg_proc WHERE proname = 'delete_customer';              <br/>
     proname     |                         proacl              <br/>
-----------------+--------------------------------------------------------              <br/>
 delete_customer | {=X/postgres,postgres=X/postgres,appwriter=X/postgres}              <br/>
(1 row)              <br/>
postgres=# REVOKE EXECUTE ON FUNCTION delete_customer(integer,boolean) FROM appreader;              <br/>
REVOKE              <br/>
postgres=# SELECT proname, proacl FROM pg_proc WHERE proname = 'delete_customer';              <br/>
     proname     |                         proacl              <br/>
-----------------+--------------------------------------------------------              <br/>
 delete_customer | {=X/postgres,postgres=X/postgres}              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p>
Based on the output above,               <xhtml:span class="inline_block">appreader=X/postgres</xhtml:span>
 no longer exists in the               <xhtml:span class="inline_block">proacl</xhtml:span>
 column results returned from the query and confirms               <xhtml:span class="inline_block">appreader</xhtml:span>
 is no longer granted execute privilege on the function.            </xhtml:p>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658915" value-id="xccdf_org.cisecurity.benchmarks_value_16589151_var"/>
        <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
        <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658915"/>
      </check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_excessive_DML_privileges_are_revoked" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure excessive DML privileges are revoked</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>DML (insert, update, delete) operations at the table level should be restricted to only authorized users. PostgreSQL manages table-level DML permissions via the GRANT statement.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>Excessive DML grants can lead to unprivileged users changing or deleting information without proper authorization.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-grant.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-revoke.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/functions-info.html#functions-info-access-table</xccdf:ident>
      <xccdf:ident system="URL">https://wiki.postgresql.org/wiki/A_Guide_to_CVE-2018-1058:_Protect_Your_Search_Path</xccdf:ident>
      <xccdf:ident system="URL">https://nvd.nist.gov/vuln/detail/CVE-2018-1058</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
If a given database user has been granted excessive DML privileges for a given database table, those privileges should be revoked immediately using the               <xhtml:span class="inline_block">REVOKE</xhtml:span>
 SQL command.            </xhtml:p>
            <xhtml:p>
Continuing with the example above, remove unauthorized grants for               <xhtml:span class="inline_block">appreader</xhtml:span>
 user using the               <xhtml:span class="inline_block">REVOKE</xhtml:span>
 statement and verify the Boolean values are now false.            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# REVOKE INSERT, UPDATE, DELETE ON TABLE customer FROM appreader;              <br/>
REVOKE              <br/>
              <br/>
postgres=# select t.tablename, u.usename,              <br/>
       has_table_privilege(u.usename, t.tablename, 'select') as select,              <br/>
       has_table_privilege(u.usename, t.tablename, 'insert') as insert,              <br/>
       has_table_privilege(u.usename, t.tablename, 'update') as update,              <br/>
       has_table_privilege(u.usename, t.tablename, 'delete') as delete              <br/>
from   pg_tables t, pg_user u              <br/>
where  t.tablename = 'customer'               <br/>
and    u.usename in ('appwriter','appreader');              <br/>
              <br/>
tablename |  usename  | select | insert | update | delete              <br/>
----------+-----------+--------+--------+--------+--------              <br/>
customer  | appwriter | t      | t      | t      | t              <br/>
customer  | appreader | t      | f      | f      | f              <br/>
(2 rows)
            </xhtml:code>
            <xhtml:p>
With the publication of               <xhtml:a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1058">CVE-2018-1058</xhtml:a>
, it is also recommended that all privileges be revoked from the               <xhtml:span class="inline_block">public</xhtml:span>
 schema for all users on all databases:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# REVOKE CREATE ON SCHEMA public FROM PUBLIC;              <br/>
REVOKE
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.5_Ensure_Row_Level_Security_RLS_is_configured_correctly" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure Row Level Security (RLS) is configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
In addition to the SQL-standard privilege system available through           <xhtml:span class="inline_block">GRANT</xhtml:span>
, tables can have row security policies that restrict, on a per-user basis, which individual rows can be returned by normal queries or inserted, updated, or deleted by data modification commands. This feature is also known as Row Level Security (RLS).        </xhtml:p>
        <xhtml:p>
By default, tables do not have any policies, so if a user has access privileges to a table according to the SQL privilege system, all rows within it are equally available for querying or updating. Row security policies can be specific to commands, to roles, or to both. A policy can be specified to apply to           <xhtml:span class="inline_block">ALL</xhtml:span>
 commands, or to any combination of           <xhtml:span class="inline_block">SELECT</xhtml:span>
,           <xhtml:span class="inline_block">INSERT</xhtml:span>
,           <xhtml:span class="inline_block">UPDATE</xhtml:span>
, or           <xhtml:span class="inline_block">DELETE</xhtml:span>
. Multiple roles can be assigned to a given policy, and normal role membership and inheritance rules apply.        </xhtml:p>
        <xhtml:p>
If you use RLS and apply restrictive policies to certain users, it is important that the           <xhtml:span class="inline_block">Bypass RLS</xhtml:span>
 privilege not be granted to any unauthorized users. This privilege overrides RLS-enabled tables and associated policies. Generally, only superusers and elevated users should possess this privilege.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>If RLS policies and privileges are not configured correctly, users could perform actions on tables that they are not authorized to perform, such as inserting, updating, or deleting rows.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/ddl-rowsecurity.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/sql-alterrole.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Again, we are using the example from the PostgreSQL documentation using the example               <xhtml:span class="inline_block">passwd</xhtml:span>
 table. We will create three database roles to illustrate the workings of RLS:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# CREATE ROLE admin;              <br/>
CREATE ROLE              <br/>
postgres=# CREATE ROLE bob;              <br/>
CREATE ROLE              <br/>
postgres=# CREATE ROLE alice;              <br/>
CREATE ROLE
            </xhtml:code>
            <xhtml:p>
Now, we will insert known data into the               <xhtml:span class="inline_block">passwd</xhtml:span>
 table:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# INSERT INTO passwd VALUES              <br/>
  ('admin','xxx',0,0,'Admin','111-222-3333',null,'/root','/bin/dash');              <br/>
INSERT 0 1              <br/>
postgres=# INSERT INTO passwd VALUES              <br/>
  ('bob','xxx',1,1,'Bob','123-456-7890',null,'/home/bob','/bin/zsh');              <br/>
INSERT 0 1              <br/>
postgres=# INSERT INTO passwd VALUES              <br/>
  ('alice','xxx',2,1,'Alice','098-765-4321',null,'/home/alice','/bin/zsh');              <br/>
INSERT 0 1
            </xhtml:code>
            <xhtml:p>And we will enable RLS on the table:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# ALTER TABLE passwd ENABLE ROW LEVEL SECURITY;              <br/>
ALTER TABLE
            </xhtml:code>
            <xhtml:p>Now that RLS is enabled, we need to define one or more policies. Create the administrator policy and allow it access to all rows:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# CREATE POLICY admin_all ON passwd TO admin USING (true) WITH CHECK (true);              <br/>
CREATE POLICY
            </xhtml:code>
            <xhtml:p>
Create a policy for normal users to               <xhtml:em>view</xhtml:em>
 all rows:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# CREATE POLICY all_view ON passwd FOR SELECT USING (true);              <br/>
CREATE POLICY
            </xhtml:code>
            <xhtml:p>Create a policy for normal users that allows them to update only their own rows and to limit what values can be set for their login shell:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# CREATE POLICY user_mod ON passwd FOR UPDATE              <br/>
  USING (current_user = user_name)              <br/>
  WITH CHECK (              <br/>
    current_user = user_name AND              <br/>
    shell IN ('/bin/bash','/bin/sh','/bin/dash','/bin/zsh','/bin/tcsh')              <br/>
  );              <br/>
CREATE POLICY
            </xhtml:code>
            <xhtml:p>
Grant all the normal rights on the table to the               <xhtml:span class="inline_block">admin</xhtml:span>
 user:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# GRANT SELECT, INSERT, UPDATE, DELETE ON passwd TO admin;              <br/>
GRANT
            </xhtml:code>
            <xhtml:p>Grant only select access on non-sensitive columns to everyone:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# GRANT SELECT              <br/>
  (user_name, uid, gid, real_name, home_phone, extra_info, home_dir, shell)              <br/>
  ON passwd TO public;              <br/>
GRANT
            </xhtml:code>
            <xhtml:p>Grant update to only the sensitive columns:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# GRANT UPDATE              <br/>
  (pwhash, real_name, home_phone, extra_info, shell)              <br/>
  ON passwd TO public;              <br/>
GRANT
            </xhtml:code>
            <xhtml:p>
Ensure that no one has been granted               <xhtml:span class="inline_block">Bypass RLS</xhtml:span>
 inadvertently, by running the               <xhtml:span class="inline_block">psql</xhtml:span>
 display command               <xhtml:span class="inline_block">\du+</xhtml:span>
. If unauthorized users do have               <xhtml:span class="inline_block">Bypass RLS</xhtml:span>
 granted then resolve this using the               <xhtml:span class="inline_block">ALTER ROLE </xhtml:span>
              <xhtml:em>
                <xhtml:span class="inline_block">&lt;user&gt;</xhtml:span>
              </xhtml:em>
              <xhtml:span class="inline_block"> NOBYPASSRLS;</xhtml:span>
 command.            </xhtml:p>
            <xhtml:p>
You can now verify that 'admin', 'bob', and 'alice' are properly restricted by querying the               <xhtml:span class="inline_block">passwd</xhtml:span>
 table as each of these roles.            </xhtml:p>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_the_set_user_extension_is_installed" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure the set_user extension is installed</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>PostgreSQL access to the superuser database role must be controlled and audited to prevent unauthorized access.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Ensure the Use of Dedicated Administrative Accounts" urn="urn:cisecurity.org:controls:7.0:4:3">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
Even when reducing and limiting the access to the superuser role as described earlier in this benchmark, it is still difficult to determine who accessed the superuser role and what actions were taken using that role. As such, it is ideal to prevent anyone from logging in as the superuser and forcing them to escalate their role. This model is used at the OS level by the use of           <xhtml:span class="inline_block">sudo</xhtml:span>
 and should be emulated in the database. The           <xhtml:span class="inline_block">set_user</xhtml:span>
 extension allows for this setup.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://github.com/pgaudit/set_user</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
At the time this benchmark is being written,               <xhtml:span class="inline_block">set_user</xhtml:span>
 is not available as a package in the PGDG repository. As such, we will build it from source:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# dnf -y install postgresql14-devel              <br/>
[snip]              <br/>
Installed:              <br/>
  clang-11.0.0-1.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  clang-devel-11.0.0-1.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  clang-libs-11.0.0-1.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  clang-tools-extra-11.0.0-1.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  cmake-filesystem-3.18.2-11.el8_4.x86_64              <br/>
  compiler-rt-11.0.0-1.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  gcc-c++-8.4.1-1.el8.x86_64              <br/>
  libicu-devel-60.3-2.el8_1.x86_64              <br/>
  libomp-11.0.0-1.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  libomp-devel-11.0.0-1.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  libstdc++-devel-8.4.1-1.el8.x86_64              <br/>
  llvm-11.0.0-2.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  llvm-devel-11.0.0-2.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  llvm-libs-11.0.0-2.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  llvm-static-11.0.0-2.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  llvm-test-11.0.0-2.module+el8.4.0+8598+a071fcd5.x86_64              <br/>
  postgresql14-devel-14-beta2_1PGDG.rhel8.x86_64              <br/>
  python3-lit-0.11.0-1.module+el8.4.0+8598+a071fcd5.noarch              <br/>
              <br/>
Complete!
            </xhtml:code>
            <xhtml:code class="code_block">
# curl -L -o REL3_0_0.tar.gz https://github.com/pgaudit/set_user/archive/refs/tags/REL3_0_0.tar.gz              <br/>
# tar xf REL3_0_0.tar.gz              <br/>
# cd set_user-REL3_0_0              <br/>
# export PATH=/usr/pgsql-14/bin:$PATH              <br/>
# make USE_PGXS=1 install              <br/>
gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wimplicit-fallthrough=3 -Wcast-function-type -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fPIC -I. -I./ -I/usr/pgsql-14/include/server -I/usr/pgsql-14/include/internal  -D_GNU_SOURCE -I/usr/include/libxml2  -I/usr/include  -c -o set_user.o set_user.c              <br/>
gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wimplicit-fallthrough=3 -Wcast-function-type -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fPIC set_user.o -L/usr/pgsql-14/lib -Wl,--as-needed -L/usr/lib64  -L/usr/lib64 -Wl,--as-needed -Wl,-rpath,'/usr/pgsql-14/lib',--enable-new-dtags -lm  -shared -o set_user.so              <br/>
/usr/bin/clang -Wno-ignored-attributes -fno-strict-aliasing -fwrapv -O2  -I. -I./ -I/usr/pgsql-14/include/server -I/usr/pgsql-14/include/internal  -D_GNU_SOURCE -I/usr/include/libxml2  -I/usr/include -flto=thin -emit-llvm -c -o set_user.bc set_user.c              <br/>
/usr/bin/mkdir -p '/usr/pgsql-14/share/extension'              <br/>
/usr/bin/mkdir -p '/usr/pgsql-14/share/extension'              <br/>
/usr/bin/mkdir -p '/usr/pgsql-14/lib'              <br/>
/usr/bin/mkdir -p "/usr/pgsql-14/include"              <br/>
/usr/bin/install -c -m 644 "set_user.h" "/usr/pgsql-14/include"              <br/>
/usr/bin/install -c -m 644 .//set_user.control '/usr/pgsql-14/share/extension/'              <br/>
/usr/bin/install -c -m 644 .//set_user--3.0.sql .//set_user--2.0--3.0.sql .//set_user--1.6--2.0.sql .//set_user--1.5--1.6.sql .//set_user--1.4--1.5.sql .//set_user--1.1--1.4.sql .//set_user--1.0--1.1.sql  '/usr/pgsql-14/share/extension/'              <br/>
/usr/bin/install -c -m 755  set_user.so '/usr/pgsql-14/lib/'              <br/>
/usr/bin/mkdir -p '/usr/pgsql-14/lib/bitcode/set_user'              <br/>
/usr/bin/mkdir -p '/usr/pgsql-14/lib/bitcode'/set_user/              <br/>
/usr/bin/install -c -m 644 set_user.bc '/usr/pgsql-14/lib/bitcode'/set_user/./              <br/>
cd '/usr/pgsql-14/lib/bitcode' &amp;&amp; /usr/bin/llvm-lto -thinlto -thinlto-action=thinlink -o set_user.index.bc set_user/set_user.bc              <br/>
#
            </xhtml:code>
            <xhtml:p>
Now that               <xhtml:span class="inline_block">set_user</xhtml:span>
 is installed, we need to tell PostgreSQL to load its library:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# vi ~postgres/14/data/postgresql.conf
            </xhtml:code>
            <xhtml:p>
Find the               <xhtml:span class="inline_block">shared_preload_libraries</xhtml:span>
 entry, and add 'set_user' to it (preserving any existing entries):            </xhtml:p>
            <xhtml:code class="code_block">
shared_preload_libraries = 'set_user'              <br/>
              <br/>
OR              <br/>
              <br/>
shared_preload_libraries = 'set_user,pgaudit,somethingelse'
            </xhtml:code>
            <xhtml:p>Restart the PostgreSQL server for changes to take effect:</xhtml:p>
            <xhtml:code class="code_block">
# systemctl restart postgresql-14              <br/>
# systemctl status postgresql-14|grep 'ago$'              <br/>
   Active: active (running) since [timestamp]; 1s ago
            </xhtml:code>
            <xhtml:p>And now, we can install the extension with SQL:</xhtml:p>
            <xhtml:code class="code_block">
# su - postgres              <br/>
# psql              <br/>
postgres=# select * from pg_available_extensions where name = 'set_user';              <br/>
  name   | default_version | installed_version |                  comment              <br/>
---------+-----------------+-------------------+-----------------------------              <br/>
set_user | 3.0             |                   | similar to SET ROLE but with              <br/>
         |                 |                   | added logging              <br/>
(1 row)              <br/>
              <br/>
postgres=# create extension set_user;              <br/>
CREATE EXTENSION              <br/>
postgres=# select * from pg_available_extensions where name = 'set_user';              <br/>
  name   | default_version | installed_version |                  comment              <br/>
---------+-----------------+-------------------+-----------------------------              <br/>
set_user | 3.0             | 3.0               | similar to SET ROLE but with              <br/>
         |                 |                   | added logging              <br/>
              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p>
Now, we use               <xhtml:span class="inline_block">GRANT</xhtml:span>
 to configure each DBA role to allow it to use the               <xhtml:span class="inline_block">set_user</xhtml:span>
 functions. In the example below, we will configure my db user               <xhtml:span class="inline_block">doug</xhtml:span>
. (You would do this for each DBA's normal user role.)            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# grant execute on function set_user(text) to doug;              <br/>
GRANT              <br/>
postgres=# grant execute on function set_user_u(text) to doug;              <br/>
GRANT
            </xhtml:code>
            <xhtml:p>Connect to PostgreSQL as yourself and verify it works as expected:</xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
psql              <br/>
# psql -U doug -d postgres              <br/>
postgres=&gt; select set_user('postgres');              <br/>
ERROR:  switching to superuser not allowed              <br/>
HINT:  Use 'set_user_u' to escalate.              <br/>
postgres=&gt; select set_user_u('postgres');              <br/>
 set_user_u              <br/>
------------              <br/>
 OK              <br/>
(1 row)              <br/>
              <br/>
postgres=# select current_user, session_user;              <br/>
 current_user | session_user              <br/>
--------------+--------------              <br/>
 postgres     | doug              <br/>
(1 row)              <br/>
              <br/>
postgres=# select reset_user();              <br/>
 reset_user              <br/>
------------              <br/>
 OK              <br/>
(1 row)              <br/>
              <br/>
postgres=&gt; select current_user, session_user;              <br/>
 current_user | session_user              <br/>
--------------+--------------              <br/>
 doug         | doug              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p>
Once all DBA's normal user accounts have been               <xhtml:span class="inline_block">GRANT</xhtml:span>
ed permission, revoke the ability to login as the               <xhtml:span class="inline_block">postgres</xhtml:span>
 (superuser) user:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# alter user postgres NOLOGIN;              <br/>
ALTER ROLE
            </xhtml:code>
            <xhtml:p>Which results in:</xhtml:p>
            <xhtml:code class="code_block">
$ psql              <br/>
psql: FATAL:  role "postgres" is not permitted to log in              <br/>
$ psql -U doug -d postgres              <br/>
psql (13.1)
            </xhtml:code>
            <xhtml:p>Make sure there are no other roles that are superuser's and can still login:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# SELECT rolname FROM pg_authid WHERE rolsuper and rolcanlogin;              <br/>
 rolname              <br/>
---------              <br/>
(0 rows)
            </xhtml:code>
            <xhtml:p>Verify there are no unprivileged roles that can login directly that are granted a superuser role even if it is multiple layers removed:</xhtml:p>
            <xhtml:code class="code_block">
postgres=#               <br/>
-- Verify there are no unprivileged roles that can login directly              <br/>
-- that are granted a superuser role even if it is multiple layers              <br/>
-- removed              <br/>
DROP VIEW IF EXISTS roletree;              <br/>
CREATE OR REPLACE VIEW roletree AS              <br/>
WITH RECURSIVE              <br/>
roltree AS (              <br/>
  SELECT u.rolname AS rolname,              <br/>
         u.oid AS roloid,              <br/>
         u.rolcanlogin,              <br/>
         u.rolsuper,              <br/>
         '{}'::name[] AS rolparents,              <br/>
         NULL::oid AS parent_roloid,              <br/>
         NULL::name AS parent_rolname              <br/>
  FROM pg_catalog.pg_authid u              <br/>
  LEFT JOIN pg_catalog.pg_auth_members m on u.oid = m.member              <br/>
  LEFT JOIN pg_catalog.pg_authid g on m.roleid = g.oid              <br/>
  WHERE g.oid IS NULL              <br/>
  UNION ALL              <br/>
  SELECT u.rolname AS rolname,              <br/>
         u.oid AS roloid,              <br/>
         u.rolcanlogin,              <br/>
         u.rolsuper,              <br/>
         t.rolparents || g.rolname AS rolparents,              <br/>
         g.oid AS parent_roloid,              <br/>
         g.rolname AS parent_rolname              <br/>
  FROM pg_catalog.pg_authid u              <br/>
  JOIN pg_catalog.pg_auth_members m on u.oid = m.member              <br/>
  JOIN pg_catalog.pg_authid g on m.roleid = g.oid              <br/>
  JOIN roltree t on t.roloid = g.oid              <br/>
)              <br/>
SELECT              <br/>
  r.rolname,              <br/>
  r.roloid,              <br/>
  r.rolcanlogin,              <br/>
  r.rolsuper,              <br/>
  r.rolparents              <br/>
FROM roltree r              <br/>
ORDER BY 1;              <br/>
              <br/>
SELECT              <br/>
  ro.rolname,              <br/>
  ro.roloid,              <br/>
  ro.rolcanlogin,              <br/>
  ro.rolsuper,              <br/>
  ro.rolparents              <br/>
FROM roletree ro              <br/>
WHERE (ro.rolcanlogin AND ro.rolsuper)              <br/>
OR              <br/>
(              <br/>
    ro.rolcanlogin AND EXISTS              <br/>
    (              <br/>
      SELECT TRUE FROM roletree ri              <br/>
      WHERE ri.rolname = ANY (ro.rolparents)              <br/>
      AND ri.rolsuper              <br/>
    )              <br/>
);              <br/>
 rolname | roloid | rolcanlogin | rolsuper | rolparents              <br/>
---------+--------+-------------+----------+------------              <br/>
(0 rows)
            </xhtml:code>
            <xhtml:p>
If any roles are identified by this query, use               <xhtml:span class="inline_block">REVOKE</xhtml:span>
 to correct them.            </xhtml:p>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>
Much like the venerable                 <xhtml:span class="inline_block">sudo</xhtml:span>
 does for the OS,                 <xhtml:span class="inline_block">set_user</xhtml:span>
 manages superuser access for PostgreSQL. Complete configuration of                 <xhtml:span class="inline_block">set_user</xhtml:span>
 is documented at the extension's                 <xhtml:a href="https://github.com/pgaudit/set_user">website</xhtml:a>
 and should be reviewed to ensure the logging entries that your organization cares about are properly configured.              </xhtml:p>
              <xhtml:p>
Note that some external tools assume they can connect as the                 <xhtml:span class="inline_block">postgres</xhtml:span>
 user by default and this is no longer true when                 <xhtml:span class="inline_block">set_user</xhtml:span>
 is deployed. You may find some tools need different options, reconfigured, or even abandoned to compensate for this.              </xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
        <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658919"/>
      </check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.7_Make_use_of_predefined_roles" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Make use of predefined roles</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>PostgreSQL provides a set of predefined roles that provide access to certain, commonly needed, privileged capabilities and information. Administrators can GRANT these roles to users and/or other roles in their environment, providing those users with access to the specified capabilities and information.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>In keeping with the principle of least privilege, judicious use of the PostgreSQL predefined roles can greatly limit the access to privileged, or superuser, access.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/predefined-roles.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
If you've determined that one or more of the predefined roles can be used, simply               <xhtml:span class="inline_block">GRANT</xhtml:span>
 it:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# GRANT pg_monitor TO doug;              <br/>
GRANT ROLE
            </xhtml:code>
            <xhtml:p>
And then remove               <xhtml:span class="inline_block">superuser</xhtml:span>
 from the account:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# ALTER ROLE doug NOSUPERUSER;              <br/>
ALTER ROLE              <br/>
postgres=# select rolname from pg_roles where rolsuper is true;              <br/>
 rolname                <br/>
----------              <br/>
 postgres              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_5_Connection_and_Login">
    <xccdf:title xml:lang="en">Connection and Login</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>The restrictions on client/user connections to the PostgreSQL database blocks unauthorized access to data and services by setting access rules. These security measures help to ensure that successful logins cannot be easily made through brute-force password attacks, replaying the password hash, or intuited by clever social engineering exploits.</xhtml:p>
      <xhtml:p>
Settings are generally recommended to be applied to all defined profiles. The following presents standalone examples of logins for particular use cases. The authentication rules are read from the PostgreSQL host-based authentication file,         <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>
, from top to bottom. The first rule conforming to the condition of the request executes the METHOD         <xhtml:em>and stops further processing of the file</xhtml:em>
. Incorrectly applied rules, as defined by a single line instruction, can substantially alter the intended behavior resulting in either allowing or denying login attempts.      </xhtml:p>
      <xhtml:p>It is strongly recommended that authentication configurations be constructed incrementally with rigid testing for each newly applied rule. Because of the large number of different variations, this benchmark limits itself to a small number of authentication methods that can be successfully applied under most circumstances. Further analysis, using the other authentication methods available in PostgreSQL, is encouraged.</xhtml:p>
    </xccdf:description>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1_Ensure_login_via_local_UNIX_Domain_Socket_is_configured_correctly" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure login via "local" UNIX Domain Socket is configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
A remote host login, via SSH, is arguably the most secure means of remotely accessing and administering the PostgreSQL server. Once connected to the PostgreSQL server, using the           <xhtml:span class="inline_block">psql</xhtml:span>
 client, via UNIX DOMAIN SOCKETS, while using the           <xhtml:span class="inline_block">peer</xhtml:span>
 authentication method is the most secure mechanism available for local database connections. Provided a database user account of the same name of the UNIX account has already been defined in the database, even ordinary user accounts can access the cluster in a similarly highly secure manner.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Require MFA for Administrative Access" urn="urn:cisecurity.org:controls:8.0:6:5">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Multifactor Authentication For All Administrative Access" urn="urn:cisecurity.org:controls:7.0:4:5">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en"/>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/5" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/6/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/client-authentication.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Creation of a database account that matches the local account allows PEER authentication:</xhtml:p>
            <xhtml:code class="code_block">
# psql -c "CREATE ROLE user1 WITH LOGIN;"              <br/>
CREATE ROLE
            </xhtml:code>
            <xhtml:p>Execute the following as the UNIX user account, the default authentication rules should now permit the login:</xhtml:p>
            <xhtml:code class="code_block">
# su - user1              <br/>
# whoami              <br/>
user1              <br/>
# psql -d postgres              <br/>
postgres=&gt;
            </xhtml:code>
            <xhtml:p>
As per the host-based authentication rules in               <xhtml:span class="inline_block">$PGDATA/pg_hba.conf</xhtml:span>
, all login attempts via UNIX DOMAIN SOCKETS are processed on the line beginning with               <xhtml:span class="inline_block">local</xhtml:span>
.            </xhtml:p>
            <xhtml:p>This is the minimal rule that must be in place allowing PEER connections:</xhtml:p>
            <xhtml:code class="code_block">
# TYPE  DATABASE        USER            ADDRESS                 METHOD              <br/>
local   all             all                                     peer
            </xhtml:code>
            <xhtml:p>Once edited, the server process must reload the authentication file before it can take effect. Improperly configured rules cannot update i.e. the old rules remain in place. The PostgreSQL logs will report the outcome of the SIGHUP:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# select pg_reload_conf();              <br/>
 pg_reload_conf              <br/>
----------------              <br/>
 t              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p>The following examples illustrate other possible configurations. The resultant "rule" of success/failure depends upon the first matching line:</xhtml:p>
            <xhtml:code class="code_block">
# allow only postgres user logins locally via UNIX socket              <br/>
# TYPE  DATABASE        USER            ADDRESS                 METHOD              <br/>
local   all             postgres                                peer
            </xhtml:code>
            <xhtml:code class="code_block">
# allow all local users via UNIX socket
# TYPE  DATABASE        USER            ADDRESS                 METHOD              <br/>
local   all             all                                     peer
            </xhtml:code>
            <xhtml:code class="code_block">
# allow all local users, via UNIX socket, only if they are connecting to a db named the same as their username              <br/>
# e.g. if user 'bob' is connecting to a db named 'bob'              <br/>
# TYPE  DATABASE        USER                                    METHOD              <br/>
local   samerole        all                                     peer
            </xhtml:code>
            <xhtml:code class="code_block">
# allow only local users, via UNIX socket, who are members of the 'rw' role in the db              <br/>
# TYPE  DATABASE        USER            ADDRESS                 METHOD              <br/>
local   all             +rw                                     peer
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_login_via_host_TCPIP_Socket_is_configured_correctly" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure login via "host" TCP/IP Socket is configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>A large number of authentication METHODs are available for hosts connecting using TCP/IP sockets, including:</xhtml:p>
        <xhtml:ul>
          <xhtml:li>
            <xhtml:span class="inline_block">trust</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">reject</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">md5</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">scram-sha-256</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">password</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">gss</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">sspi</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">ident</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">pam</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">ldap</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">radius</xhtml:span>
          </xhtml:li>
          <xhtml:li>
            <xhtml:span class="inline_block">cert</xhtml:span>
          </xhtml:li>
        </xhtml:ul>
        <xhtml:p>
METHODs           <xhtml:span class="inline_block">trust</xhtml:span>
,           <xhtml:span class="inline_block">password</xhtml:span>
, and           <xhtml:span class="inline_block">ident</xhtml:span>
 are           <xhtml:strong>not</xhtml:strong>
 to be used for remote logins.        </xhtml:p>
        <xhtml:p>
METHOD           <xhtml:span class="inline_block">md5</xhtml:span>
 is the most popular and can be used in both encrypted and unencrypted sessions, however,           <xhtml:em>it is vulnerable to packet replay attacks</xhtml:em>
.           <xhtml:strong>
It is recommended that             <xhtml:span class="inline_block">scram-sha-256</xhtml:span>
 be used instead of             <xhtml:span class="inline_block">md5</xhtml:span>
.          </xhtml:strong>
        </xhtml:p>
        <xhtml:p>
Use of the           <xhtml:span class="inline_block">gss</xhtml:span>
,           <xhtml:span class="inline_block">sspi</xhtml:span>
,           <xhtml:span class="inline_block">pam</xhtml:span>
,           <xhtml:span class="inline_block">ldap</xhtml:span>
,           <xhtml:span class="inline_block">radius</xhtml:span>
, and           <xhtml:span class="inline_block">cert</xhtml:span>
 METHODs are dependent upon the availability of external authenticating processes/services and thus are not covered in this benchmark.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Encrypt Sensitive Data in Transit" urn="urn:cisecurity.org:controls:8.0:3:10">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Encrypt All Sensitive Information in Transit" urn="urn:cisecurity.org:controls:7.0:14:4">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
        <notes:notes xml:lang="en">
          <xhtml:ol>
            <xhtml:li>
Use TYPE               <xhtml:span class="inline_block">hostssl</xhtml:span>
 when administrating the database cluster as a superuser.            </xhtml:li>
            <xhtml:li>
Use TYPE               <xhtml:span class="inline_block">hostnossl</xhtml:span>
 for performance purposes and when DML operations are deemed safe without SSL connections.            </xhtml:li>
            <xhtml:li>No examples have been given for ADDRESS, i.e., CIDR, hostname, domain names, etc.</xhtml:li>
            <xhtml:li>Only three (3) types of METHOD have been documented; there are many more.</xhtml:li>
          </xhtml:ol>
        </notes:notes>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en"/>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/client-authentication.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html</xccdf:ident>
      <xccdf:ident system="URL">https://tools.ietf.org/html/rfc7677</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Confirm a login attempt has been made by looking for a logged error message detailing the nature of the authenticating failure. In the case of failed login attempts, whether encrypted or unencrypted, check the following:</xhtml:p>
            <xhtml:ul>
              <xhtml:li>
The server should be sitting on a port exposed to the remote connecting host i.e. NOT ip address 127.0.0.1
                <xhtml:code class="code_block">
listen_addresses = '*'                  <br/>
   ```                  <br/>
* An authenticating rule must exist in the file `pg_hba.conf`                  <br/>
                  <br/>
This example permits only encrypted sessions for the `postgres` role and denies all unencrypted sessions for the `postgres` role:
                </xhtml:code>
              </xhtml:li>
            </xhtml:ul>
            <xhtml:code class="code_block"># TYPE    DATABASE           USER            ADDRESS           METHOD
hostssl    all             postgres         0.0.0.0/0          scram-sha-256
hostnossl  all             postgres         0.0.0.0/0          reject
</xhtml:code>
            <xhtml:p>
The following examples illustrate other possible configurations. The resultant "rule" of success/failure depends upon the               <xhtml:strong>first matching line</xhtml:strong>
.            </xhtml:p>
            <xhtml:code class="code_block"># allow 'postgres' user only from 'localhost/loopback' connections
# and only if you know the password
# (accepts both SSL and non-SSL connections)
# TYPE    DATABASE        USER            ADDRESS                 METHOD
host      all             postgres        127.0.0.1/32            scram-sha-256

# allow users to connect remotely only to the database named after them, 
# with the correct user password:
# (accepts both SSL and non-SSL connections)
# TYPE    DATABASE        USER            ADDRESS                 METHOD
host      samerole        all             0.0.0.0/0               scram-sha-256

# allow only those users who are a member of the 'rw' role to connect
# only to the database named after them, with the correct user password:
# (accepts both SSL and non-SSL connections)
# TYPE    DATABASE        USER            ADDRESS                 METHOD
host      samerole        +rw             0.0.0.0/0               scram-sha-256
</xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_6_PostgreSQL_Settings">
    <xccdf:title xml:lang="en">PostgreSQL Settings</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>As PostgreSQL evolves with each new iteration, configuration parameters are constantly being added, deprecated, or removed. These configuration parameters define not only server function but how well it performs.</xhtml:p>
      <xhtml:p>Many routine activities, combined with a specific set of configuration parameter values, can sometimes result in degraded performance and, under a specific set of conditions, even comprise the security of the RDBMS. The fact of the matter is that any parameter has the potential to affect the accessibility and performance of a running server.</xhtml:p>
      <xhtml:p>Rather than describing all the possible combinations of events, this benchmark describes how a parameter can be compromised. Examples reflect the most common, and easiest to understand, exploits. Although by no means exhaustive, it is hoped that you will be able to understand the attack vectors in the context of your environment.</xhtml:p>
    </xccdf:description>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1_Understanding_attack_vectors_and_runtime_parameters" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Understanding attack vectors and runtime parameters</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>Understanding the vulnerability of PostgreSQL runtime parameters by the particular delivery method, or attack vector.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>There are as many ways of compromising a server as there are runtime parameters. A combination of any one or more of them executed at the right time under the right conditions has the potential to compromise the RDBMS. Mitigating risk is dependent upon one's understanding of the attack vectors and includes:</xhtml:p>
        <xhtml:ol>
          <xhtml:li>Via user session: includes those runtime parameters that can be set by a ROLE that persists for the life of a server-client session.</xhtml:li>
          <xhtml:li>Via attribute: includes those runtime parameters that can be set by a ROLE during a server-client session that can be assigned as an attribute for an entity such as a table, index, database, or role.</xhtml:li>
          <xhtml:li>Via server reload: includes those runtime parameters that can be set by the superuser using a SIGHUP or configuration file reload command and affects the entire cluster.</xhtml:li>
          <xhtml:li>Via server restart: includes those runtime parameters that can be set and effected by restarting the server process and affects the entire cluster.</xhtml:li>
        </xhtml:ol>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>In the case of a changed parameter, the value is returned back to its default value. In the case of a successful exploit of an already set runtime parameter then an analysis must be carried out to determine the best approach in mitigating the risk to prevent future exploitation.</xhtml:p>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>It can be difficult to totally eliminate risk. Once changed, detecting a miscreant parameter can become problematic.</xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_backend_runtime_parameters_are_configured_correctly" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure 'backend' runtime parameters are configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>In order to serve multiple clients efficiently, the PostgreSQL server launches a new "backend" process for each client. The runtime parameters in this benchmark section are controlled by the backend process. The server's performance, in the form of slow queries causing a denial of service, and the RDBM's auditing abilities for determining root cause analysis can be compromised via these parameters.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>A denial of service is possible by denying the use of indexes and by slowing down client access to an unreasonable level. Unsanctioned behavior can be introduced by introducing rogue libraries which can then be called in a database session. Logging can be altered and obfuscated inhibiting root cause analysis.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/view-pg-settings.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Once detected, the unauthorized/undesired change can be corrected by altering the configuration file and executing a server restart. In the case where the parameter has been specified on the command-line invocation of               <xhtml:span class="inline_block">pg_ctl</xhtml:span>
 the               <xhtml:span class="inline_block">restart</xhtml:span>
 invocation is insufficient and an explicit               <xhtml:span class="inline_block">stop</xhtml:span>
 and               <xhtml:span class="inline_block">start</xhtml:span>
 must instead be made.            </xhtml:p>
            <xhtml:ol>
              <xhtml:li>
Query the view                 <xhtml:span class="inline_block">pg_settings</xhtml:span>
 and compare with previous query outputs for any changes.              </xhtml:li>
              <xhtml:li>
Review configuration files                 <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 and                 <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span>
 and compare them with previously archived file copies for any changes.              </xhtml:li>
              <xhtml:li>
Examine the process output and look for parameters that were used at server startup:
                <xhtml:code class="code_block">ps -few | grep -E '[p]ost' | grep -- '-[D]'
</xhtml:code>
              </xhtml:li>
              <xhtml:li>
Examine the contents of                 <xhtml:span class="inline_block">$PGDATA/postmaster.opts</xhtml:span>
              </xhtml:li>
            </xhtml:ol>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>All changes made on this level will affect the overall behavior of the server. These changes can only be affected by a server restart after the parameters have been altered in the configuration files.</xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658927" value-id="xccdf_org.cisecurity.benchmarks_value_16589271_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658927"/>
        </check>
        <xccdf:complex-check operator="AND">
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658929" value-id="xccdf_org.cisecurity.benchmarks_value_16589291_var"/>
            <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658929"/>
          </check>
          <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658931" value-id="xccdf_org.cisecurity.benchmarks_value_16589311_var"/>
              <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
              <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658931"/>
            </check>
            <xccdf:complex-check operator="AND">
              <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658932" value-id="xccdf_org.cisecurity.benchmarks_value_16589321_var"/>
                <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
                <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658932"/>
              </check>
              <xccdf:complex-check operator="AND">
                <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658934" value-id="xccdf_org.cisecurity.benchmarks_value_16589341_var"/>
                  <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
                  <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658934"/>
                </check>
                <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658936" value-id="xccdf_org.cisecurity.benchmarks_value_16589361_var"/>
                  <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
                  <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658936"/>
                </check>
              </xccdf:complex-check>
            </xccdf:complex-check>
          </xccdf:complex-check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_Postmaster_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure 'Postmaster' Runtime Parameters are Configured</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>PostgreSQL runtime parameters that are executed by the postmaster process.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
The           <xhtml:span class="inline_block">postmaster</xhtml:span>
 process is the supervisory process that assigns a backend process to an incoming client connection. The           <xhtml:span class="inline_block">postmaster</xhtml:span>
 manages key runtime parameters that are either shared by all backend connections or needed by the           <xhtml:span class="inline_block">postmaster</xhtml:span>
 process itself to run.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/view-pg-settings.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Once detected, the unauthorized/undesired change can be corrected by editing the altered configuration file and executing a server restart. In the case where the parameter has been specified on the command-line invocation of               <xhtml:span class="inline_block">pg_ctl</xhtml:span>
 the               <xhtml:span class="inline_block">restart</xhtml:span>
 invocation is insufficient and an explicit               <xhtml:span class="inline_block">stop</xhtml:span>
 and               <xhtml:span class="inline_block">start</xhtml:span>
 must instead be made.            </xhtml:p>
            <xhtml:p>Detecting a change is possible by one of the following methods:</xhtml:p>
            <xhtml:ol>
              <xhtml:li>
Query the view                 <xhtml:span class="inline_block">pg_settings</xhtml:span>
 and compare with previous query outputs for any changes              </xhtml:li>
              <xhtml:li>
Review the configuration files                 <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 and                 <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span>
 and compare with previously archived file copies for any changes              </xhtml:li>
              <xhtml:li>
Examine the process output and look for parameters that were used at server startup:
                <xhtml:code class="code_block">ps -few | grep -E 'postgres' | grep -- '-[D]'
</xhtml:code>
              </xhtml:li>
              <xhtml:li>
Examine the contents of                 <xhtml:span class="inline_block">$PGDATA/postmaster.opts</xhtml:span>
              </xhtml:li>
            </xhtml:ol>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>
All changes made on this level will affect the overall behavior of the server. These changes can be effected by editing the PostgreSQL configuration files and by either executing a server SIGHUP from the command line or, as superuser                 <xhtml:span class="inline_block">postgres</xhtml:span>
, executing the SQL command                 <xhtml:span class="inline_block">select pg_reload_conf()</xhtml:span>
. A denial of service is possible by the over-allocating of limited resources, such as RAM. Data can be corrupted by allowing damaged pages to load or by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Client messages can be altered in such a way as to interfere with the application logic. Logging can be altered and obfuscated inhibiting root cause analysis.              </xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_SIGHUP_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure 'SIGHUP' Runtime Parameters are Configured</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>PostgreSQL runtime parameters that are executed by the SIGHUP signal.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
In order to define server behavior and optimize server performance, the server's superuser has the privilege of setting these parameters which are found in the configuration files           <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 and           <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>
. Alternatively, those parameters found in           <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 can also be changed using a server login session and executing the SQL command           <xhtml:span class="inline_block">ALTER SYSTEM</xhtml:span>
 which writes its changes in the configuration file           <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span>
.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/view-pg-settings.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Restore all values in the PostgreSQL configuration files and invoke the server to reload the configuration files.</xhtml:p>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>
All changes made on this level will affect the overall behavior of the server. These changes can be effected by editing the PostgreSQL configuration files and by either executing a server SIGHUP from the command line or, as superuser                 <xhtml:span class="inline_block">postgres</xhtml:span>
, executing the SQL command                 <xhtml:span class="inline_block">select pg_reload_conf()</xhtml:span>
. A denial of service is possible by the over-allocating of limited resources, such as RAM. Data can be corrupted by allowing damaged pages to load or by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Client messages can be altered in such a way as to interfere with the application logic. Logging can be altered and obfuscated inhibiting root cause analysis.              </xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.5_Ensure_Superuser_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure 'Superuser' Runtime Parameters are Configured</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
PostgreSQL runtime parameters that can only be executed by the server's superuser,           <xhtml:span class="inline_block">postgres</xhtml:span>
.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
In order to improve and optimize server performance, the server's superuser has the privilege of setting these parameters which are found in the configuration file           <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
. Alternatively, they can be changed in a PostgreSQL login session via the SQL command           <xhtml:span class="inline_block">ALTER SYSTEM</xhtml:span>
 which writes its changes in the configuration file           <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span>
.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/view-pg-settings.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
The exploit is made in the configuration files. These changes are effected upon server restart. Once detected, the unauthorized/undesired change can be made by editing the altered configuration file and executing a server restart. In the case where the parameter has been set on the command-line invocation of               <xhtml:span class="inline_block">pg_ctl</xhtml:span>
 the               <xhtml:span class="inline_block">restart</xhtml:span>
 invocation is insufficient and an explicit               <xhtml:span class="inline_block">stop</xhtml:span>
 and               <xhtml:span class="inline_block">start</xhtml:span>
 must instead be made.            </xhtml:p>
            <xhtml:p>Detecting a change is possible by one of the following methods:</xhtml:p>
            <xhtml:ol>
              <xhtml:li>
Query the view                 <xhtml:span class="inline_block">pg_settings</xhtml:span>
 and compare with previous query outputs for any changes.              </xhtml:li>
              <xhtml:li>
Review the configuration files                 <xhtml:span class="inline_block">postgreql.conf</xhtml:span>
 and                 <xhtml:span class="inline_block">postgreql.auto.conf</xhtml:span>
 and compare with previously archived file copies for any changes              </xhtml:li>
              <xhtml:li>
Examine the process output and look for parameters that were used at server startup:
                <xhtml:code class="code_block">ps aux | grep -E 'post' | grep -- '-[D]'
</xhtml:code>
              </xhtml:li>
              <xhtml:li>
Examine the contents of                 <xhtml:span class="inline_block">$PGDATA/postmaster.opts</xhtml:span>
              </xhtml:li>
            </xhtml:ol>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>All changes made on this level will affect the overall behavior of the server. These changes can only be affected by a server restart after the parameters have been altered in the configuration files. A denial of service is possible by the over-allocating of limited resources, such as RAM. Data can be corrupted by allowing damaged pages to load or by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Client messages can be altered in such a way as to interfere with the application logic. Logging can be altered and obfuscated inhibiting root cause analysis.</xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_User_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure 'User' Runtime Parameters are Configured</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>These PostgreSQL runtime parameters are managed at the user account (ROLE) level.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
In order to improve performance and optimize features, a           <xhtml:span class="inline_block">ROLE</xhtml:span>
 has the privilege of setting numerous parameters in a transaction, session, or entity attribute. Any           <xhtml:span class="inline_block">ROLE</xhtml:span>
 can alter any of these parameters.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/view-pg-settings.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>In the matter of a user session, the login sessions must be validated that it is not executing undesired parameter changes. In the matter of attributes that have been changed in entities, they must be manually reverted to their default value(s).</xhtml:p>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>
A denial of service is possible by the over-allocating of limited resources, such as RAM. Changing                 <xhtml:span class="inline_block">VACUUM</xhtml:span>
 parameters can force a server shutdown which is standard procedure preventing data corruption from transaction ID wraparound. Data can be corrupted by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Logging can be altered and obfuscated to inhibit root cause analysis.              </xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.7_Ensure_FIPS_140-2_OpenSSL_Cryptography_Is_Used" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure FIPS 140-2 OpenSSL Cryptography Is Used</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>Install, configure, and use OpenSSL on a platform that has a NIST certified FIPS 140-2 installation of OpenSSL. This provides PostgreSQL instances the ability to generate and validate cryptographic hashes to protect unclassified information requiring confidentiality and cryptographic protection, in accordance with the data owner's requirements.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Encrypt Sensitive Data in Transit" urn="urn:cisecurity.org:controls:8.0:3:10">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Encrypt All Sensitive Information in Transit" urn="urn:cisecurity.org:controls:7.0:14:4">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>Federal Information Processing Standard (FIPS) Publication 140-2 is a computer security standard developed by a U.S. Government and industry working group for validating the quality of cryptographic modules. Use of weak, or untested, encryption algorithms undermines the purposes of utilizing encryption to protect data. PostgreSQL uses OpenSSL for the underlying encryption layer.</xhtml:p>
        <xhtml:p>The database and application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated. It is the responsibility of the data owner to assess the cryptography requirements in light of applicable federal laws, Executive Orders, directives, policies, regulations, and standards.</xhtml:p>
        <xhtml:p>
For detailed information, refer to NIST FIPS Publication 140-2,           <xhtml:em>Security Requirements for Cryptographic Modules</xhtml:em>
. Note that the product's cryptographic modules must be validated and certified by NIST as FIPS-compliant. The security functions validated as part of FIPS 140-2 for cryptographic modules are described in FIPS 140-2 Annex A. Currently, only Red Hat Enterprise Linux is certified as a FIPS 140-2 distribution of OpenSSL. For other operating systems, users must obtain or build their own FIPS 140-2 OpenSSL libraries.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#switching-the-system-to-fips-mode_using-the-system-wide-cryptographic-policies</xccdf:ident>
      <xccdf:ident system="URL">https://csrc.nist.gov/CSRC/media/projects/cryptographic-module-validation-program/documents/security-policies/140sp1758.pdf</xccdf:ident>
      <xccdf:ident system="URL">https://csrc.nist.gov/publications/fips</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Configure OpenSSL to be FIPS compliant as PostgreSQL uses OpenSSL for cryptographic modules. To configure OpenSSL to be FIPS 140-2 compliant, see the               <xhtml:a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#switching-the-system-to-fips-mode_using-the-system-wide-cryptographic-policies">official RHEL Documentation</xhtml:a>
. Below is a general summary of the steps required:            </xhtml:p>
            <xhtml:p>To switch the system to FIPS mode in RHEL 8:</xhtml:p>
            <xhtml:code class="code_block">
# fips-mode-setup --enable              <br/>
Kernel initramdisks are being regenerated. This might take some time.              <br/>
Setting system policy to FIPS              <br/>
Note: System-wide crypto policies are applied on application start-up.              <br/>
It is recommended to restart the system for the change of policies              <br/>
to fully take place.              <br/>
FIPS mode will be enabled.              <br/>
Please reboot the system for the setting to take effect.
            </xhtml:code>
            <xhtml:p>Restart your system to allow the kernel to switch to FIPS mode:</xhtml:p>
            <xhtml:code class="code_block"># reboot
</xhtml:code>
            <xhtml:p>After the restart, you can check the current state of FIPS mode:</xhtml:p>
            <xhtml:code class="code_block">
# fips-mode-setup --check              <br/>
FIPS mode is enabled.
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout"/>
        <check-content-ref href="sce/openssl_fips_140-2.sh"/>
      </check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_TLS_is_enabled_and_configured_correctly" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure TLS is enabled and configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>TLS on a PostgreSQL server should be enabled and configured to encrypt TCP traffic to and from the server.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Encrypt Sensitive Data in Transit" urn="urn:cisecurity.org:controls:8.0:3:10">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Encrypt All Sensitive Information in Transit" urn="urn:cisecurity.org:controls:7.0:14:4">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
        <notes:notes xml:lang="en">
          <xhtml:p>
It is possible to leave the passphrase on             <xhtml:span class="inline_block">privkey.pem</xhtml:span>
 for additional security if desired. Simply configure             <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 to set:          </xhtml:p>
          <xhtml:code class="code_block">ssl_passphrase_command = 'your_command_here'
</xhtml:code>
          <xhtml:p>This sets an external command to be invoked when a passphrase for decrypting an SSL file such as a private key needs to be obtained. By default, this parameter is empty, which means the built-in prompting mechanism is used.</xhtml:p>
          <xhtml:p>
The command must print the passphrase to the standard output and exit with code             <xhtml:span class="inline_block">0</xhtml:span>
. In the parameter value,             <xhtml:span class="inline_block">%p</xhtml:span>
 is replaced by a prompt string. (Write             <xhtml:span class="inline_block">%%</xhtml:span>
 for a literal             <xhtml:span class="inline_block">%</xhtml:span>
.) Note that the prompt string will probably contain whitespace, so be sure to quote adequately. A single newline is stripped from the end of the output if present.          </xhtml:p>
          <xhtml:p>The command does not actually have to prompt the user for a passphrase. It can read it from a file, obtain it from a keychain facility, or similar. It is up to the user to make sure the chosen mechanism is adequately secure.</xhtml:p>
        </notes:notes>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>If TLS is not enabled and configured correctly, this increases the risk of data being compromised in transit.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/ssl-tcp.html</xccdf:ident>
      <xccdf:ident system="URL">http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/libpq-ssl.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-connection.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
For this example, and ease of illustration, we will be using a self-signed certificate (generated via               <xhtml:span class="inline_block">openssl</xhtml:span>
) for the server, and the PostgreSQL defaults for file naming and location in the PostgreSQL               <xhtml:span class="inline_block">$PGDATA</xhtml:span>
 directory.            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
postgres              <br/>
# # create new certificate and enter details at prompts              <br/>
# openssl req -new -text -out server.req              <br/>
Generating a 2048 bit RSA private key              <br/>
.....................+++              <br/>
..................................................................+++              <br/>
writing new private key to 'privkey.pem'              <br/>
Enter PEM pass phrase:              <br/>
Verifying - Enter PEM pass phrase:              <br/>
-----              <br/>
You are about to be asked to enter information that will be incorporated              <br/>
into your certificate request.              <br/>
What you are about to enter is what is called a Distinguished Name or a DN.              <br/>
There are quite a few fields but you can leave some blank              <br/>
For some fields there will be a default value,              <br/>
If you enter '.', the field will be left blank.              <br/>
-----              <br/>
Country Name (2 letter code) [XX]:US              <br/>
State or Province Name (full name) []:Ohio              <br/>
Locality Name (eg, city) [Default City]:Columbus              <br/>
Organization Name (eg, company) [Default Company Ltd]:Me Inc              <br/>
Organizational Unit Name (eg, section) []:IT              <br/>
Common Name (eg, your name or your server's hostname) []:my.me.inc              <br/>
Email Address []:me@meinc.com              <br/>
              <br/>
Please enter the following 'extra' attributes              <br/>
to be sent with your certificate request              <br/>
A challenge password []:              <br/>
An optional company name []:              <br/>
              <br/>
# # remove passphrase (required for automatic server start up, if not using `ssl_passphrase_command`)              <br/>
# openssl rsa -in privkey.pem -out server.key &amp;&amp; rm privkey.pem              <br/>
Enter pass phrase for privkey.pem:              <br/>
writing RSA key              <br/>
              <br/>
# # modify certificate to self signed, generate .key and .crt files              <br/>
# openssl req -x509 -in server.req -text -key server.key -out server.crt              <br/>
              <br/>
# # copy .key and .crt files to appropriate location, here default $PGDATA              <br/>
$ cp server.key server.crt $PGDATA              <br/>
              <br/>
# # restrict file mode for server.key              <br/>
$ chmod og-rwx server.key
            </xhtml:code>
            <xhtml:p>
Edit the PostgreSQL configuration file               <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 to ensure the following items are set. Again, we are using defaults. Note that altering these parameters will require restarting the cluster.            </xhtml:p>
            <xhtml:code class="code_block">
# (change requires restart)              <br/>
ssl = on              <br/>
              <br/>
# allowed SSL ciphers              <br/>
ssl_ciphers = 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384'              <br/>
              <br/>
# (change requires restart)              <br/>
ssl_cert_file = 'server.crt'              <br/>
              <br/>
# (change requires restart)              <br/>
ssl_key_file = 'server.key'              <br/>
              <br/>
password_encryption =  scram-sha-256
            </xhtml:code>
            <xhtml:p>
Finally, restart PostgreSQL and confirm               <xhtml:span class="inline_block">ssl</xhtml:span>
 using commands outlined in Audit Procedures:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# show ssl;              <br/>
 ssl              <br/>
-----              <br/>
 on              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>A self-signed certificate can be used for testing, but a certificate signed by a certificate authority (CA) (either one of the global CAs or a local one) should be used in production so that clients can verify the server's identity. If all the database clients are local to the organization, using a local CA is recommended.</xhtml:p>
              <xhtml:p>
To ultimately enable and enforce TLS authentication for the server, appropriate                 <xhtml:span class="inline_block">hostssl</xhtml:span>
 records must be added to the                 <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>
 file. Be sure to                 <xhtml:span class="inline_block">reload</xhtml:span>
 PostgreSQL after any changes (restart not required).              </xhtml:p>
              <xhtml:p>
                <xhtml:strong>Note:</xhtml:strong>
 The                 <xhtml:span class="inline_block">hostssl</xhtml:span>
 record matches connection attempts made using TCP/IP, but                 <xhtml:strong>only</xhtml:strong>
 when the connection is made with TLS encryption. The                 <xhtml:span class="inline_block">host</xhtml:span>
 record matches attempts made using TCP/IP, but allows both TLS and non-TLS connections. The                 <xhtml:span class="inline_block">hostnossl</xhtml:span>
 record matches attempts made using TCP/IP, but only those                 <xhtml:em>without</xhtml:em>
 TLS.                 <xhtml:em>Care should be taken to enforce TLS as appropriate.</xhtml:em>
              </xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658941" value-id="xccdf_org.cisecurity.benchmarks_value_16589411_var"/>
        <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
        <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658941"/>
      </check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_the_pgcrypto_extension_is_installed_and_configured_correctly" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure the pgcrypto extension is installed and configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>PostgreSQL must implement cryptographic mechanisms to prevent unauthorized disclosure or modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Encrypt Sensitive Data at Rest" urn="urn:cisecurity.org:controls:8.0:3:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Encrypt Sensitive Information at Rest" urn="urn:cisecurity.org:controls:7.0:14:8">
              <controls:implementation_groups ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>PostgreSQL instances handling data that requires "data at rest" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to PostgreSQL or implemented via additional software or operating system/file system settings, as appropriate to the situation. Information at rest refers to the state of information when it is located on a secondary storage device (e.g. disk drive, tape drive) within an organizational information system.</xhtml:p>
        <xhtml:p>The selection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e. full disk encryption) or encrypt specific data structures (e.g. files, records, or fields). Organizations may also optionally choose to implement both to implement layered security.</xhtml:p>
        <xhtml:p>The decision of whether, and what, to encrypt rests with the data owner and is also influenced by the physical measures taken to secure the equipment and media on which the information resides. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protection, as appropriate. If the confidentiality and integrity of application data are not protected, the data will be open to compromise and unauthorized modification.</xhtml:p>
        <xhtml:p>
The PostgreSQL           <xhtml:span class="inline_block">pgcrypto</xhtml:span>
 extension provides cryptographic functions for PostgreSQL and is intended to address the confidentiality and integrity of user and system information at rest in non-mobile devices.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/8" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/11" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">http://www.postgresql.org/docs/current/static/pgcrypto.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
The               <xhtml:span class="inline_block">pgcrypto</xhtml:span>
 extension is included with the PostgreSQL 'contrib' package. Although included, it needs to be created in the database.            </xhtml:p>
            <xhtml:p>As the database administrator, run the following:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# CREATE EXTENSION pgcrypto;              <br/>
CREATE EXTENSION
            </xhtml:code>
            <xhtml:p>
Verify               <xhtml:span class="inline_block">pgcrypto</xhtml:span>
 is installed:            </xhtml:p>
            <xhtml:code class="code_block">
postgres=# SELECT * FROM pg_available_extensions WHERE name='pgcrypto';              <br/>
   name   | default_version | installed_version |         comment              <br/>
----------+-----------------+-------------------+-------------------------              <br/>
 pgcrypto | 1.3             | 1.3               | cryptographic functions              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p class="bold">Impact:</xhtml:p>
            <xhtml:p>
              <xhtml:p>
When considering or undertaking any form of encryption, it is critical to understand the state of the encrypted data at all stages of the data lifecycle. The use of                 <xhtml:span class="inline_block">pgcrypto</xhtml:span>
 ensures that the data at rest in the tables (and therefore on disk) is encrypted, but for the data to be accessed by any users or applications, said users/applications will, by necessity, have access to the encrypt and decrypt keys and the data in question will be encrypted/decrypted in memory and then transferred to/from the user/application in that form.              </xhtml:p>
            </xhtml:p>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7_Replication">
    <xccdf:title xml:lang="en">Replication</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>Data redundancy often plays a major role as part of an overall database strategy. Replication is an example of data redundancy and fulfills both High Availability and High Performance requirements. However, although the DBA may have expended much time and effort securing the PRIMARY host and taken the time to harden STANDBY configuration parameters, one sometimes overlooks the medium transmitting the data itself over the network. Consequently, replication is an appealing attack vector given that all DDL, and DML operations executed on the PRIMARY host is sent over the wire to the SECONDARY/STANDBY host(s). Fortunately, when correctly understood, defeating such attacks can be implemented in a straightforward manner. This benchmark reviews those issues surrounding the most common mechanisms of replicating data between hosts. There are several PostgreSQL replication mechanisms and includes:</xhtml:p>
      <xhtml:ul>
        <xhtml:li>
Warm Standby (also known as LOG Shipping)
          <xhtml:ul>
            <xhtml:li>Transaction logs are copied from the PRIMARY to SECONDARY host that reads the logs in a "recovery" mode. For all intents and purposes the host ingesting the WAL cannot be read i.e. it's off-line.</xhtml:li>
          </xhtml:ul>
        </xhtml:li>
        <xhtml:li>
Hot Standby
          <xhtml:ul>
            <xhtml:li>Operates in the exact same fashion as the Warm Standby Server except that, in addition, it offers a read-only environment for client connections to connect and query.</xhtml:li>
          </xhtml:ul>
        </xhtml:li>
        <xhtml:li>
Point In Time Recovery (PITR)
          <xhtml:ul>
            <xhtml:li>Primarily used for database forensics and recovery at particular points in time such as in the case that important data may have been accidentally removed. One can restore the cluster to a point in time before the event occurred.</xhtml:li>
          </xhtml:ul>
        </xhtml:li>
        <xhtml:li>
Streaming Replication
          <xhtml:ul>
            <xhtml:li>
Uses an explicit connection, which in a manner of speaking is similar to the standard client connection, between the PRIMARY and STANDBY host. It too reads the transaction logs and ingests them into a read-only server. What's different is that the connection uses a special replication protocol which is faster and more efficient than log shipping. Similar to standard client connections, it also honors the same authentication rules as expressed in the PostgreSQL host-based authentication file,               <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>
.            </xhtml:li>
          </xhtml:ul>
        </xhtml:li>
      </xhtml:ul>
    </xccdf:description>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.1_Ensure_a_replication-only_user_is_created_and_used_for_streaming_replication" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure a replication-only user is created and used for streaming replication</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>Create a new user specifically for use by streaming replication instead of using the superuser account.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Ensure the Use of Dedicated Administrative Accounts" urn="urn:cisecurity.org:controls:7.0:4:3">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>As it is not necessary to be a superuser to initiate a replication connection, it is proper to create an account specifically for replication. This allows further 'locking down' the uses of the superuser account and follows the general principle of using the least privileges necessary.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/app-pgbasebackup.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/high-availability.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>It will be necessary to create a new role for replication purposes:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# create user replication_user REPLICATION encrypted password 'XXX';              <br/>
CREATE ROLE              <br/>
postgres=# select rolname from pg_roles where rolreplication is true;              <br/>
     rolname              <br/>
------------------              <br/>
 postgres              <br/>
 replication_user              <br/>
(2 rows)
            </xhtml:code>
            <xhtml:p>
When using               <xhtml:span class="inline_block">pg_basebackup</xhtml:span>
 (or other replication tools) on your standby server, you would use the               <xhtml:span class="inline_block">replication_user</xhtml:span>
 (and its password).            </xhtml:p>
            <xhtml:p>
Ensure you allow the new user via your               <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>
 file:            </xhtml:p>
            <xhtml:code class="code_block">
# note that 'replication' in the 2nd column is required and is a special              <br/>
# keyword, not a real database              <br/>
hostssl replication     replication_user    0.0.0.0/0         scram-sha-256
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2_Ensure_logging_of_replication_commands_is_configured" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure logging of replication commands is configured</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>Enabling the log_replication_commands setting causes each attempted replication from the server to be logged.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Ensure the Use of Dedicated Administrative Accounts" urn="urn:cisecurity.org:controls:7.0:4:3">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Users</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>A successful replication connection allows for a complete copy of the data stored within the data cluster to be offloaded to another, potentially insecure, host. As such, it is advisable to log all replication commands that are executed in your database cluster to ensure the data is not off-loaded to an unexpected/undesired location.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/runtime-config-logging.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>To enable the logging of replication commands, execute the following:</xhtml:p>
            <xhtml:code class="code_block">
postgres=# ALTER SYSTEM SET log_replication_commands = 'on';              <br/>
ALTER SYSTEM              <br/>
postgres=# SELECT pg_reload_conf();              <br/>
 pg_reload_conf              <br/>
----------------              <br/>
 t              <br/>
(1 row)              <br/>
postgres=# show log_replication_commands ;              <br/>
 log_replication_commands              <br/>
--------------------------              <br/>
 on              <br/>
(1 row)
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3_Ensure_base_backups_are_configured_and_functional" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure base backups are configured and functional</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
A 'base backup' is a copy of the PRIMARY host's data cluster ($PGDATA) and is used to create STANDBY hosts and for Point In Time Recovery (PITR) mechanisms. Base backups should be copied across networks in a secure manner using an encrypted transport mechanism. The PostgreSQL CLI           <xhtml:span class="inline_block">pg_basebackup</xhtml:span>
 can be used, however, TLS encryption should be enabled on the server as per section 6.8 of this benchmark. The pgBackRest tool detailed in section 8.3 of this benchmark can also be used to create a 'base backup'.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Test Data Recovery" urn="urn:cisecurity.org:controls:8.0:11:5">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Recover</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Test Data on Backup Media" urn="urn:cisecurity.org:controls:7.0:10:3">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en"/>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/10/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/11/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/functions-admin.html#FUNCTIONS-ADMIN-BACKUP-TABLE</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/app-pgbasebackup.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
Executing base backups using               <xhtml:span class="inline_block">pg_basebackup</xhtml:span>
 requires the following steps on the               <xhtml:strong>standby</xhtml:strong>
 server:            </xhtml:p>
            <xhtml:code class="code_block">
$ whoami              <br/>
postgres              <br/>
$ pg_basebackup --host=name_or_IP_of_master \              <br/>
--port=5432 \              <br/>
--username=replication_user \              <br/>
--pgdata=~postgres/14/data \              <br/>
--progress --verbose --write-recovery-conf --wal-method=stream 
            </xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4_Ensure_WAL_archiving_is_configured_and_functional" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure WAL archiving is configured and functional</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
Write Ahead Log (WAL) Archiving, or Log Shipping, is the process of sending transaction log files from the PRIMARY host either to one or more STANDBY hosts or to be archived on a remote storage device for later use, e.g.           <xhtml:span class="inline_block">PITR</xhtml:span>
. There are several utilities that can copy WALs including, but not limited to,           <xhtml:span class="inline_block">cp</xhtml:span>
,           <xhtml:span class="inline_block">scp</xhtml:span>
,           <xhtml:span class="inline_block">sftp</xhtml:span>
, and           <xhtml:span class="inline_block">rynsc</xhtml:span>
. Basically, the server follows a set of runtime parameters which define when the WAL should be copied using one of the aforementioned utilities.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Encrypt Sensitive Data in Transit" urn="urn:cisecurity.org:controls:8.0:3:10">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Encrypt All Sensitive Information in Transit" urn="urn:cisecurity.org:controls:7.0:14:4">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>Unless the server has been correctly configured, one runs the risk of sending WALs in an unsecured, unencrypted fashion.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-wal.html#RUNTIME-CONFIG-WAL-ARCHIVING</xccdf:ident>
      <xccdf:ident system="URL">https://linux.die.net/man/1/ssh-keygen</xccdf:ident>
      <xccdf:ident system="URL">https://linux.die.net/man/1/rsync</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Change parameters and restart the server as required.</xhtml:p>
            <xhtml:p>
              <xhtml:strong>Note:</xhtml:strong>
 SSH public keys must be generated and installed as per industry standards.            </xhtml:p>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658940" value-id="xccdf_org.cisecurity.benchmarks_value_16589401_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658940"/>
        </check>
        <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
          <check-export export-name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:var:1658943" value-id="xccdf_org.cisecurity.benchmarks_value_16589431_var"/>
          <check-export export-name="oval:org.cisecurity.benchmarks:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
          <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658943"/>
        </check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5_Ensure_streaming_replication_parameters_are_configured_correctly" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure streaming replication parameters are configured correctly</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>Streaming replication from a PRIMARY host transmits DDL, DML, passwords, and other potentially sensitive activities and data. These connections should be protected with Secure Sockets Layer (SSL).</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Encrypt Sensitive Data in Transit" urn="urn:cisecurity.org:controls:8.0:3:10">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Encrypt All Sensitive Information in Transit" urn="urn:cisecurity.org:controls:7.0:14:4">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>Unencrypted transmissions could reveal sensitive information to unauthorized parties. Unauthenticated connections could enable man-in-the-middle attacks.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-connection.html#RUNTIME-CONFIG-CONNECTION-SECURITY</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/functions-admin.html#FUNCTIONS-ADMIN-BACKUP-TABLE</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/app-pgbasebackup.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-wal.html#RUNTIME-CONFIG-WAL-ARCHIVING</xccdf:ident>
      <xccdf:ident system="URL">https://linux.die.net/man/1/openssl</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Review prior sections in this benchmark regarding TLS certificates, replication user, and WAL archiving.</xhtml:p>
            <xhtml:p>
Confirm the file               <xhtml:span class="inline_block">$PGDATA/standby.signal</xhtml:span>
 is present on the STANDBY host and               <xhtml:span class="inline_block">$PGDATA/postgresql.auto.conf</xhtml:span>
 contains lines similar to the following:            </xhtml:p>
            <xhtml:code class="code_block">primary_conninfo = 'user=replication_user password=mypassword host=mySrcHost port=5432 sslmode=require sslcompression=1'
</xhtml:code>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8_Special_Configuration_Considerations">
    <xccdf:title xml:lang="en">Special Configuration Considerations</xccdf:title>
    <xccdf:description xml:lang="en">
      <xhtml:p>The recommendations proposed here try to address some of the less common use cases which may warrant additional configuration guidance/consideration.</xhtml:p>
    </xccdf:description>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1_Ensure_PostgreSQL_configuration_files_are_outside_the_data_cluster" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure PostgreSQL configuration files are outside the data cluster</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
PostgreSQL configuration files within the data cluster's directory tree can be changed by anyone logging into the data cluster as the superuser, i.e.           <xhtml:span class="inline_block">postgres</xhtml:span>
. As a matter of default policy, configuration files such as           <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
,           <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>
, and           <xhtml:span class="inline_block">pg_ident</xhtml:span>
, are placed in the data cluster's directory,           <xhtml:span class="inline_block">$PGDATA</xhtml:span>
. PostgreSQL can be configured to relocate these files to locations outside the data cluster which cannot then be altered by an ordinary superuser login session.        </xhtml:p>
        <xhtml:p>Consideration should also be given to "include directives"; these are cluster subdirectories where one can locate files containing additional configuration parameters. Include directives are meant to add more flexibility for unique installs or large network environments while maintaining order and consistent architectural design.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>Leaving PostgreSQL configuration files within the data cluster's directory tree increases the chances that they will be inadvertently or intentionally altered.</xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-file-locations.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-connection.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/config-setting.html#CONFIG-INCLUDES</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Follow these steps to remediate the configuration file locations and permissions:</xhtml:p>
            <xhtml:ul>
              <xhtml:li>Determine appropriate locations for relocatable configuration files based on your organization's security policies. If necessary, relocate and/or rename configuration files outside of the data cluster.</xhtml:li>
              <xhtml:li>Ensure their file permissions are restricted as much as possible, i.e. only superuser read access.</xhtml:li>
              <xhtml:li>
Change the settings accordingly in the                 <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 configuration file.              </xhtml:li>
              <xhtml:li>Restart the database cluster for the changes to take effect.</xhtml:li>
            </xhtml:ul>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2_Ensure_PostgreSQL_subdirectory_locations_are_outside_the_data_cluster" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure PostgreSQL subdirectory locations are outside the data cluster</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>The PostgreSQL cluster is organized to carry out specific tasks in subdirectories. For the purposes of performance, reliability, and security some of these subdirectories should be relocated outside the data cluster.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
Some subdirectories contain information, such as logs, which can be of value to others such as developers. Other subdirectories can gain a performance benefit when placed on fast storage devices. Finally, relocating a subdirectory to a separate and distinct partition mitigates denial of service and involuntary server shutdown when excessive writes fill the data cluster's partition, e.g.           <xhtml:span class="inline_block">pg_wal</xhtml:span>
 and           <xhtml:span class="inline_block">pg_log</xhtml:span>
.        </xhtml:p>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-file-locations.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Perform the following steps to remediate the subdirectory locations and permissions:</xhtml:p>
            <xhtml:ul>
              <xhtml:li>Determine appropriate data, log, and tablespace directories and locations based on your organization's security policies. If necessary, relocate all listed directories outside the data cluster.</xhtml:li>
              <xhtml:li>Ensure file permissions are restricted as much as possible, i.e. only superuser read access.</xhtml:li>
              <xhtml:li>When directories are relocated to other partitions, ensure that they are of sufficient size to mitigate against excessive space utilization.</xhtml:li>
              <xhtml:li>
Lastly, change the settings accordingly in the                 <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 configuration file and restart the database cluster for changes to take effect.              </xhtml:li>
            </xhtml:ul>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.3_Ensure_the_backup_and_restore_tool_pgBackRest_is_installed_and_configured" role="full" selected="false" weight="1.0">
      <xccdf:title xml:lang="en">Ensure the backup and restore tool, 'pgBackRest', is installed and configured</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>
pgBackRest aims to be a simple, reliable backup and restore system that can seamlessly scale up to the largest databases and workloads. Instead of relying on traditional backup tools like           <xhtml:span class="inline_block">tar</xhtml:span>
 and           <xhtml:span class="inline_block">rsync</xhtml:span>
, pgBackRest implements all backup features internally and uses a custom protocol for communicating with remote systems. Removing reliance on           <xhtml:span class="inline_block">tar</xhtml:span>
 and           <xhtml:span class="inline_block">rsync</xhtml:span>
 allows for better solutions to database-specific backup challenges. The custom remote protocol allows for more flexibility and limits the types of connections that are required to perform a backup which increases security.        </xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Perform Automated Backups " urn="urn:cisecurity.org:controls:8.0:11:2">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Recover</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Ensure Regular Automated Back Ups" urn="urn:cisecurity.org:controls:7.0:10:1">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
            <controls:safeguard title="Perform Complete System Backups" urn="urn:cisecurity.org:controls:7.0:10:2">
              <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
              <controls:asset_type>Data</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en">
        <xhtml:p>
The native PostgreSQL backup facility           <xhtml:span class="inline_block">pg_dump</xhtml:span>
 provides adequate logical backup operations but does not provide for Point In Time Recovery (PITR). The PostgreSQL facility           <xhtml:span class="inline_block">pg_basebackup</xhtml:span>
 performs a physical backup of the database files and does provide for PITR, but it is constrained by single threading. Both of these methodologies are standard in the PostgreSQL ecosystem and appropriate for particular backup/recovery needs.           <xhtml:span class="inline_block">pgBackRest</xhtml:span>
 offers another option with much more robust features and flexibility.        </xhtml:p>
        <xhtml:p>
          <xhtml:span class="inline_block">pgBackRest</xhtml:span>
 is open-source software developed to perform efficient backups on PostgreSQL databases that measure in tens of terabytes and greater. It supports per-file checksums, compression, partial/failed backup resume, high-performance parallel transfer, asynchronous archiving, tablespaces, expiration, full/differential/incremental backups, local/remote operation via SSH, hard-linking, restore,           <xhtml:strong>backup encryption</xhtml:strong>
, and more.           <xhtml:span class="inline_block">pgBackRest</xhtml:span>
 is written in C and does not depend on           <xhtml:span class="inline_block">rsync</xhtml:span>
 or           <xhtml:span class="inline_block">tar</xhtml:span>
 but instead performs its own deltas which give it maximum flexibility. Finally,           <xhtml:span class="inline_block">pgBackRest</xhtml:span>
 provides an easy-to-use internal repository listing backup details accessible via the           <xhtml:span class="inline_block">pgbackrest info</xhtml:span>
 command, as illustrated below.        </xhtml:p>
        <xhtml:code class="code_block">
$ pgbackrest info          <br/>
stanza: proddb01          <br/>
status: ok          <br/>
          <br/>
db (current)          <br/>
  wal archive min/max (14.0-1): 000000010000000000000012 / 000000010000000000000017          <br/>
          <br/>
      full backup: 20190603-153106F          <br/>
          timestamp start/stop: 2019-06-03 15:31:06 / 2019-06-03 15:31:49          <br/>
          wal start/stop: 000000010000000000000012 / 000000010000000000000012          <br/>
          database size: 29.4MB, backup size: 29.4MB          <br/>
          repository size: 3.4MB, repository backup size: 3.4MB          <br/>
          <br/>
      diff backup: 20190603-153106F_20181002-173109D          <br/>
          timestamp start/stop: 2019-06-03 17:31:09 / 2019-06-03 17:31:19          <br/>
          wal start/stop: 000000010000000000000015 / 000000010000000000000015          <br/>
          database size: 29.4MB, backup size: 2.6MB          <br/>
          repository size: 3.4MB, repository backup size: 346.8KB          <br/>
          backup reference list: 20190603-153106F          <br/>
          <br/>
      incr backup: 20190603-153106F_20181002-183114I          <br/>
          timestamp start/stop: 2019-06-03 18:31:14 / 2019-06-03 18:31:22          <br/>
          wal start/stop: 000000010000000000000017 / 000000010000000000000017          <br/>
          database size: 29.4MB, backup size: 8.2KB          <br/>
          repository size: 3.4MB, repository backup size: 519B          <br/>
          backup reference list: 20190603-153106F, 20190603-153106F_20190603-173109D
        </xhtml:code>
      </xccdf:rationale>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/10/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/10/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/11/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://pgbackrest.org/</xccdf:ident>
      <xccdf:ident system="URL">https://github.com/pgbackrest/pgbackrest</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/app-pgdump.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/app-pgbasebackup.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>
              <xhtml:span class="inline_block">pgBackRest</xhtml:span>
 is not installed nor configured for PostgreSQL by default, but instead is maintained as a GitHub project. Fortunately, it is a part of the PGDG repository and can be easily installed:            </xhtml:p>
            <xhtml:code class="code_block">
# whoami              <br/>
root              <br/>
# dnf -y install pgbackrest              <br/>
[snip]              <br/>
Installed:              <br/>
  pgbackrest-2.34-1.rhel8.x86_64              <br/>
              <br/>
Complete!
            </xhtml:code>
            <xhtml:p>
Once installed,               <xhtml:span class="inline_block">pgBackRest</xhtml:span>
 must be configured for things like stanza name, backup location, retention policy, logging, etc. Please consult the               <xhtml:a href="http://pgbackrest.org/configuration.html">configuration guide</xhtml:a>
.            </xhtml:p>
            <xhtml:p>
If employing               <xhtml:span class="inline_block">pgBackRest</xhtml:span>
 for your backup/recovery solution, ensure the repository, base backups, and WAL archives are stored on a reliable file system separate from the database server. Further, the external storage system where backups resided should have limited access to only those system administrators as necessary. Finally, as with any backup/recovery solution, stringent testing must be conducted.               <xhtml:strong>A backup is only good if it can be restored successfully.</xhtml:strong>
            </xhtml:p>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref href="CIS_PostgreSQL_14_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.postgresql_postgresql_14:def:1658946"/>
      </check>
    </xccdf:Rule>
    <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.4_Ensure_miscellaneous_configuration_settings_are_correct" role="unscored" selected="false" weight="0.0">
      <xccdf:title xml:lang="en">Ensure miscellaneous configuration settings are correct</xccdf:title>
      <xccdf:description xml:lang="en">
        <xhtml:p>This recommendation covers non-regular, special files, and dynamic libraries.</xhtml:p>
        <xhtml:p>PostgreSQL permits local logins via the UNIX DOMAIN SOCKET and, for the most part, anyone with a legitimate Unix login account can make the attempt. Limiting PostgreSQL login attempts can be made by relocating the UNIX DOMAIN SOCKET to a subdirectory with restricted permissions.</xhtml:p>
        <xhtml:p>The creation and implementation of user-defined dynamic libraries is an extraordinary powerful capability. In the hands of an experienced DBA/programmer, it can significantly enhance the power and flexibility of the RDBMS; but new and unexpected behavior can also be assigned to the RDBMS, resulting in a very dangerous environment in what should otherwise be trusted.</xhtml:p>
      </xccdf:description>
      <xccdf:metadata>
        <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
          <controls:framework urn="urn:cisecurity.org:controls:8.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type>Applications</controls:asset_type>
              <controls:security_function>Protect</controls:security_function>
            </controls:safeguard>
          </controls:framework>
          <controls:framework urn="urn:cisecurity.org:controls:7.0">
            <controls:safeguard title="Use Standard Hardening Configuration Templates for Databases" urn="urn:cisecurity.org:controls:7.0:18:11">
              <controls:implementation_groups ig2="true" ig3="true"/>
              <controls:asset_type/>
              <controls:security_function/>
            </controls:safeguard>
          </controls:framework>
        </controls:cis_controls>
      </xccdf:metadata>
      <xccdf:rationale xml:lang="en"/>
      <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
      <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-file-locations.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-connection.html</xccdf:ident>
      <xccdf:ident system="URL">https://www.postgresql.org/docs/current/static/runtime-config-client.html</xccdf:ident>
      <xccdf:fixtext xml:lang="en">
        <xhtml:div>
          <xhtml:p>
            <xhtml:p>Follow these steps to remediate the configuration:</xhtml:p>
            <xhtml:ul>
              <xhtml:li>Determine permissions based on your organization's security policies.</xhtml:li>
              <xhtml:li>Relocate all files and ensure their permissions are restricted as much as possible, i.e. only superuser read access.</xhtml:li>
              <xhtml:li>Ensure all directories where these files are located have restricted permissions such that the superuser can read but not write.</xhtml:li>
              <xhtml:li>
Lastly, change the settings accordingly in the                 <xhtml:span class="inline_block">postgresql.conf</xhtml:span>
 configuration file and restart the database cluster for changes to take effect.              </xhtml:li>
            </xhtml:ul>
            <xhtml:p/>
          </xhtml:p>
        </xhtml:div>
      </xccdf:fixtext>
    </xccdf:Rule>
  </xccdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>s7NttgoCPRqH1OidppQXXdU4EW4=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
qyAsEIeq2jyfNYrrz9SoDIW90lAT1q8UbyrqH1e6semygkuz99SEZx6MmLwZvBT1XTI1AckchG0l
9+C9ObJCDCTAz6jElYnnEB2B8A1mahJ6UmhQZOhpcjRII9gIjelxosuHTX8mGpd6HcqNLmfFFYgG
N1JBsi8GnyPQ+5JJd/HaTTHv/YEmbtn2NAbG1pNUSySb+riLoLqcqPWynItATcLHr0tALYLL1zxE
xmkq7LUCsIx5ngajyS2s8yGDanBXswx9rgPNeDb9Bd/16TqstMng6nesEqTWHKCYwo7wZoEL99I9
pbzCgf90R6xrAPgwmcAG1f18k3Nv2MyUORLrzg==
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIFUjCCBDqgAwIBAgIIPx+qZKptEY4wDQYJKoZIhvcNAQELBQAwgbQxCzAJBgNVBAYTAlVTMRAw
DgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5LmNv
bSwgSW5jLjEtMCsGA1UECxMkaHR0cDovL2NlcnRzLmdvZGFkZHkuY29tL3JlcG9zaXRvcnkvMTMw
MQYDVQQDEypHbyBEYWRkeSBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwHhcNMjAw
OTA4MTMzOTM5WhcNMjMxMDI4MDAzMjA1WjCBkzELMAkGA1UEBhMCVVMxETAPBgNVBAgTCE5ldyBZ
b3JrMRcwFQYDVQQHEw5FYXN0IEdyZWVuYnVzaDErMCkGA1UEChMiQ2VudGVyIGZvciBJbnRlcm5l
dCBTZWN1cml0eSwgSW5jLjErMCkGA1UEAxMiQ2VudGVyIGZvciBJbnRlcm5ldCBTZWN1cml0eSwg
SW5jLjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANDBp4+sl9kB5JRmnQH0wcbLLz/t
n2HoD6TRl3xJj12V61njBNgaiGzvoSl07sFLnESukb0CU44MzYDoUMdx3HJUcEAeMY/9eITqGUnk
N4WsP145eFqH7FoszOY/4NYlgYMYt8ZP2kRHyim9LpQTLT/1mBaUkY2f2e5uUCootH3iT8W3/sK2
flLzWfLgXTvkhJm4Uvw1RErBFs15+krW0KWtnZ6NmiDhmV0CnFGNnd1meGZPs2sBXEVGLJVSKzoT
G9Ht/oWyRLRcJuXpHoXTYpkqM2MsixmSaJy5b6/D35r0NXHru3p1gkX2a0VgJQxxWqLi3bVPzpl3
PlJu3C8M/FUCAwEAAaOCAYUwggGBMAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYBBQUHAwMw
DgYDVR0PAQH/BAQDAgeAMDUGA1UdHwQuMCwwKqAooCaGJGh0dHA6Ly9jcmwuZ29kYWRkeS5jb20v
Z2RpZzJzNS02LmNybDBdBgNVHSAEVjBUMEgGC2CGSAGG/W0BBxcCMDkwNwYIKwYBBQUHAgEWK2h0
dHA6Ly9jZXJ0aWZpY2F0ZXMuZ29kYWRkeS5jb20vcmVwb3NpdG9yeS8wCAYGZ4EMAQQBMHYGCCsG
AQUFBwEBBGowaDAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuZ29kYWRkeS5jb20vMEAGCCsGAQUF
BzAChjRodHRwOi8vY2VydGlmaWNhdGVzLmdvZGFkZHkuY29tL3JlcG9zaXRvcnkvZ2RpZzIuY3J0
MB8GA1UdIwQYMBaAFEDCvSeOzDSDMKIz1/tss/C0LIDOMB0GA1UdDgQWBBT7fOf4ISDprbE+qUFe
+friFTKgHjANBgkqhkiG9w0BAQsFAAOCAQEAT0XLw2vmuq6e58bkLDXdqKeGQjREDChLw2Mae9LI
JB93QgdA2OCLA1FwU2s7lawEDcma9wPiugxVGoaQNOfRw2/+cz0xmR3uaKQq6I24dWbHF20N2tSz
1RAAK1lRZKewA1fj+qqKWjzETA0LpqZlaFF+CKBpQcyfYyQRZxpHkB1vvKMf4kMIRKruvl4ixLjN
uAZrbQUWlXuq/MUkVP3FgdxWBPfmMGyngHs4hNMaSQGb1TEhBjj+PGoSunAyaOgO/P94XJPQQX3O
2oNDsPou6gKcNtbZrH+iYTJ8rcqQTontMwSP/HrYj8lgG3neG53vk05p0jCn2M5W0ukJ4LPEnA==
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>0MGnj6yX2QHklGadAfTBxssvP+2fYegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzN
gOhQx3HcclRwQB4xj/14hOoZSeQ3haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WY
FpSRjZ/Z7m5QKii0feJPxbf+wrZ+UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKc
UY2d3WZ4Zk+zawFcRUYslVIrOhMb0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7
enWCRfZrRWAlDHFaouLdtU/OmXc+Um7cLwz8VQ==</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></xccdf:Benchmark>