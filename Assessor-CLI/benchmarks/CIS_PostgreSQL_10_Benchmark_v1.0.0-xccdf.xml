<xccdf:Benchmark xmlns:xccdf="http://checklists.nist.gov/xccdf/1.2" xmlns="http://checklists.nist.gov/xccdf/1.2" xmlns:cc6="http://cisecurity.org/20-cc/v6.1" xmlns:cc7="http://cisecurity.org/20-cc/v7.0" xmlns:notes="http://benchmarks.cisecurity.org/notes" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="xccdf_org.cisecurity.benchmarks_benchmark_1.0.0_CIS_PostgreSQL_10_Benchmark" style="SCAP_1.2" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.2 https://scap.nist.gov/schema/xccdf/1.2/xccdf_1.2.xsd">
   <xccdf:status date="2019-03-11">draft</xccdf:status>
   <xccdf:title xml:lang="en">CIS PostgreSQL 10 Benchmark</xccdf:title>
   <xccdf:description xml:lang="en">
      <xhtml:p>This document, CIS PostgreSQL 10 Benchmark, provides prescriptive guidance for establishing a secure configuration posture for PostgreSQL 10. This guide was tested against PostgreSQL 10 running on CentOS 7, but applies to other Linux distributions as well. To obtain the latest version of this guide, please visit <xhtml:a href="http://benchmarks.cisecurity.org/">http://benchmarks.cisecurity.org</xhtml:a>. If you have questions, comments, or have identified ways to improve this guide, please write us at <xhtml:a href="mailto:feedback@cisecurity.org">feedback@cisecurity.org</xhtml:a>.</xhtml:p>
   </xccdf:description>
   <xccdf:notice id="terms-of-use" xml:lang="en">	BACKGROUND.
	The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide.	Recommendations contained in the Products ("Recommendations") result from a consensus-building process that involves many security experts and are generally generic in nature.	The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their networks, systems, and devices.	Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements.	The Recommendations are not in any way intended to be a "quick fix" for anyone's information security needs.
	NO REPRESENTATIONS, WARRANTIES, OR COVENANTS.
	CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability, timeliness, or completeness of	the Products or the Recommendations.	CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.	USER AGREEMENTS.
	By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that:
	1.	No network, system, device, hardware, software, or component can be made fully secure;
	2.	We are using the Products and the Recommendations solely at our own risk;
	3.	We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even risks that result from 		CIS's negligence or failure to perform; 
	4.	We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the 			Recommendations to our particular circumstances and requirements;
	5.	Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us of 		the need for any such corrections, updates, upgrades, or bug fixes; and
	6.	Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or otherwise) for 		any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage 		to reputation,loss of customers, loss of software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, 	business interruption, wasted management or other staff resources or claims of any kind against us from third parties) arising out of or in any way 	Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such 	damages), including without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, 	viruses, worms, backdoors, Trojan horses or other harmful items.
	GRANT OF LIMITED RIGHTS.
	CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use:
	1.	Except to the extent that we may have received additional authorization pursuant to a written agreement with CIS, each user may download, install and 	use each of the Products on a single computer;
	2.	Each user may print one or more copies of any Product or any component of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided 		that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its entirety.
	RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION.
	The Products are protected by copyright and other intellectual property laws and by international treaties.	We acknowledge and agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties.	CIS reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights."
	Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product.	We will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph.
	We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors, members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs) incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim.	We further agree that all CIS Parties are third-party beneficiaries of our undertakings in these Agreed Terms of Use.	SPECIAL RULES.
	CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which CIS has a written contractual relationship.	Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules.
	CIS hereby grants each CIS Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means.	Each such Member acknowledges and agrees that the foregoing grant is subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time.
	CHOICE OF LAW; JURISDICTION; VENUE.
	We acknowledge and agree that these Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action.	If any of these Agreed Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
	BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.</xccdf:notice>
   <xccdf:version>1.0.0</xccdf:version>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1_-_PostgreSQL">
      <xccdf:title xml:lang="en">Level 1 - PostgreSQL</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Items in this profile apply to PostgreSQL 10 and intend to:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>be practical and prudent;</xhtml:li>
            <xhtml:li>provide a clear security benefit; and</xhtml:li>
            <xhtml:li>not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
         </xhtml:ul>
         <xhtml:p>
            <xhtml:strong>Note:</xhtml:strong> The intent of this profile is to include checks that can be assessed by remotely connecting to PostgreSQL. Therefore, file system-related checks are not contained in this profile.</xhtml:p>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Ensure_the_log_destinations_are_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Ensure_the_logging_collector_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Ensure_the_log_file_destination_directory_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Ensure_the_filename_pattern_for_log_files_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Ensure_the_log_file_permissions_are_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Ensure_log_truncate_on_rotation_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Ensure_the_maximum_log_file_lifetime_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Ensure_the_maximum_log_file_size_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Ensure_the_correct_syslog_facility_is_selected" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ensure_the_program_name_for_PostgreSQL_syslog_messages_is_correct" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Ensure_the_correct_messages_are_written_to_the_server_log" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Ensure_the_correct_SQL_statements_generating_errors_are_recorded" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Ensure_debug_print_parse_is_disabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Ensure_debug_print_rewritten_is_disabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Ensure_debug_print_plan_is_disabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Ensure_debug_pretty_print_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Ensure_log_connections_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.19_Ensure_log_disconnections_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.20_Ensure_log_error_verbosity_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.21_Ensure_log_hostname_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.22_Ensure_log_line_prefix_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.23_Ensure_log_statement_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.24_Ensure_log_timezone_is_set_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_the_PostgreSQL_Audit_Extension_pgAudit_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_excessive_administrative_privileges_are_revoked" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_excessive_DML_privileges_are_revoked" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Use_pg_permission_extension_to_audit_object_permissions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_Row_Level_Security_RLS_is_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.7_Ensure_the_set_user_extension_is_installed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.8_Make_use_of_default_roles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_Attack_Vectors_Runtime_Parameters_are_Configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_backend_runtime_parameters_are_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_Postmaster_Runtime_Parameters_are_Configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_SIGHUP_Runtime_Parameters_are_Configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Ensure_Superuser_Runtime_Parameters_are_Configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_User_Runtime_Parameters_are_Configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_SSL_is_enabled_and_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_the_pgcrypto_extension_is_installed_and_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Ensure_a_replication-only_user_is_created_and_used_for_streaming_replication" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Ensure_base_backups_are_configured_and_functional" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4_Ensure_streaming_replication_parameters_are_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1_Ensure_PostgreSQL_configuration_files_are_outside_the_data_cluster" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2_Ensure_PostgreSQL_subdirectory_locations_are_outside_the_data_cluster" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Ensure_miscellaneous_configuration_settings_are_correct" selected="true"/>
   </xccdf:Profile>
   <xccdf:Profile extends="xccdf_org.cisecurity.benchmarks_profile_Level_1_-_PostgreSQL" id="xccdf_org.cisecurity.benchmarks_profile_Level_1_-_PostgreSQL_on_Linux">
      <xccdf:title xml:lang="en">Level 1 - PostgreSQL on Linux</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Items in this profile apply to PostgreSQL 10 running on Linux and intend to:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>be practical and prudent;</xhtml:li>
            <xhtml:li>provide a clear security benefit; and</xhtml:li>
            <xhtml:li>not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Ensure_packages_are_obtained_from_authorized_repositories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2_Ensure_Installation_of_Binary_Packages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.3_Ensure_Installation_of_Community_Packages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.4_Ensure_systemd_Service_Files_Are_Enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.5_Ensure_Data_Cluster_Initialized_Successfully" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Ensure_the_file_permissions_mask_is_correct" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2_Ensure_the_PostgreSQL_pg_wheel_group_membership_is_correct" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Ensure_sudo_is_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Ensure_excessive_function_privileges_are_revoked" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Ensure_login_via_local_UNIX_Domain_Socket_is_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_login_via_host_TCPIP_Socket_is_configured_correctly" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Ensure_FIPS_140-2_OpenSSL_Cryptography_Is_Used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Ensure_WAL_archiving_is_configured_and_functional" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3_Ensure_the_backup_and_restore_tool_pgBackRest_is_installed_and_configured" selected="true"/>
   </xccdf:Profile>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.2.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the log destinations are set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the log destinations are set correctly" -&gt; "Ensure the log destinations are set correctly</xccdf:description>
      <xccdf:value>^.+$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.3.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the logging collector is enabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the logging collector is enabled" -&gt; "Ensure the logging collector is enabled</xccdf:description>
      <xccdf:value>^(?i)on$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.4.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the log file destination directory is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the log file destination directory is set correctly" -&gt; "Ensure the log file destination directory is set correctly</xccdf:description>
      <xccdf:value>^.+$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.5.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the filename pattern for log files is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the filename pattern for log files is set correctly" -&gt; "Ensure the filename pattern for log files is set correctly</xccdf:description>
      <xccdf:value>^.+([-_]*%[a-eA-EFghGHIjklmMnOpr-zR-Z+%][-_]*)+\.(?i)log$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.6.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the log file permissions are set to '0600'</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the log file permissions are set correctly" -&gt; "Ensure the log file permissions are set to '0600'</xccdf:description>
      <xccdf:value>^06[04]0$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.7.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'log_truncate_on_rotation' is set to 'off'</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_truncate_on_rotation' is enabled" -&gt; "Ensure 'log_truncate_on_rotation' is set to 'off'</xccdf:description>
      <xccdf:value>^(?i)off$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.8.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the maximum log file lifetime is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the maximum log file lifetime is set correctly" -&gt; "Ensure the maximum log file lifetime is set correctly</xccdf:description>
      <xccdf:value>^[1-9][0-9]*(hr|d|m)$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.9.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the maximum log file size is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the maximum log file size is set correctly" -&gt; "Ensure the maximum log file size is set correctly</xccdf:description>
      <xccdf:value>^[1-9][0-9]*(?i)[GM]B$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.10.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the correct syslog facility is selected</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the correct syslog facility is selected" -&gt; "Ensure the correct syslog facility is selected</xccdf:description>
      <xccdf:value>^(?i)local[0-7]$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.11.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the program name for PostgreSQL syslog messages is correct</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the program name for PostgreSQL syslog messages is correct" -&gt; "Ensure the program name for PostgreSQL syslog messages is correct</xccdf:description>
      <xccdf:value>^.+$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.12.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the correct messages are written to the server log</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the correct messages are written to the server log" -&gt; "Ensure the correct messages are written to the server log</xccdf:description>
      <xccdf:value>^(?i)debug+[1-5]|info|log|notice|warning|error|fatal|panic$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.13.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure the correct SQL statements generating errors are recorded</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the correct SQL statements generating errors are recorded" -&gt; "Ensure the correct SQL statements generating errors are recorded</xccdf:description>
      <xccdf:value>^(?i)debug+[1-5]|info|log|notice|warning|error|fatal|panic$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.14.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'debug_print_parse' is disabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'debug_print_parse' is disabled" -&gt; "Ensure 'debug_print_parse' is disabled</xccdf:description>
      <xccdf:value>^(?i)off$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.15.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'debug_print_rewritten' is disabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'debug_print_rewritten' is disabled" -&gt; "Ensure 'debug_print_rewritten' is disabled</xccdf:description>
      <xccdf:value>^(?i)off$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.16.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'debug_print_plan' is disabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'debug_print_plan' is disabled" -&gt; "Ensure 'debug_print_plan' is disabled</xccdf:description>
      <xccdf:value>^(?i)off$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.17.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'debug_pretty_print' is enabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'debug_pretty_print' is enabled" -&gt; "Ensure 'debug_pretty_print' is enabled</xccdf:description>
      <xccdf:value>^(?i)on$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.18.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'log_connections' is enabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_connections' is enabled" -&gt; "Ensure 'log_connections' is enabled</xccdf:description>
      <xccdf:value>^(?i)on$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.19.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'log_disconnections' is enabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_disconnections' is enabled" -&gt; "Ensure 'log_disconnections' is enabled</xccdf:description>
      <xccdf:value>^(?i)on$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.20.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'log_error_verbosity' is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_error_verbosity' is set correctly" -&gt; "Ensure 'log_error_verbosity' is set correctly</xccdf:description>
      <xccdf:value>^(?i)terse|default|verbose$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.21.1_var" operator="equals" type="string">
      <xccdf:title>Ensure 'log_hostname' is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_hostname' is set correctly" -&gt; "Ensure 'log_hostname' is set correctly</xccdf:description>
      <xccdf:value>off</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.22.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'log_line_prefix' is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_line_prefix' is set correctly" -&gt; "Ensure 'log_line_prefix' is set correctly</xccdf:description>
      <xccdf:value>^&lt;\s*\%[audrhptmieclsvxq\%\s]+\s*&gt;\s*$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.23.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'log_statement' is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_statement' is set correctly" -&gt; "Ensure 'log_statement' is set correctly</xccdf:description>
      <xccdf:value>^ddl|mod|all$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.1.24.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure 'log_timezone' is set correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'log_timezone' is set correctly" -&gt; "Ensure 'log_timezone' is set correctly</xccdf:description>
      <xccdf:value>^GMT|UTC$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_3.2.1_var" operator="equals" type="string">
      <xccdf:title>Ensure the PostgreSQL Audit Extension (pgAudit) is enabled</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure the PostgreSQL Audit Extension (pgAudit) is enabled" -&gt; "Ensure the PostgreSQL Audit Extension (pgAudit) is enabled</xccdf:description>
      <xccdf:value>pgaudit</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_6.2.1_var" operator="equals" type="string">
      <xccdf:title>Check ignore_system_indexes</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'backend' runtime parameters are configured correctly" -&gt; "Check ignore_system_indexes</xccdf:description>
      <xccdf:value>off</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_6.2.2_var" operator="equals" type="string">
      <xccdf:title>Check log_connections</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'backend' runtime parameters are configured correctly" -&gt; "Check log_connections</xccdf:description>
      <xccdf:value>on</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_6.2.3_var" operator="equals" type="string">
      <xccdf:title>Check log_disconnections</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'backend' runtime parameters are configured correctly" -&gt; "Check log_disconnections</xccdf:description>
      <xccdf:value>on</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_6.2.4_var" operator="equals" type="number">
      <xccdf:title>Check post_auth_delay</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure 'backend' runtime parameters are configured correctly" -&gt; "Check post_auth_delay</xccdf:description>
      <xccdf:value>0</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_6.8.1_var" operator="equals" type="string">
      <xccdf:title>Ensure SSL is enabled and configured correctly</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure SSL is enabled and configured correctly" -&gt; "Ensure SSL is enabled and configured correctly</xccdf:description>
      <xccdf:value>on</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_7.3.1_var" operator="pattern match" type="string">
      <xccdf:title>Ensure WAL archiving is configured and functional</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure WAL archiving is configured and functional" -&gt; "Ensure WAL archiving is configured and functional</xccdf:description>
      <xccdf:value>(?i)^on$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value id="xccdf_org.cisecurity.benchmarks_value_7.3.2_var" operator="pattern match" type="string">
      <xccdf:title>Ensure SSH as a transport medium</xccdf:title>
      <xccdf:description>This variable is used in Benchmark item "Ensure WAL archiving is configured and functional" -&gt; "Ensure SSH as a transport medium</xccdf:description>
      <xccdf:value>^'rsync.+-e ssh.*'$</xccdf:value>
   </xccdf:Value>
   <xccdf:Value abstract="false" hidden="false" id="xccdf_org.cisecurity_value_jdbc.url" interactive="1" prohibitChanges="false" type="string">
      <xccdf:title override="0">PostgreSQL connection string.</xccdf:title>
      <xccdf:description override="0">This value allows for user-supplied connection strings</xccdf:description>
      <xccdf:value/>
      <xccdf:default>jdbc:postgresql://localhost:5432?user=test&amp;password=secret&amp;ssl=true</xccdf:default>
   </xccdf:Value>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1_Installation_and_Patches">
      <xccdf:title xml:lang="en">Installation and Patches</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>One of the best ways to ensure secure PostgreSQL security is to implement security updates as they come out, along with any applicable OS patches that will not interfere with system operations. It is additionally prudent to ensure the installed version has not reached end-of-life.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1_Ensure_packages_are_obtained_from_authorized_repositories" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure packages are obtained from authorized repositories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>When obtaining and installing software packages (typically via <xhtml:span class="inline_block">yum</xhtml:span>), it's imperative that packages are sourced only from valid and authorized repositories. For PostgreSQL, a short list of valid repositories would include CentOS (<xhtml:a href="https://www.centos.org">www.centos.org</xhtml:a>) and the official PostgreSQL website (<xhtml:a href="https://yum.postgresql.org">yum.postgresql.org</xhtml:a>).</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Being open source, PostgreSQL packages are widely available across the internet through RPM aggregators and providers. However, using invalid or unauthorized sources for packages can lead to implementing untested, defective, or malicious software.</xhtml:p>
            <xhtml:p>Many organizations choose to implement a local <xhtml:span class="inline_block">yum</xhtml:span> repository within their organization. Care must be taken to ensure that only valid and authorized packages are downloaded and installed into such local repositories.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://wiki.centos.org/PackageManagement/Yum/</xccdf:ident>
         <xccdf:ident system="URL">https://www.centos.org/docs/5/html/5.2/Deployment_Guide/s1-yum-yumconf-repository.html</xccdf:ident>
         <xccdf:ident system="URL">https://en.wikipedia.org/wiki/Yum_(software)</xccdf:ident>
         <xccdf:ident system="URL">https://www.howtoforge.com/creating_a_local_yum_repository_centos</xccdf:ident>
         <xccdf:ident system="URL">https://yum.postgresql.org</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Alter the configured repositories so they only include valid and authorized sources of packages.</xhtml:p>
                  <xhtml:p>As an example of adding an authorized repository, we will install the PGDG repository RPM from '<xhtml:a href="https://yum.postgresql.org">yum.postgresql.org</xhtml:a>':</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ rpm -ivh https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm<br/>Retrieving https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm<br/>warning: /var/tmp/rpm-tmp.xU8FK1: Header V4 DSA/SHA1 Signature, key ID 442df0f8: NOKEY<br/>Preparing...                ########################################### [100%]<br/>   1:pgdg-centos10          ########################################### [100%]
</xhtml:code>
                  <xhtml:p>Verify the repository has been added and is enabled:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ yum repolist all | grep enabled:<br/>base                        CentOS-6 - Base                    enabled: 6,713<br/>extras                      CentOS-6 - Extras                  enabled:    31<br/>pgdg10                      PostgreSQL 10.7 - x86_64           enabled:   536<br/>updates                     CentOS-6 - Updates                 enabled:    96
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.2_Ensure_Installation_of_Binary_Packages" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure Installation of Binary Packages</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The PostgreSQL packages are installed on the Operating System from valid source.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Standard Linux distributions, although possessing the requisite packages, often do not have PostgreSQL pre-installed. The installation process includes installing the binaries and the means to generate a data cluster too. Package installation should include both the server and client packages. Contribution modules are optional depending upon one's architectural requirements (they are recommended though).</xhtml:p>
            <xhtml:p>From a security perspective, it's imperative to verify the PostgreSQL binary packages are sourced from a valid Linux <xhtml:span class="inline_block">yum</xhtml:span> repository. The most common Linux repositories include CentOS base and PGDG base; however, it's up to the organization to validate. For a complete listing of all PostgreSQL binaries available via configured repositories inspect the output from <xhtml:span class="inline_block">yum provides postgres*</xhtml:span>.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If the version of PostgreSQL installed is not 10.x, the packages may be uninstalled using this command:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ yum remove $(rpm -qa|grep postgres)
</xhtml:code>
                  <xhtml:p>The next recommendation "1.3 Ensure Installation of Community Packages" describes how to explicitly choose which version of PostgreSQL to install, regardless of Linux distribution association.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>If the PostgreSQL version shipped as part of the default binary installation associated with your Linux distribution satisfies your requirements, this may be adequate <xhtml:em>for development and testing purposes</xhtml:em>. However, <xhtml:em>for production instances</xhtml:em> it's generally recommended to install the <xhtml:em>latest stable release</xhtml:em> of PostgreSQL.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7821600"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.3_Ensure_Installation_of_Community_Packages" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure Installation of Community Packages</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Adding, and installing, the PostgreSQL community packages to the host's package repository.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>It's an unfortunate reality that Linux distributions do not always have the most up-to-date versions of PostgreSQL. Disadvantages of older releases include: missing bug patches, no access to highly desirable contribution modules, no access to 3rd party projects that are complimentary to PostgreSQL, and no upgrade path migrating from one version of PostgreSQL to the next. The worst set of circumstances is to be limited to a version of the RDBMS that has reached its end-of-life.</xhtml:p>
            <xhtml:p>From a security perspective, it's imperative that Postgres Community Packages are only obtained from the official website <xhtml:a href="https://yum.postgresql.org/">https://yum.postgresql.org/</xhtml:a>. Being open source, the Postgres packages are widely available over the internet via myriad package aggregators and providers. Obtaining software from these unofficial sites risks installing defective, corrupt, or downright malicious versions of PostgreSQL.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/support/versioning/</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/developer/roadmap/</xccdf:ident>
         <xccdf:ident system="URL">https://yum.postgresql.org/repopackages.php</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The following example blocks the outdated distro packages, adds the PGDG repository RPM for PostgreSQL version 10, and installs the client-server-contributions rpms to the host where you want to install the RDBMS:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ vi /etc/yum.repos.d/CentOS-Base.repo<br/>[base]<br/>name=CentOS-$releasever - Base<br/>mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo<br/>=os&amp;infra=$infra<br/>#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/<br/>gpgcheck=1<br/>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6<br/>exclude=postgresql*  &lt;-- add this line<br/>
                     <br/>#released updates<br/>[updates]<br/>name=CentOS-$releasever - Updates<br/>mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo<br/>=updates&amp;infra=$infra<br/>#baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/<br/>gpgcheck=1<br/>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6<br/>exclude=postgresql*  &lt;-- add this line
</xhtml:code>
                  <xhtml:p>Using a web browser, go to <xhtml:a href="http://yum.postgresql.org">http://yum.postgresql.org</xhtml:a> and navigate to the repo download link for your OS and version:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ yum -y install https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm
</xhtml:code>
                  <xhtml:p>Finally, install the PostgreSQL packages:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ yum -y groupinstall "PostgreSQL Database Server 10 PGDG"<br/>Loaded plugins: fastestmirror<br/>Setting up Group Process<br/>Loading mirror speeds from cached hostfile<br/> * base: mirror.us.oneandone.net<br/> * extras: centos.mirrors.tds.net<br/> * updates: mirror.cisp.com<br/>base                                                     | 3.7 kB     00:00<br/>extras                                                   | 3.4 kB     00:00<br/>updates                                                  | 3.4 kB     00:00<br/>base/group_gz                                            | 242 kB     00:00<br/>pgdg10/group_gz                                          |  249 B     00:00<br/>Resolving Dependencies<br/>--&gt; Running transaction check<br/>---&gt; Package postgresql10.x86_64 0:10.7-1PGDG.rhel7 will be installed<br/>---&gt; Package postgresql10-contrib.x86_64 0:10.7-1PGDG.rhel7 will be installed<br/>--&gt; Processing Dependency: libxslt.so.1(LIBXML2_1.0.22)(64bit) for package: postgresql10-contrib-10.7-1PGDG.rhel7.x86_64<br/>--&gt; Processing Dependency: libxslt.so.1(LIBXML2_1.0.18)(64bit) for package: postgresql10-contrib-10.7-1PGDG.rhel7.x86_64<br/>--&gt; Processing Dependency: libxslt.so.1(LIBXML2_1.0.11)(64bit) for package: postgresql10-contrib-10.7-1PGDG.rhel7.x86_64<br/>--&gt; Processing Dependency: libxslt.so.1()(64bit) for package: postgresql10-contrib-10.7-1PGDG.rhel7.x86_64<br/>---&gt; Package postgresql10-libs.x86_64 0:10.7-1PGDG.rhel7 will be installed<br/>---&gt; Package postgresql10-server.x86_64 0:10.7-1PGDG.rhel7 will be installed<br/>--&gt; Running transaction check<br/>---&gt; Package libxslt.x86_64 0:1.1.26-2.el7_3.1 will be installed<br/>--&gt; Finished Dependency Resolution<br/>
                     <br/>Dependencies Resolved<br/>
                     <br/>================================================================================<br/> Package                  Arch       Version                   Repository  Size<br/>================================================================================<br/>Installing:<br/> postgresql10             x86_64     10.7-1PGDG.rhel7          pgdg10     1.4 M<br/> postgresql10-contrib     x86_64     10.7-1PGDG.rhel7          pgdg10     492 k<br/> postgresql10-libs        x86_64     10.7-1PGDG.rhel7          pgdg10     289 k<br/> postgresql10-server      x86_64     10.7-1PGDG.rhel7          pgdg10     5.0 M<br/>Installing for dependencies:<br/> libxslt                  x86_64     1.1.26-2.el7_3.1          base       452 k<br/>
                     <br/>Transaction Summary<br/>================================================================================<br/>Install       5 Package(s)<br/>
                     <br/>Total download size: 7.7 M<br/>Installed size: 31 M<br/>Downloading Packages:<br/>(1/5): libxslt-1.1.26-2.el7_3.1.x86_64.rpm               | 452 kB     00:00<br/>(2/5): postgresql10-10.7-1PGDG.rhel7.x86_64.rpm          | 1.4 MB     00:01<br/>(3/5): postgresql10-contrib-10.7-1PGDG.rhel7.x86_64.rpm  | 492 kB     00:00<br/>(4/5): postgresql10-libs-10.7-1PGDG.rhel7.x86_64.rpm     | 289 kB     00:00<br/>(5/5): postgresql10-server-10.7-1PGDG.rhel7.x86_64.rpm   | 5.0 MB     00:00<br/>--------------------------------------------------------------------------------<br/>Total                                           2.5 MB/s | 7.7 MB     00:03<br/>Running rpm_check_debug<br/>Running Transaction Test<br/>Transaction Test Succeeded<br/>Running Transaction<br/>  Installing : postgresql10-libs-10.7-1PGDG.rhel7.x86_64                    1/5<br/>  Installing : postgresql10-10.7-1PGDG.rhel7.x86_64                         2/5<br/>  Installing : libxslt-1.1.26-2.el7_3.1.x86_64                              3/5<br/>  Installing : postgresql10-contrib-10.7-1PGDG.rhel6.x86_64                 4/5<br/>  Installing : postgresql10-server-10.7-1PGDG.rhel6.x86_64                  5/5<br/>  Verifying  : libxslt-1.1.26-2.el7_3.1.x86_64                              1/5<br/>  Verifying  : postgresql10-10.7-1PGDG.rhel7.x86_64                         2/5<br/>  Verifying  : postgresql10-libs-10.7-1PGDG.rhel7.x86_64                    3/5<br/>  Verifying  : postgresql10-server-10.7-1PGDG.rhel7.x86_64                  4/5<br/>  Verifying  : postgresql10-contrib-10.7-1PGDG.rhel7.x86_64                 5/5<br/>
                     <br/>Installed:<br/>  postgresql10.x86_64 0:10.7-1PGDG.rhel7<br/>  postgresql10-contrib.x86_64 0:10.7-1PGDG.rhel7<br/>  postgresql10-libs.x86_64 0:10,7-1PGDG.rhel7<br/>  postgresql10-server.x86_64 0:10,7-1PGDG.rhel7<br/>
                     <br/>Dependency Installed:<br/>  libxslt.x86_64 0:1.1.26-2.el7_3.1<br/>
                     <br/>Complete!
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Note:</xhtml:strong> The above-mentioned example is referenced as an illustration only. Package names and versions may differ.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7821700"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.4_Ensure_systemd_Service_Files_Are_Enabled" role="unscored" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure systemd Service Files Are Enabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Confirm, and correct if necessary, the PostgreSQL <xhtml:span class="inline_block">systemd</xhtml:span> service is enabled.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Enabling the <xhtml:span class="inline_block">systemd</xhtml:span> service on the OS ensures the database service is active when a change of state occurs as in the case of a system startup or reboot.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://linuxcommand.org/man_pages/runlevel8.html</xccdf:ident>
         <xccdf:ident system="URL">https://linuxcommand.org/man_pages/chkconfig8.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.tldp.org/LDP/sag/html/run-levels-intro.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Irrespective of package source, PostgreSQL services can be identified because it typically includes the text string "postgresql". PGDG installs do not automatically register the service as a "want" of the default <xhtml:span class="inline_block">systemd</xhtml:span> target. Multiple instances of PostgreSQL services often distinguish themselves using a version number.</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ systemctl enable postgresql-10<br/>Created symlink from /etc/systemd/system/multi-user.target.wants/postgresql-10.service to /usr/lib/systemd/system/postgresql-10.service.<br/>$ systemctl list-dependencies multi-user.target | grep -i postgres<br/>● ├─postgresql-10.service
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7821800"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.5_Ensure_Data_Cluster_Initialized_Successfully" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure Data Cluster Initialized Successfully</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>First time installs of PostgreSQL requires the instantiation of the database cluster. A database cluster is a collection of databases that are managed by a single server instance.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>For the purposes of security, PostgreSQL enforces ownership and permissions of the data-cluster such that:</xhtml:p>
            <xhtml:ul>
               <xhtml:li>An initialized data-cluster is owned by the UNIX account that created it.</xhtml:li>
               <xhtml:li>The data-cluster cannot be accessed by other UNIX user-accounts.</xhtml:li>
               <xhtml:li>The data-cluster cannot be created or owned by <xhtml:span class="inline_block">root</xhtml:span>
               </xhtml:li>
               <xhtml:li>The PostgreSQL process cannot be invoked by <xhtml:span class="inline_block">root</xhtml:span> nor any UNIX user account other than the owner of the data cluster.</xhtml:li>
            </xhtml:ul>
            <xhtml:p>Incorrectly instantiating the data-cluster will result in a failed installation.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Attempting to instantiate a data cluster to an existing non-empty directory will fail:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ /usr/pgsql-10/bin/postgresql-10-setup initdb<br/>Data directory is not empty!
</xhtml:code>
                  <xhtml:p>In the case of a cluster instantiation failure, one must delete/remove the entire data cluster directory and repeat the <xhtml:span class="inline_block">initdb</xhtml:span> command:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ rm -rf ~postgres/10<br/>$ /usr/pgsql-10/bin/postgresql-10-setup initdb<br/>Initializing database ... OK
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7821900"/>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2_Directory_and_File_Permissions">
      <xccdf:title xml:lang="en">Directory and File Permissions</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section provides guidance on securing all operating system specific objects for PostgreSQL.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1_Ensure_the_file_permissions_mask_is_correct" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure the file permissions mask is correct</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Files are always created using a default set of permissions. File permissions can be restricted by applying a permissions mask called the <xhtml:strong>
                  <xhtml:span class="inline_block">umask</xhtml:span>
               </xhtml:strong>. The <xhtml:span class="inline_block">postgres</xhtml:span> user account should use a umask of <xhtml:span class="inline_block">077</xhtml:span> to deny file access to all user accounts except the owner.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The Linux OS defaults the umask to <xhtml:span class="inline_block">002</xhtml:span>, which means the owner and primary group can read and write the file, and other accounts are permitted to read the file. Not explicitly setting the umask to a value as restrictive as <xhtml:span class="inline_block">077</xhtml:span> allows other users to read, write, or even execute files and scripts created by the <xhtml:span class="inline_block">postgres</xhtml:span> user account. The alternative to using a umask is explicitly updating file permissions after file creation using the command line utility <xhtml:span class="inline_block">chmod</xhtml:span> (a manual and error prone process that is not advised).</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Depending upon the <xhtml:span class="inline_block">postgres</xhtml:span> user's environment, the umask is typically set in the initialization file <xhtml:span class="inline_block">.bash_profile</xhtml:span>, but may also be set in <xhtml:span class="inline_block">.profile</xhtml:span> or <xhtml:span class="inline_block">.bashrc</xhtml:span>. To set the umask, add the following to the appropriate profile file:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>postgres<br/>$ cd ~<br/>$ ls -ld .{bash_profile,profile,bashrc}<br/>ls: cannot access .profile: No such file or directory<br/>ls: cannot access .bashrc: No such file or directory<br/>-rwx------. 1 postgres postgres 267 Aug 14 12:59 .bash_profile<br/>$ echo "umask 077" &gt;&gt; .bash_profile<br/>$ source .bash_profile<br/>$ umask<br/>0077
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2_Ensure_the_PostgreSQL_pg_wheel_group_membership_is_correct" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure the PostgreSQL pg_wheel group membership is correct</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The group <xhtml:span class="inline_block">pg_wheel</xhtml:span> is explicitly created on a host where the PostgreSQL server is installed. Membership in this group enables an ordinary user account to gain 'superuser' access to a database cluster by using the <xhtml:span class="inline_block">sudo</xhtml:span> command (See 'Ensure sudo is configured correctly' later in this benchmark). Only user accounts authorized to have superuser access should be members of the <xhtml:span class="inline_block">pg_wheel</xhtml:span> group.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Users with unauthorized membership in the <xhtml:span class="inline_block">pg_wheel</xhtml:span> group can assume the privileges of the owner of the PostgreSQL RDBMS and administer the database, as well as accessing scripts, files, and other executables they should not be able to access.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://man7.org/linux/man-pages/man1/groups.1.html</xccdf:ident>
         <xccdf:ident system="URL">https://man7.org/linux/man-pages/man8/getent.1.html</xccdf:ident>
         <xccdf:ident system="URL">https://man7.org/linux/man-pages/man8/gpasswd.1.html</xccdf:ident>
         <xccdf:ident system="URL">https://man7.org/linux/man-pages/man8/useradd.8.html</xccdf:ident>
         <xccdf:ident system="URL">https://en.wikipedia.org/wiki/Wheel_%28Unix_term%29</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If the <xhtml:span class="inline_block">pg_wheel</xhtml:span> group does not exist, use the following command to create it:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ groupadd pg_wheel &amp;&amp; getent group pg_wheel<br/>pg_wheel:x:502:
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Note:</xhtml:strong> that your system's group number may not be 502. That's OK.</xhtml:p>
                  <xhtml:p>Adding the <xhtml:span class="inline_block">postgres</xhtml:span> user to the newly created group is done by issuing:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ gpasswd -a postgres pg_wheel<br/>Adding user postgres to group pg_wheel<br/>$ # verify membership<br/>$ awk -F':' '/pg_wheel/{print $4}' /etc/group<br/>postgres
</xhtml:code>
                  <xhtml:p>Removing a user account from the 'pg_wheel' group is achieved by executing the following command:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ gpasswd -d pg_wheel postgres<br/>Removing user postgres from group pg_wheel<br/>$ # verify the user was removed<br/>$ awk -F':' '/pg_wheel/{print $4}' /etc/group<br/>$
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://open-scap.org/page/SCE">
            <xccdf:check-import import-name="stdout"/>
            <xccdf:check-content-ref href="sce/find_pgwheel_group.sh"/>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3_Logging_Monitoring_And_Auditing_Centos_6">
      <xccdf:title xml:lang="en">Logging Monitoring And Auditing (Centos 6)</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section provides guidance with respect to PostgreSQL's auditing and logging behavior.</xhtml:p>
      </xccdf:description>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3.1_PostgreSQL_Logging">
         <xccdf:title xml:lang="en">PostgreSQL Logging</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This section provides guidance with respect to PostgreSQL's logging behavior <xhtml:em>as it applies to security and auditing</xhtml:em>. PostgreSQL contains significantly more logging options that are not audit and/or security related (and as such, are not covered herein).</xhtml:p>
         </xccdf:description>
         <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3.1.1_Logging_Rationale">
            <xccdf:title xml:lang="en">Logging Rationale</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Having an audit trail is an important feature of any relational database system. You want enough detail to describe when an event of interest has started and stopped, what the event is/was, the event's cause, and what the event did/is doing to the system.</xhtml:p>
               <xhtml:p>Ideally, the logged information is in a format permitting further analysis giving us new perspectives and insight.</xhtml:p>
               <xhtml:p>The PostgreSQL configuration file <xhtml:span class="inline_block">postgresql.conf</xhtml:span> is where all adjustable parameters can be set. A configuration file is created as part of the data cluster's creation i.e. <xhtml:span class="inline_block">initdb</xhtml:span>. The configuration file enumerates all tunable parameters and even though most of them are commented out it is understood that they are in fact active and at those very same documented values. The reason that they are commented out is to signify their default values. Uncommenting them will force the server to read these values instead of using the default values.</xhtml:p>
            </xccdf:description>
         </xccdf:Group>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Ensure_the_log_destinations_are_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the log destinations are set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>PostgreSQL supports several methods for logging server messages, including <xhtml:span class="inline_block">stderr</xhtml:span>, <xhtml:span class="inline_block">csvlog</xhtml:span> and <xhtml:span class="inline_block">syslog</xhtml:span>. On Windows, <xhtml:span class="inline_block">eventlog</xhtml:span> is also supported. One or more of these destinations should be set for server log output.</xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <notes:notes xml:lang="en">
                  <xhtml:p>
                     <xhtml:span class="inline_block">logging_collector</xhtml:span> (detailed in the next section) must be enabled to generate CSV-format log output.</xhtml:p>
               </notes:notes>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If <xhtml:span class="inline_block">log_destination</xhtml:span> is not set, then any log messages generated by the core PostgreSQL processes will be lost.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statements to remediate this setting (in this example, setting the log destination to <xhtml:span class="inline_block">csvlog</xhtml:span>):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_destination = 'csvlog';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> If more than one log destination is to be used, set this parameter to a list of desired log destinations separated by commas (e.g. 'csvlog, stderr').</xhtml:p>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822300" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.2.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822300"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Ensure_the_logging_collector_is_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the logging collector is enabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The logging collector is a background process that captures log messages sent to <xhtml:span class="inline_block">stderr</xhtml:span> and redirects them into log files. The <xhtml:span class="inline_block">logging_collector</xhtml:span> setting must be enabled in order for this process to run. It can only be set at server start.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>The logging collector approach is often more useful than logging to <xhtml:span class="inline_block">syslog</xhtml:span>, since some types of messages might not appear in <xhtml:span class="inline_block">syslog</xhtml:span> output. One common example is dynamic-linker failure message; another may be error messages produced by scripts such as <xhtml:span class="inline_block">archive_command</xhtml:span>.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting <xhtml:em>must</xhtml:em> be enabled when <xhtml:span class="inline_block">log_destination</xhtml:span> is either 'stderr' or 'csvlog' and for certain other logging parameters to take effect.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set logging_collector = 'on';<br/>ALTER SYSTEM
</xhtml:code>
                     <xhtml:p>Unfortunately, this setting can only be changed at server (re)start. As root, restart the PostgreSQL service for this change to take effect:</xhtml:p>
                     <xhtml:code class="code_block">$ service postgresql-9.6 restart<br/>Stopping postgresql-9.6 service:                           [  OK  ]<br/>Starting postgresql-9.6 service:                           [  OK  ]
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822400" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.3.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822400"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Ensure_the_log_file_destination_directory_is_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the log file destination directory is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_directory</xhtml:span> setting specifies the destination directory for log files when <xhtml:span class="inline_block">log_destination</xhtml:span> is <xhtml:span class="inline_block">stderr</xhtml:span> or <xhtml:span class="inline_block">csvlog</xhtml:span>. It can be specified as relative to the cluster data directory (<xhtml:span class="inline_block">$PGDATA</xhtml:span>) or as an absolute path. <xhtml:span class="inline_block">log_directory</xhtml:span> should be set according to your organization's logging policy.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If <xhtml:span class="inline_block">log_directory</xhtml:span> is not set, it is interpreted as the absolute path <xhtml:span class="inline_block">'/'</xhtml:span> and PostgreSQL will attempt to write its logs there (and typically fail due to a lack of permissions to that directory). This parameter should be set to direct the logs into the appropriate directory location as defined by your organization's logging policy.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_directory='logs';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)<br/>postgres=# show log_directory;<br/> log_directory<br/>---------------<br/> logs<br/>(1 row)
</xhtml:code>
                     <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> The use of <xhtml:span class="inline_block">logs</xhtml:span>, above, is an example. This should be set to an appropriate path as defined by your organization's logging requirements.</xhtml:p>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822500" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.4.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822500"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Ensure_the_filename_pattern_for_log_files_is_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the filename pattern for log files is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_filename</xhtml:span> setting specifies the filename pattern for log files. The value for <xhtml:span class="inline_block">log_filename</xhtml:span> should match your organization's logging policy.</xhtml:p>
               <xhtml:p>The value is treated as a <xhtml:span class="inline_block">strftime</xhtml:span> pattern, so <xhtml:span class="inline_block">%-escapes</xhtml:span> can be used to specify time-varying filenames. The supported <xhtml:span class="inline_block">%-escapes</xhtml:span> are similar to those listed in the Open Group's <xhtml:span class="inline_block">strftime</xhtml:span> specification. If you specify a filename without escapes, you should plan to use a log rotation utility to avoid eventually filling the partition that contains <xhtml:span class="inline_block">log_directory</xhtml:span>. If there are any time-zone-dependent <xhtml:span class="inline_block">%-escapes</xhtml:span>, the computation is done in the zone specified by <xhtml:span class="inline_block">log_timezone</xhtml:span>. Also, the system's <xhtml:span class="inline_block">strftime</xhtml:span> is not used directly, so platform-specific (nonstandard) extensions do not work.</xhtml:p>
               <xhtml:p>If CSV-format output is enabled in <xhtml:span class="inline_block">log_destination</xhtml:span>, <xhtml:span class="inline_block">.csv</xhtml:span> will be appended to the log filename. (If <xhtml:span class="inline_block">log_filename</xhtml:span> ends in <xhtml:span class="inline_block">.log</xhtml:span>, the suffix is replaced instead.)</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If <xhtml:span class="inline_block">log_filename</xhtml:span> is not set, then the value of <xhtml:span class="inline_block">log_directory</xhtml:span> is appended to an empty string and PostgreSQL will fail to start as it will try to write to a directory instead of a file.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://man7.org/linux/man-pages/man3/strftime.3.html</xccdf:ident>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_filename='postgresql-%Y%m%d.log';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)<br/>postgres=# show log_filename;<br/>   log_filename<br/>-------------------<br/> postgresql-%Y%m%d.log<br/>(1 row)
</xhtml:code>
                     <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> In this example, a new logfile will be created for each day (e.g. postgresql-20180901.log)</xhtml:p>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822600" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.5.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822600"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Ensure_the_log_file_permissions_are_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the log file permissions are set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_file_mode</xhtml:span> setting determines the file permissions for log files when <xhtml:span class="inline_block">logging_collector</xhtml:span> is enabled. The parameter value is expected to be a numeric mode specification in the form accepted by the <xhtml:span class="inline_block">chmod</xhtml:span> and <xhtml:span class="inline_block">umask</xhtml:span> system calls. (To use the customary octal format, the number must start with a <xhtml:span class="inline_block">0</xhtml:span> (zero).)</xhtml:p>
               <xhtml:p>The permissions should be set to allow only the necessary access to authorized personnel. In most cases the best setting is <xhtml:span class="inline_block">0600</xhtml:span>, so that only the server owner can read or write the log files. The other commonly useful setting is <xhtml:span class="inline_block">0640</xhtml:span>, allowing members of the owner's group to read the files, although to make use of that, you will need to alter the <xhtml:span class="inline_block">log_directory</xhtml:span> setting to store the log files outside the cluster data directory.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Log files often contain sensitive data. Allowing unnecessary access to log files may inadvertently expose sensitive data to unauthorized personnel.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting (with the example assuming a desired value of <xhtml:span class="inline_block">0600</xhtml:span>):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_file_mode = '0600';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)<br/>postgres=# show log_file_mode;<br/> log_file_mode<br/>---------------<br/> 0600<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822700" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.6.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822700"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Ensure_log_truncate_on_rotation_is_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'log_truncate_on_rotation' is enabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Enabling the <xhtml:span class="inline_block">log_truncate_on_rotation</xhtml:span> setting when <xhtml:span class="inline_block">logging_collector</xhtml:span> is enabled causes PostgreSQL to truncate (overwrite) existing log files with the same name during log rotation instead of appending to them. For example, using this setting in combination with a <xhtml:span class="inline_block">log_filename</xhtml:span> setting value like <xhtml:span class="inline_block">postgresql-%H.log</xhtml:span> would result in generating 24 hourly log files and then cyclically overwriting them:</xhtml:p>
               <xhtml:code class="code_block">postgresql-00.log<br/>postgresql-01.log<br/>[...]<br/>postgresql-23.log
</xhtml:code>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> Truncation will occur <xhtml:strong>
                     <xhtml:em>only</xhtml:em>
                  </xhtml:strong> when a new file is being opened due to time-based rotation, not during server startup or size-based rotation (see later in this benchmark for size-based rotation details).</xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <notes:notes xml:lang="en">
                  <xhtml:p>Be sure to consider your organization's logging retention policies and the use of any external log consumption tools before deciding if truncation should be enabled or disabled.</xhtml:p>
               </notes:notes>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If this setting is disabled, pre-existing log files will be appended to if <xhtml:span class="inline_block">log_filename</xhtml:span> is configured in such a way that static names are generated.</xhtml:p>
               <xhtml:p>Enabling or disabling the truncation should only be decided when <xhtml:strong>also</xhtml:strong> considering the value of <xhtml:span class="inline_block">log_filename</xhtml:span> and <xhtml:span class="inline_block">log_rotation_age</xhtml:span>/<xhtml:span class="inline_block">log_rotation_size</xhtml:span>. Some examples to illustrate the interaction between these settings:</xhtml:p>
               <xhtml:code class="code_block"># truncation is moot, as each rotation gets a unique filename (postgresql-20180605.log)<br/>log_truncate_on_rotation = on<br/>log_filename = 'postgresql-%Y%m%d.log'<br/>log_rotation_age = '1d'<br/>log_rotation_size = 0
</xhtml:code>
               <xhtml:code class="code_block"># truncation every hour, losing log data every hour until the date changes<br/>log_truncate_on_rotation = on<br/>log_filename = 'postgresql-%Y%m%d.log'<br/>log_rotation_age = '1h'<br/>log_rotation_size = 0
</xhtml:code>
               <xhtml:code class="code_block"># no truncation if the date changed while generating 100M of log data, truncation otherwise<br/>log_truncate_on_rotation = on<br/>log_filename = 'postgresql-%Y%m%d.log'<br/>log_rotation_age = '0'<br/>log_rotation_size = '100M'
</xhtml:code>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_truncate_on_rotation = 'off';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)<br/>postgres=# show log_truncate_on_rotation;<br/> log_truncate_on_rotation<br/>--------------------------<br/> off<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822800" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.7.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822800"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Ensure_the_maximum_log_file_lifetime_is_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the maximum log file lifetime is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>When <xhtml:span class="inline_block">logging_collector</xhtml:span> is enabled, the <xhtml:span class="inline_block">log_rotation_age</xhtml:span> parameter determines the maximum lifetime of an individual log file (depending on the value of <xhtml:span class="inline_block">log_filename</xhtml:span>). After this many minutes have elapsed, a new log file will be created via automatic log file rotation. Current best practices advise log rotation <xhtml:em>at least</xhtml:em> daily, but your organization's logging policy should dictate your rotation schedule.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Log rotation is a standard best practice for log management.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting (in this example, setting it to one hour):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_rotation_age='1h';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822900" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.8.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822900"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Ensure_the_maximum_log_file_size_is_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the maximum log file size is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_rotation_size</xhtml:span> setting determines the maximum size of an individual log file. Once the maximum size is reached, automatic log file rotation will occur.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If this is set to zero, size-triggered creation of new log files is disabled. This will prevent automatic log file rotation when files become too large, which could put log data at increased risk of loss (unless age-based rotation is configured).</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting (in this example, setting it to 1GB):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_rotation_size = '1GB';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823000" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.9.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823000"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Ensure_the_correct_syslog_facility_is_selected" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the correct syslog facility is selected</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">syslog_facility</xhtml:span> setting specifies the syslog "facility" to be used when logging to <xhtml:span class="inline_block">syslog</xhtml:span> is enabled. You can choose from any of the 'local' facilities:</xhtml:p>
               <xhtml:ul>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL0</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL1</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL2</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL3</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL4</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL5</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL6</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOCAL7</xhtml:span>
                  </xhtml:li>
               </xhtml:ul>
               <xhtml:p>Your organization's logging policy should dictate which facility to use based on the <xhtml:span class="inline_block">syslog</xhtml:span> daemon in use.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If not set to the appropriate facility, the PostgreSQL log messages may be intermingled with other applications' log messages, incorrectly routed, or potentially dropped (depending on your <xhtml:span class="inline_block">syslog</xhtml:span> configuration).</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://tools.ietf.org/html/rfc3164#section-4.1.1</xccdf:ident>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting (in this example, setting it to the <xhtml:span class="inline_block">LOCAL1</xhtml:span> facility):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set syslog_facility = 'LOCAL1';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823100" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.10.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823100"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ensure_the_program_name_for_PostgreSQL_syslog_messages_is_correct" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the program name for PostgreSQL syslog messages is correct</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">syslog_ident</xhtml:span> setting specifies the program name used to identify PostgreSQL messages in syslog logs. An example of a possible program name is "postgres".</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If this is not set correctly, it may be difficult or impossible to distinguish PostgreSQL messages from other messages in syslog logs.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://tools.ietf.org/html/rfc3164#section-4.1.3</xccdf:ident>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting (in this example, assuming a program name of "pg96"):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set syslog_ident = 'pg96';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)<br/>postgres=# show syslog_ident;<br/> syslog_ident<br/>--------------<br/> pg96<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823200" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.11.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823200"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Ensure_the_correct_messages_are_written_to_the_server_log" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure the correct messages are written to the server log</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_min_messages</xhtml:span> setting specifies the message levels that are written to the server log. Each level includes all the levels that follow it. The later the level, the fewer messages are sent.</xhtml:p>
               <xhtml:p>Valid values are:</xhtml:p>
               <xhtml:ul>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG5</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG4</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG3</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG2</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG1</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">INFO</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">NOTICE</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">WARNING</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">ERROR</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOG</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">FATAL</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">PANIC</xhtml:span>
                  </xhtml:li>
               </xhtml:ul>
               <xhtml:p>
                  <xhtml:span class="inline_block">WARNING</xhtml:span> is considered the best practice unless indicated otherwise by your organization's logging policy.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If this is not set to the correct value, too many messages or too few messages may be written to the server log.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) as superuser to remediate this setting (in this example, to set it to <xhtml:span class="inline_block">warning</xhtml:span>):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_min_messages = 'warning';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823300" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.12.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823300"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Ensure_the_correct_SQL_statements_generating_errors_are_recorded" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure the correct SQL statements generating errors are recorded</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_min_error_statement</xhtml:span> setting causes all SQL statements generating errors at or above the specified severity level to be recorded in the server log. Each level includes all the levels that follow it. The later the level, the fewer messages are recorded. Valid values are:</xhtml:p>
               <xhtml:ul>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG5</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG4</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG3</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG2</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEBUG1</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">INFO</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">NOTICE</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">WARNING</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">ERROR</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">LOG</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">FATAL</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">PANIC</xhtml:span>
                  </xhtml:li>
               </xhtml:ul>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> To effectively turn off logging of failing statements, set this parameter to <xhtml:span class="inline_block">PANIC</xhtml:span>.</xhtml:p>
               <xhtml:p>
                  <xhtml:span class="inline_block">ERROR</xhtml:span> is considered the best practice setting. Changes should only be made in accordance with your organization's logging policy.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If this is not set to the correct value, too many erring SQL statements or too few erring SQL statements may be written to the server log.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) as superuser to remediate this setting (in the example, to <xhtml:span class="inline_block">error</xhtml:span>):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_min_error_statement = 'error';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823400" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.13.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823400"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Ensure_debug_print_parse_is_disabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'debug_print_parse' is disabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">debug_print_parse</xhtml:span> setting enables printing the resulting parse tree for each executed query. These messages are emitted at the <xhtml:span class="inline_block">LOG</xhtml:span> message level. Unless directed otherwise by your organization's logging policy, it is recommended this setting be disabled by setting it to <xhtml:span class="inline_block">off</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Enabling any of the <xhtml:span class="inline_block">DEBUG</xhtml:span> printing variables may cause the logging of sensitive information that would otherwise be omitted based on the configuration of the other logging settings.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/9.6/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set debug_print_parse='off';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823500" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.14.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823500"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Ensure_debug_print_rewritten_is_disabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'debug_print_rewritten' is disabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">debug_print_rewritten</xhtml:span> setting enables printing the query rewriter output for each executed query. These messages are emitted at the <xhtml:span class="inline_block">LOG</xhtml:span> message level. Unless directed otherwise by your organization's logging policy, it is recommended this setting be disabled by setting it to <xhtml:span class="inline_block">off</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Enabling any of the <xhtml:span class="inline_block">DEBUG</xhtml:span> printing variables may cause the logging of sensitive information that would otherwise be omitted based on the configuration of the other logging settings.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to disable this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set debug_print_rewritten = 'off';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823600" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.15.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823600"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Ensure_debug_print_plan_is_disabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'debug_print_plan' is disabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">debug_print_plan</xhtml:span> setting enables printing the execution plan for each executed query. These messages are emitted at the <xhtml:span class="inline_block">LOG</xhtml:span> message level. Unless directed otherwise by your organization's logging policy, it is recommended this setting be disabled by setting it to <xhtml:span class="inline_block">off</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Enabling any of the <xhtml:span class="inline_block">DEBUG</xhtml:span> printing variables may cause the logging of sensitive information that would otherwise be omitted based on the configuration of the other logging settings.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to disable this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set debug_print_plan = 'off';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823700" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.16.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823700"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Ensure_debug_pretty_print_is_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'debug_pretty_print' is enabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Enabling <xhtml:span class="inline_block">debug_pretty_print</xhtml:span> indents the messages produced by <xhtml:span class="inline_block">debug_print_parse</xhtml:span>, <xhtml:span class="inline_block">debug_print_rewritten</xhtml:span>, or <xhtml:span class="inline_block">debug_print_plan</xhtml:span> making them significantly easier to read.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If this setting is disabled, the "compact" format is used instead, significantly reducing readability of the <xhtml:span class="inline_block">DEBUG</xhtml:span> statement log messages.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to enable this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set debug_pretty_print = 'on';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Be advised that the aforementioned <xhtml:span class="inline_block">DEBUG</xhtml:span> printing options are <xhtml:strong>disabled</xhtml:strong>, but if your organizational logging policy requires them to be <xhtml:span class="inline_block">on</xhtml:span> then this option comes into play.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823800" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.17.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823800"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Ensure_log_connections_is_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'log_connections' is enabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Enabling the <xhtml:span class="inline_block">log_connections</xhtml:span> setting causes each attempted connection to the server to be logged, as well as successful completion of client authentication. This parameter cannot be changed after session start.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>PostgreSQL does not maintain an internal record of attempted connections to the database for later auditing. It is only by enabling the logging of these attempts that one can determine if unexpected attempts are being made.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to enable this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_connections = 'on';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7823900" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.18.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7823900"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.19_Ensure_log_disconnections_is_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'log_disconnections' is enabled</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Enabling the <xhtml:span class="inline_block">log_disconnections</xhtml:span> setting logs the end of each session, including session duration. This parameter cannot be changed after session start.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>PostgreSQL does not maintain the beginning or ending of a connection internally for later review. It is only by enabling the logging of these that one can examine connections for failed attempts, 'over long' duration, or other anomalies.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to enable this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_disconnections = 'on';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824000" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.19.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824000"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.20_Ensure_log_error_verbosity_is_set_correctly" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure 'log_error_verbosity' is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_error_verbosity</xhtml:span> setting specifies the verbosity (amount of detail) of logged messages. Valid values are:</xhtml:p>
               <xhtml:ul>
                  <xhtml:li>
                     <xhtml:span class="inline_block">TERSE</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DEFAULT</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">VERBOSE</xhtml:span>
                  </xhtml:li>
               </xhtml:ul>
               <xhtml:p>with each containing the fields of the level above it as well as additional fields.</xhtml:p>
               <xhtml:p>
                  <xhtml:span class="inline_block">TERSE</xhtml:span> excludes the logging of <xhtml:span class="inline_block">DETAIL</xhtml:span>, <xhtml:span class="inline_block">HINT</xhtml:span>, <xhtml:span class="inline_block">QUERY</xhtml:span>, and <xhtml:span class="inline_block">CONTEXT</xhtml:span> error information.</xhtml:p>
               <xhtml:p>
                  <xhtml:span class="inline_block">VERBOSE</xhtml:span> output includes the <xhtml:span class="inline_block">SQLSTATE</xhtml:span> error code and the source code file name, function name, and line number that generated the error.</xhtml:p>
               <xhtml:p>The appropriate value should be set based on your organization's logging policy.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If this is not set to the correct value, too many details or too few details may be logged.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) as superuser to remediate this setting (in this example, to <xhtml:span class="inline_block">verbose</xhtml:span>):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_error_verbosity = 'verbose';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824100" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.20.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824100"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.21_Ensure_log_hostname_is_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'log_hostname' is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Enabling the <xhtml:span class="inline_block">log_hostname</xhtml:span> setting causes the hostname of the connecting host to be logged <xhtml:strong>in addition</xhtml:strong> to the host's IP address for connection log messages. Disabling the setting causes only the connecting host's IP address to be logged, and not the hostname. Unless your organization's logging policy requires hostname logging, it is best to disable this setting so as not to incur the overhead of DNS resolution for each statement that is logged.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Depending on your hostname resolution setup, enabling this setting might impose a non-negligible performance penalty. Additionally, the IP addresses that are logged can be resolved to their DNS names when reviewing the logs (unless dynamic host names are being used as part of your DHCP setup).</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting (in this example, to <xhtml:span class="inline_block">off</xhtml:span>):</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_hostname='off';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824200" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.21.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824200"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.22_Ensure_log_line_prefix_is_set_correctly" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure 'log_line_prefix' is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_line_prefix</xhtml:span> setting specifies a <xhtml:span class="inline_block">printf</xhtml:span>-style string that is prefixed to each log line. If blank, no prefix is used. You should configure this as recommended by the <xhtml:a href="https://pgbadger.darold.net/">pgBadger</xhtml:a> development team unless directed otherwise by your organization's logging policy. The default value is <xhtml:span class="inline_block">&lt; %m &gt;</xhtml:span>.</xhtml:p>
               <xhtml:p>
                  <xhtml:span class="inline_block">%</xhtml:span> characters begin "escape sequences" that are replaced with status information as outlined below. Unrecognized escapes are ignored. Other characters are copied straight to the log line. Some escapes are only recognized by session processes and will be treated as empty by background processes such as the main server process. Status information may be aligned either left or right by specifying a numeric literal after the <xhtml:span class="inline_block">%</xhtml:span> and before the option. A negative value will cause the status information to be padded on the right with spaces to give it a minimum width, whereas a positive value will pad on the left. Padding can be useful to aid human readability in log files.</xhtml:p>
               <xhtml:p>The default is <xhtml:span class="inline_block">&lt; %m &gt;</xhtml:span>, but any of the following escape sequences can be used:</xhtml:p>
               <xhtml:code class="code_block">Escape  Effect                                            Session only<br/>%a      Application name                                  yes<br/>%u      User name                                         yes<br/>%d      Database name                                     yes<br/>%r      Remote host name or IP address, and remote port   yes<br/>%h      Remote host name or IP address                    yes<br/>%p      Process ID                                        no<br/>%t      Time stamp without milliseconds                   no<br/>%m      Time stamp with milliseconds                      no<br/>%i      Command tag: type of session's current command    yes<br/>%e      SQLSTATE error code                               no<br/>%c      Session ID: see below                             no<br/>%l      Number of the log line for each session <br/>        or process, starting at 1                         no<br/>%s      Process start time stamp                          no<br/>%v      Virtual transaction ID (backendID/localXID)       no<br/>%x      Transaction ID (0 if none is assigned)            no<br/>%q      Produces no output, but tells non-session <br/>        processes to stop at this point in the string;<br/>        ignored by session processes                      no<br/>%%      Literal %
</xhtml:code>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Properly setting <xhtml:span class="inline_block">log_line_prefix</xhtml:span> allows for adding additional information to each log entry (such as the user, or the database). Said information may then be of use in auditing or security reviews.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://pgbadger.darold.net/</xccdf:ident>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_line_prefix = '%m [%p]: [%l-1] db=%d,user=%u,app=%a,client=%h ';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824300" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.22.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824300"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.23_Ensure_log_statement_is_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'log_statement' is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_statement</xhtml:span> setting specifies the types of SQL statements that are logged. Valid values are:</xhtml:p>
               <xhtml:ul>
                  <xhtml:li>
                     <xhtml:span class="inline_block">none</xhtml:span> (off)</xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">ddl</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">mod</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">all</xhtml:span> (all statements)</xhtml:li>
               </xhtml:ul>
               <xhtml:p>It is recommended this be set to <xhtml:span class="inline_block">ddl</xhtml:span> unless otherwise directed by your organization's logging policy.</xhtml:p>
               <xhtml:p>
                  <xhtml:span class="inline_block">ddl</xhtml:span> logs all data definition statements:</xhtml:p>
               <xhtml:ul>
                  <xhtml:li>
                     <xhtml:span class="inline_block">CREATE</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">ALTER</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DROP</xhtml:span>
                  </xhtml:li>
               </xhtml:ul>
               <xhtml:p>
                  <xhtml:span class="inline_block">mod</xhtml:span> logs all <xhtml:span class="inline_block">ddl</xhtml:span> statements, plus data-modifying statements:</xhtml:p>
               <xhtml:ul>
                  <xhtml:li>
                     <xhtml:span class="inline_block">INSERT</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">UPDATE</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">DELETE</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">TRUNCATE</xhtml:span>
                  </xhtml:li>
                  <xhtml:li>
                     <xhtml:span class="inline_block">COPY FROM</xhtml:span>
                  </xhtml:li>
               </xhtml:ul>
               <xhtml:p>(<xhtml:span class="inline_block">PREPARE</xhtml:span>, <xhtml:span class="inline_block">EXECUTE</xhtml:span>, and <xhtml:span class="inline_block">EXPLAIN ANALYZE</xhtml:span> statements are also logged if their contained command is of an appropriate type.)</xhtml:p>
               <xhtml:p>For clients using extended query protocol, logging occurs when an Execute message is received, and values of the Bind parameters are included (with any embedded single-quote marks doubled).</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Setting <xhtml:span class="inline_block">log_statement</xhtml:span> to align with your organization's security and logging policies facilitates later auditing and review of database activities.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) as superuser to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_statement='ddl';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824400" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.23.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824400"/>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.24_Ensure_log_timezone_is_set_correctly" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure 'log_timezone' is set correctly</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">log_timezone</xhtml:span> setting specifies the time zone to use in timestamps within log messages. This value is cluster-wide, so that all sessions will report timestamps consistently. Unless directed otherwise by your organization's logging policy, set this to either <xhtml:span class="inline_block">GMT</xhtml:span> or <xhtml:span class="inline_block">UTC</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Log entry timestamps should be configured for an appropriate time zone as defined by your organization's logging policy to ensure a lack of confusion around when a logged event occurred.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-logging.html</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Execute the following SQL statement(s) to remediate this setting:</xhtml:p>
                     <xhtml:code class="code_block">postgres=# alter system set log_timezone = 'GMT';<br/>ALTER SYSTEM<br/>postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824500" value-id="xccdf_org.cisecurity.benchmarks_value_3.1.24.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824500"/>
            </xccdf:check>
         </xccdf:Rule>
      </xccdf:Group>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_the_PostgreSQL_Audit_Extension_pgAudit_is_enabled" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure the PostgreSQL Audit Extension (pgAudit) is enabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The PostgreSQL Audit Extension (<xhtml:a href="https://www.pgaudit.org/">pgAudit</xhtml:a>) provides detailed session and/or object audit logging via the standard PostgreSQL logging facility. The goal of pgAudit is to provide PostgreSQL users with the capability to produce audit logs often required to comply with government, financial, or ISO certifications.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <notes:notes xml:lang="en">
               <xhtml:p>pgAudit versions relate to PostgreSQL major versions; ensure you install the pgAudit package that matches your PostgreSQL version.</xhtml:p>
            </notes:notes>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Basic statement logging can be provided by the standard logging facility with <xhtml:span class="inline_block">log_statement = all</xhtml:span>. This is acceptable for monitoring and other uses but does not provide the level of detail generally required for an audit. It is not enough to have a list of all the operations performed against the database, it must also be possible to find particular statements that are of interest to an auditor. The standard logging facility shows what the user requested, while pgAudit focuses on the details of what happened while the database was satisfying the request.</xhtml:p>
            <xhtml:p>When logging <xhtml:span class="inline_block">SELECT</xhtml:span> and <xhtml:span class="inline_block">DML</xhtml:span> statements, pgAudit can be configured to log a separate entry for each relation referenced in a statement. No parsing is required to find all statements that touch a particular table. In fact, the goal is that the statement text is provided primarily for deep forensics and should not be required for an audit.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/6" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.pgaudit.org/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To install and enable pgAudit, simply install the appropriate rpm from the PGDG repo:</xhtml:p>
                  <xhtml:code class="code_block">$ yum -y install pgaudit12_10<br/>Loaded plugins: fastestmirror<br/>Setting up Install Process<br/>Loading mirror speeds from cached hostfile<br/> * base: mirror.vtti.vt.edu<br/> * extras: mirror.cogentco.com<br/> * updates: bay.uchicago.edu<br/>Resolving Dependencies<br/>--&gt; Running transaction check<br/>---&gt; Package pgaudit12_10.x86_64 0:1.2.0-1.rhel6 will be installed<br/>--&gt; Finished Dependency Resolution<br/>
                     <br/>Dependencies Resolved<br/>
                     <br/>================================================================================<br/> Package            Arch           Version                 Repository      Size<br/>================================================================================<br/>Installing:<br/> pgaudit12_10         x86_64         1.2.0-1.rhel6           pgdg10        20 k<br/>
                     <br/>Transaction Summary<br/>================================================================================<br/>Install       1 Package(s)<br/>
                     <br/>Total download size: 18 k<br/>Installed size: 41 k<br/>Downloading Packages:<br/>pgaudit12_10-1.2.0-1.rhel6.x86_64.rpm                    |  20 kB     00:00<br/>Running rpm_check_debug<br/>Running Transaction Test<br/>Transaction Test Succeeded<br/>Running Transaction<br/>  Installing : pgaudit12_10-1.2.0-1.rhel6.x86_64                              1/1<br/>  Verifying  : pgaudit12_10-1.2.0-1.rhel6.x86_64                              1/1<br/>
                     <br/>Installed:<br/>  pgaudit12_10.x86_64 0:1.2.0-1.rhel6<br/>
                     <br/>Complete!
</xhtml:code>
                  <xhtml:p>pgAudit is now installed and ready to be configured. Next, we need to alter the <xhtml:span class="inline_block">postgresql.conf</xhtml:span> configuration file to:</xhtml:p>
                  <xhtml:ul>
                     <xhtml:li>enable pgAudit as an extension in the <xhtml:span class="inline_block">shared_preload_libraries</xhtml:span> parameter</xhtml:li>
                     <xhtml:li>indicate which classes of statements we want to log via the <xhtml:span class="inline_block">pgaudit.log</xhtml:span> parameter</xhtml:li>
                  </xhtml:ul>
                  <xhtml:p>and, finally, restart the PostgreSQL service:</xhtml:p>
                  <xhtml:code class="code_block">$ vi ${PGDATA}/postgresql.conf
</xhtml:code>
                  <xhtml:p>Find the <xhtml:span class="inline_block">shared_preload_libraries</xhtml:span> entry, and add 'pgaudit' to it (preserving any existing entries):</xhtml:p>
                  <xhtml:code class="code_block">shared_preload_libraries = 'pgaudit'<br/>
                     <br/>OR<br/>
                     <br/>shared_preload_libraries = 'pgaudit,somethingelse'
</xhtml:code>
                  <xhtml:p>Now, add a new <xhtml:span class="inline_block">pgaudit</xhtml:span>-specific entry:</xhtml:p>
                  <xhtml:code class="code_block"># for this example we are logging the ddl and write operations<br/>pgaudit.log='ddl,write'
</xhtml:code>
                  <xhtml:p>Restart the PostgreSQL server for changes to take affect:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ systemctl restart postgresql-10
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Depending on settings, it is possible for pgAudit to generate an <xhtml:em>enormous volume of logging</xhtml:em>. Be careful to determine exactly what needs to be audit logged in your environment to avoid logging too much.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7822100" value-id="xccdf_org.cisecurity.benchmarks_value_3.2.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822100"/>
            </xccdf:check>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7822200"/>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_4_User_Access_and_Authorization">
      <xccdf:title xml:lang="en">User Access and Authorization</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The capability to use database resources at a given level, or user authorization rules, allows for user manipulation of the various parts of the PostgreSQL database. These authorizations must be structured to block unauthorized use and/or corruption of vital data and services by setting restrictions on user capabilities.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.1_Ensure_sudo_is_configured_correctly" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure sudo is configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>It is common to have more than one authorized individual administering the PostgreSQL service at the Operating System level. It is also quite common to permit login privileges to individuals on a PostgreSQL host who otherwise are not authorized to access the server's data cluster and files. Administering the PostgreSQL data cluster, as opposed to its data, is to be accomplished via a localhost login of a regular UNIX user account. Access to the <xhtml:span class="inline_block">postgres</xhtml:span> superuser account is restricted in such a manner as to interdict unauthorized access. <xhtml:span class="inline_block">sudo</xhtml:span> satisfies the requirements by escalating ordinary user account privileges as the PostgreSQL RDBMS superuser.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Without <xhtml:span class="inline_block">sudo</xhtml:span>, there would not be capabilities to strictly control access to the superuser account and to securely and authoritatively audit its use.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/8" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.sudo.ws/man/1.8.15/sudo.man.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.sudo.ws/man/1.8.17/visudo.man.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>As superuser <xhtml:span class="inline_block">root</xhtml:span>, execute the command <xhtml:span class="inline_block">visudo</xhtml:span> to edit the <xhtml:span class="inline_block">/etc/sudoers</xhtml:span> file so the following line is present:</xhtml:p>
                  <xhtml:code class="code_block">%pg_wheel ALL= /bin/su - postgres
</xhtml:code>
                  <xhtml:p>This grants any Operating System user that is a member of the <xhtml:span class="inline_block">pg_wheel</xhtml:span> group to use <xhtml:span class="inline_block">sudo</xhtml:span> to become the <xhtml:span class="inline_block">postgres</xhtml:span> user.</xhtml:p>
                  <xhtml:p>Ensure that all Operating System user's that need such access are members of the group as detailed earlier in this benchmark.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_excessive_administrative_privileges_are_revoked" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure excessive administrative privileges are revoked</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>With respect to PostgreSQL administrative SQL commands, only superusers should have elevated privileges. PostgreSQL regular, or application, users should not possess the ability to create roles, create new databases, manage replication, or perform any other action deemed privileged . Typically, regular users should only be granted the minimal set of privileges commensurate with managing the application:</xhtml:p>
            <xhtml:ul>
               <xhtml:li>DDL (create table, create view, create index, etc.)</xhtml:li>
               <xhtml:li>DML (select, insert, update, delete)</xhtml:li>
            </xhtml:ul>
            <xhtml:p>Further, it has become best practice to create separate roles for DDL and DML. Given an application called 'payroll', one would create the following users:</xhtml:p>
            <xhtml:ul>
               <xhtml:li>payroll_owner</xhtml:li>
               <xhtml:li>payroll_user</xhtml:li>
            </xhtml:ul>
            <xhtml:p>Any DDL privileges would be granted to the 'payroll_owner' account only, while DML privileges would be given to the 'payroll_user' account only. This prevents accidental creation/altering/dropping of database objects by application code that run as the 'payroll_user' account.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By not restricting global administrative commands to superusers only, regular users granted excessive privileges may execute administrative commands with unintended and undesirable results.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-revoke.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-createrole.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-alterrole.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If any regular or application users have been granted excessive administrative rights, those privileges should be removed immediately via the PostgreSQL <xhtml:span class="inline_block">ALTER ROLE</xhtml:span> SQL command. Using the same example above, the following SQL statements revoke all unnecessary elevated administrative privileges from the regular user <xhtml:span class="inline_block">appuser</xhtml:span>:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>postgres<br/>$ psql -c "ALTER ROLE appuser NOSUPERUSER;"<br/>ALTER ROLE<br/>$ psql -c "ALTER ROLE appuser NOCREATEROLE;"<br/>ALTER ROLE<br/>$ psql -c "ALTER ROLE appuser NOCREATEDB;"<br/>ALTER ROLE<br/>$ psql -c "ALTER ROLE appuser NOREPLICATION;"<br/>ALTER ROLE<br/>$ psql -c "ALTER ROLE appuser NOBYPASSRLS;"<br/>ALTER ROLE<br/>$ psql -c "ALTER ROLE appuser NOINHERIT;"<br/>ALTER ROLE
</xhtml:code>
                  <xhtml:p>Verify the appuser now passes your check by having no defined Attributes:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>postgres<br/>$ psql -c "\du appuser"<br/>          List of roles<br/>Role name | Attributes | Member of<br/>----------+------------+-----------<br/>appuser   |            | {}
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.3_Ensure_excessive_function_privileges_are_revoked" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure excessive function privileges are revoked</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>In certain situations, to provide required functionality, PostgreSQL needs to execute internal logic (stored procedures, functions, triggers, etc.) and/or external code modules with elevated privileges. However, if the privileges required for execution are at a higher level than the privileges assigned to organizational users invoking the functionality applications/programs, those users are indirectly provided with greater privileges than assigned by their organization. This is known as privilege elevation. Privilege elevation must be utilized only where necessary. Execute privileges for application functions should be restricted to authorized users only.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Ideally, all application source code should be vetted to validate interactions between the application and the logic in the database, but this is usually not possible or feasible with available resources even if the source code is available. The DBA should attempt to obtain assurances from the development organization that this issue has been addressed and should document what has been discovered. The DBA should also inspect all application logic stored in the database (in the form of functions, rules, and triggers) for excessive privileges.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/catalog-pg-proc.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-grant.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-revoke.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-createfunction.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Where possible, revoke <xhtml:span class="inline_block">SECURITY DEFINER</xhtml:span> on PostgreSQL functions. To change a <xhtml:span class="inline_block">SECURITY DEFINER</xhtml:span> function to <xhtml:span class="inline_block">SECURITY INVOKER</xhtml:span>, run the following SQL:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ sudo su - postgres<br/>$ psql -c "ALTER FUNCTION [functionname] SECURITY INVOKER;"
</xhtml:code>
                  <xhtml:p>If it is not possible to revoke <xhtml:span class="inline_block">SECURITY DEFINER</xhtml:span>, ensure the function can be executed by only the accounts that absolutely need such functionality:</xhtml:p>
                  <xhtml:code class="code_block">REVOKE EXECUTE ON FUNCTION delete_customer(integer,boolean) FROM appreader;<br/>REVOKE
</xhtml:code>
                  <xhtml:p>Confirm that the <xhtml:span class="inline_block">appreader</xhtml:span> user may no longer execute the function:</xhtml:p>
                  <xhtml:code class="code_block">SELECT proname, proacl FROM pg_proc WHERE proname = 'delete_customer';<br/>     proname     |                         proacl<br/>-----------------+--------------------------------------------------------<br/> delete_customer | {=X/postgres,postgres=X/postgres,appwriter=X/postgres}<br/>(1 row)
</xhtml:code>
                  <xhtml:p>Based on output above, <xhtml:span class="inline_block">appreader=X/postgres</xhtml:span> no longer exists in the <xhtml:span class="inline_block">proacl</xhtml:span> column results returned from query and confirms <xhtml:span class="inline_block">appreader</xhtml:span> is no longer granted execute privilege on the function.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_excessive_DML_privileges_are_revoked" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure excessive DML privileges are revoked</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>DML (insert, update, delete) operations at the table level should be restricted to only authorized users. PostgreSQL manages table level DML permissions via the GRANT statement.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Excessive DML grants can lead to unprivileged users changing or deleting information without proper authorization.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-grant.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-revoke.html</xccdf:ident>
         <xccdf:ident system="http://cce.mitre.org">https://www.postgresql.org/docs/10/static/functions-info.html#functions-info-access-table</xccdf:ident>
         <xccdf:ident system="URL">https://wiki.postgresql.org/wiki/A_Guide_to_CVE-2018-1058:_Protect_Your_Search_Path</xccdf:ident>
         <xccdf:ident system="URL">https://nvd.nist.gov/vuln/detail/CVE-2018-1058</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If a given database user has been granted excessive DML privileges for a given database table, those privileges should be revoked immediately using the <xhtml:span class="inline_block">REVOKE</xhtml:span> SQL command.</xhtml:p>
                  <xhtml:p>Continuing with the example above, remove unauthorized grants for <xhtml:span class="inline_block">appreader</xhtml:span> user using the <xhtml:span class="inline_block">REVOKE</xhtml:span> statement and verify the Boolean values are now false.</xhtml:p>
                  <xhtml:code class="code_block">postgres=# REVOKE INSERT, UPDATE, DELETE ON TABLE customer FROM appreader;<br/>REVOKE<br/>
                     <br/>postgres=# select t.tablename, u.usename,<br/>       has_table_privilege(u.usename, t.tablename, 'select') as select,<br/>       has_table_privilege(u.usename, t.tablename, 'insert') as insert,<br/>       has_table_privilege(u.usename, t.tablename, 'update') as update,<br/>       has_table_privilege(u.usename, t.tablename, 'delete') as delete<br/>from   pg_tables t, pg_user u<br/>where  t.tablename = 'customer' <br/>and    u.usename in ('appwriter','appreader');<br/>
                     <br/>tablename |  usename  | select | insert | update | delete<br/>----------+-----------+--------+--------+--------+--------<br/>customer  | appwriter | t      | t      | t      | t<br/>customer  | appreader | t      | f      | f      | f<br/>(2 rows)
</xhtml:code>
                  <xhtml:p>With the publication of <xhtml:a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1058">CVE-2018-1058</xhtml:a>, it is also recommended that all privileges be revoked from the <xhtml:span class="inline_block">public</xhtml:span> schema for all users on all databases:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# REVOKE CREATE ON SCHEMA public FROM PUBLIC;<br/>REVOKE
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.5_Use_pg_permission_extension_to_audit_object_permissions" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Use pg_permission extension to audit object permissions</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Using a PostgreSQL extension called <xhtml:span class="inline_block">pg_permissions</xhtml:span> it is possible to declare which DB users should have which permissions on a given object and generate a report showing compliance/deviation.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Auditing permissions in a PostgreSQL database can be intimidating given the default manner in which permissions are presented. The <xhtml:span class="inline_block">pg_permissions</xhtml:span> extension greatly simplifies this presentation and allows the user to declare what permissions should exist and then report on differences from that ideal.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident system="URL">https://github.com/cybertec-postgresql/pg_permission</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>At this time, <xhtml:span class="inline_block">pg_permission</xhtml:span> is not packaged by the PGDG packaging team. As such, download the latest from the extension's <xhtml:a href="https://github.com/cybertec-postgresql/pg_permission/releases">site</xhtml:a>, compile it, and then install it:</xhtml:p>
                  <xhtml:code class="code_block">[root@instance-1 ~]# whoami<br/>root<br/>[root@instance-1 ~]# yum -y install postgresql10-devel<br/>[snip]<br/>Running transaction<br/>  Installing : libicu-devel-50.1.2-17.el7.x86_64                                                               1/2 <br/>  Installing : postgresql10-devel-10.7-1PGDG.rhel7.x86_64                                                      2/2 <br/>  Verifying  : postgresql10-devel-10.7-1PGDG.rhel7.x86_64                                                      1/2 <br/>  Verifying  : libicu-devel-50.1.2-17.el7.x86_64                                                               2/2 <br/>
                     <br/>Installed:<br/>  postgresql10-devel.x86_64 0:10.7-1PGDG.rhel7                                                                     <br/>
                     <br/>Dependency Installed:<br/>  libicu-devel.x86_64 0:50.1.2-17.el7 <br/>[root@instance-1 ~]# curl -L -o pg_permission_1.1.tgz https://github.com/cybertec-postgresql/pg_permission/archive/REL_1_1.tar.gz<br/>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current<br/>                                 Dload  Upload   Total   Spent    Left  Speed<br/>100   142    0   142    0     0    581      0 --:--:-- --:--:-- --:--:--   579<br/>  0     0    0  9437    0     0  24799      0 --:--:-- --:--:-- --:--:-- 24799<br/>[root@instance-1 ~]# tar xf pg_permission_1.1.tgz <br/>[root@instance-1 ~]# cd pg_permission-REL_1_1/<br/>[root@instance-1 ~]# which pg_config<br/>/usr/bin/which: no pg_config in (/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin)<br/>[root@instance-1 ~]# export PATH=/usr/pgsql-10/bin:$PATH<br/>[root@instance-1 ~]# which pg_config<br/>/usr/pgsql-10/bin/pg_config<br/>[root@instance-1 ~]# make install<br/>/usr/bin/mkdir -p '/usr/pgsql-10/share/extension'<br/>/usr/bin/mkdir -p '/usr/pgsql-10/share/extension'<br/>/usr/bin/mkdir -p '/usr/pgsql-10/doc/extension'<br/>/usr/bin/install -c -m 644 .//pg_permissions.control '/usr/pgsql-10/share/extension/'<br/>/usr/bin/install -c -m 644 .//pg_permissions--*.sql  '/usr/pgsql-10/share/extension/'<br/>/usr/bin/install -c -m 644 .//README.pg_permissions '/usr/pgsql-10/doc/extension/'<br/>[root@instance-1 ~]# su - postgres<br/>bash-4.2$ whoami<br/>postgres<br/>bash-4.2$ psql -c "create extension pg_permissions;"<br/>CREATE EXTENSION
</xhtml:code>
                  <xhtml:p>Now you need to add entries to <xhtml:span class="inline_block">permission_target</xhtml:span> that correspond to your <xhtml:em>desired permissions</xhtml:em>.</xhtml:p>
                  <xhtml:p>Let's assume we have a schema <xhtml:span class="inline_block">appschema</xhtml:span>, and <xhtml:span class="inline_block">appuser</xhtml:span> should have <xhtml:span class="inline_block">SELECT</xhtml:span>, <xhtml:span class="inline_block">UPDATE</xhtml:span>, <xhtml:span class="inline_block">DELETE</xhtml:span>, and <xhtml:span class="inline_block">INSERT</xhtml:span> permissions on all tables and views in that schema:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# INSERT INTO public.permission_target<br/>postgres=#   (id, role_name, permissions,<br/>postgres=#    object_type, schema_name)<br/>postgres=# VALUES<br/>postgres=#   (1, 'appuser', '{SELECT,INSERT,UPDATE,DELETE}',<br/>postgres=#    'TABLE', 'appschema');<br/>INSERT 0 1<br/>
                     <br/>postgres=# INSERT INTO public.permission_target<br/>postgres=#   (id, role_name, permissions,<br/>postgres=#    object_type, schema_name)<br/>postgres=# VALUES<br/>postgres=#   (2, 'appuser', '{SELECT,INSERT,UPDATE,DELETE}',<br/>postgres=#    'VIEW', 'appschema');<br/>INSERT 0 1
</xhtml:code>
                  <xhtml:p>Of course, the user will need the <xhtml:span class="inline_block">USAGE</xhtml:span> privilege on the schema:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# INSERT INTO public.permission_target<br/>postgres=#   (id, role_name, permissions,i<br/>postgres=#    object_type, schema_name)<br/>postgres=# VALUES<br/>postgres=#   (3, 'appuser', '{USAGE}',<br/>postgres=#    'SCHEMA', 'appschema');<br/>INSERT 0 1
</xhtml:code>
                  <xhtml:p>The user also needs <xhtml:span class="inline_block">USAGE</xhtml:span> privileges on the <xhtml:span class="inline_block">appseq</xhtml:span> sequence in that schema:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# INSERT INTO public.permission_target<br/>postgres=#   (id, role_name, permissions,<br/>postgres=#    object_type, schema_name, object_name)<br/>postgres=# VALUES<br/>postgres=#   (4, 'appuser', '{USAGE}',<br/>postgres=#    'SEQUENCE', 'appschema', 'appseq');<br/>INSERT 0 1
</xhtml:code>
                  <xhtml:p>Now we can review which permissions are missing and which additional permissions are granted:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# SELECT * FROM public.permission_diffs();<br/>
                     <br/> missing | role_name | object_type | schema_name | object_name | column_name | permission<br/>---------+-----------+-------------+-------------+-------------+-------------+------------<br/> f       | laurenz   | VIEW        | appschema   | appview     |             | SELECT<br/> t       | appuser   | TABLE       | appschema   | apptable    |             | DELETE<br/>(2 rows)
</xhtml:code>
                  <xhtml:p>That means that <xhtml:span class="inline_block">appuser</xhtml:span> is missing (missing is TRUE) the DELETE privilege on <xhtml:span class="inline_block">appschema.apptable</xhtml:span> which should be <xhtml:span class="inline_block">GRANT</xhtml:span>ed, while user <xhtml:span class="inline_block">laurenz</xhtml:span> has the <xhtml:strong>additional</xhtml:strong>
                     <xhtml:span class="inline_block">SELECT</xhtml:span> privilege on <xhtml:span class="inline_block">appschema.appview</xhtml:span> (missing is FALSE).</xhtml:p>
                  <xhtml:p>To review the actual permissions on an object, we can use the <xhtml:span class="inline_block">_permissions</xhtml:span> views:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# SELECT * FROM schema_permissions<br/>postgres=#   WHERE role_name = 'appuser' AND schema_name = 'appschema';<br/>
                     <br/> object_type | role_name | schema_name | object_name | column_name | permissions | granted<br/>-------------+-----------+-------------+-------------+-------------+-------------+---------<br/> SCHEMA      | appuser   | appschema   |             |             | USAGE       | t<br/> SCHEMA      | appuser   | appschema   |             |             | CREATE      | f<br/>(2 rows)
</xhtml:code>
                  <xhtml:p>For more details and examples, visit the online <xhtml:a href="https://github.com/cybertec-postgresql/pg_permission#readme">documentation</xhtml:a>.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_Row_Level_Security_RLS_is_configured_correctly" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure Row Level Security (RLS) is configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>In addition to the SQL-standard privilege system available through <xhtml:span class="inline_block">GRANT</xhtml:span>, tables can have row security policies that restrict, on a per-user basis, which individual rows can be returned by normal queries or inserted, updated, or deleted by data modification commands. This feature is also known as Row Level Security (RLS).</xhtml:p>
            <xhtml:p>By default, tables do not have any policies, so if a user has access privileges to a table according to the SQL privilege system, all rows within it are equally available for querying or updating. Row security policies can be specific to commands, to roles, or to both. A policy can be specified to apply to <xhtml:span class="inline_block">ALL</xhtml:span> commands, or to any combination of <xhtml:span class="inline_block">SELECT</xhtml:span>, <xhtml:span class="inline_block">INSERT</xhtml:span>, <xhtml:span class="inline_block">UPDATE</xhtml:span>, or <xhtml:span class="inline_block">DELETE</xhtml:span>. Multiple roles can be assigned to a given policy, and normal role membership and inheritance rules apply.</xhtml:p>
            <xhtml:p>If you use RLS and apply restrictive policies to certain users, it is important that the <xhtml:span class="inline_block">Bypass RLS</xhtml:span> privilege not be granted to any unauthorized users. This privilege overrides RLS-enabled tables and associated policies. Generally, only superusers and elevated users should possess this privilege.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If RLS policies and privileges are not configured correctly, users could perform actions on tables that they are not authorized to perform, such as inserting, updating, or deleting rows.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/ddl-rowsecurity.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/sql-alterrole.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Again, we are using the example from the PostgreSQL documentation using the example <xhtml:span class="inline_block">passwd</xhtml:span> table. We will create three database roles to illustrate the workings of RLS:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# CREATE ROLE admin;<br/>CREATE ROLE<br/>postgres=# CREATE ROLE bob;<br/>CREATE ROLE<br/>postgres=# CREATE ROLE alice;<br/>CREATE ROLE
</xhtml:code>
                  <xhtml:p>Now, we will insert known data into the <xhtml:span class="inline_block">passwd</xhtml:span> table:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# INSERT INTO passwd VALUES<br/>  ('admin','xxx',0,0,'Admin','111-222-3333',null,'/root','/bin/dash');<br/>INSERT 0 1<br/>postgres=# INSERT INTO passwd VALUES<br/>  ('bob','xxx',1,1,'Bob','123-456-7890',null,'/home/bob','/bin/zsh');<br/>INSERT 0 1<br/>postgres=# INSERT INTO passwd VALUES<br/>  ('alice','xxx',2,1,'Alice','098-765-4321',null,'/home/alice','/bin/zsh');<br/>INSERT 0 1
</xhtml:code>
                  <xhtml:p>And we will enable RLS on the table:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# ALTER TABLE passwd ENABLE ROW LEVEL SECURITY;<br/>ALTER TABLE
</xhtml:code>
                  <xhtml:p>Now that RLS is enabled, we need to define one or more policies. Create the administrator policy and allow it access to all rows:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# CREATE POLICY admin_all ON passwd TO admin USING (true) WITH CHECK (true);<br/>CREATE POLICY
</xhtml:code>
                  <xhtml:p>Create a policy for normal users to <xhtml:em>view</xhtml:em> all rows:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# CREATE POLICY all_view ON passwd FOR SELECT USING (true);<br/>CREATE POLICY
</xhtml:code>
                  <xhtml:p>Create a policy for normal users that allows them to update only their own rows and to limit what values can be set for their login shell:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# CREATE POLICY user_mod ON passwd FOR UPDATE<br/>  USING (current_user = user_name)<br/>  WITH CHECK (<br/>    current_user = user_name AND<br/>    shell IN ('/bin/bash','/bin/sh','/bin/dash','/bin/zsh','/bin/tcsh')<br/>  );<br/>CREATE POLICY
</xhtml:code>
                  <xhtml:p>Grant all the normal rights on the table to the <xhtml:span class="inline_block">admin</xhtml:span> user:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# GRANT SELECT, INSERT, UPDATE, DELETE ON passwd TO admin;<br/>GRANT
</xhtml:code>
                  <xhtml:p>Grant only select access on non-sensitive columns to everyone:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# GRANT SELECT<br/>  (user_name, uid, gid, real_name, home_phone, extra_info, home_dir, shell)<br/>  ON passwd TO public;<br/>GRANT
</xhtml:code>
                  <xhtml:p>Grant update to only the sensitive columns:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# GRANT UPDATE<br/>  (pwhash, real_name, home_phone, extra_info, shell)<br/>  ON passwd TO public;<br/>GRANT
</xhtml:code>
                  <xhtml:p>Ensure that no one has been granted <xhtml:span class="inline_block">Bypass RLS</xhtml:span> inadvertently, by running the <xhtml:span class="inline_block">psql</xhtml:span> display command <xhtml:span class="inline_block">\du+</xhtml:span>. If unauthorized users do have <xhtml:span class="inline_block">Bypass RLS</xhtml:span> granted then resolve this using the <xhtml:span class="inline_block">ALTER ROLE</xhtml:span>
                     <xhtml:em>
                        <xhtml:span class="inline_block">&lt;user&gt;</xhtml:span>
                     </xhtml:em>
                     <xhtml:span class="inline_block">NOBYPASSRLS;</xhtml:span> command.</xhtml:p>
                  <xhtml:p>You can now verify that 'admin', 'bob', and 'alice' are properly restricted by querying the <xhtml:span class="inline_block">passwd</xhtml:span> table as each of these roles.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.7_Ensure_the_set_user_extension_is_installed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure the set_user extension is installed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>PostgreSQL access to the superuser database role must be controlled and audited to prevent unauthorized access.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Even when reducing and limiting the access to the superuser role as described earlier in this benchmark, it is still difficult to determine who accessed the superuser role and what actions were taken using that role. As such, it is ideal to prevent anyone from logging in as the superuser and forcing them to escalate their role. This model is used at the OS level by the use of <xhtml:span class="inline_block">sudo</xhtml:span> and should be emulated in the database. The <xhtml:span class="inline_block">set_user</xhtml:span> extension allows for this setup.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/8" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://github.com/pgaudit/set_user</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>At the time this benchmark is being written, <xhtml:span class="inline_block">set_user</xhtml:span> is not available as a package in the PGDG repository. As such, we will build it from source:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ yum -y install postgresql10-devel<br/>Loaded plugins: fastestmirror<br/>Setting up Install Process<br/>Loading mirror speeds from cached hostfile<br/> * base: mirror.cisp.com<br/> * extras: packages.oit.ncsu.edu<br/> * updates: mirror.cisp.com<br/>Resolving Dependencies<br/>--&gt; Running transaction check<br/>---&gt; Package postgresql10-devel.x86_64 0:10.6-1PGDG.rhel6 will be installed<br/>--&gt; Finished Dependency Resolution<br/>
                     <br/>Dependencies Resolved<br/>
                     <br/>===========================================================================================================<br/> Package                        Arch               Version                        Repository          Size<br/>===========================================================================================================<br/>Installing:<br/> postgresql10-devel             x86_64             10.6-1PGDG.rhel6             pgdg10             1.7 M<br/>
                     <br/>Transaction Summary<br/>===========================================================================================================<br/>Install       1 Package(s)<br/>
                     <br/>Total download size: 1.9 M<br/>Installed size: 8.8 M<br/>Downloading Packages:<br/>postgresql10-devel-10.6-1PGDG.rhel6.x86_64.rpm                                    | 1.9 MB     00:01<br/>Running rpm_check_debug<br/>Running Transaction Test<br/>Transaction Test Succeeded<br/>Running Transaction<br/>Warning: RPMDB altered outside of yum.<br/>  Installing : postgresql10-devel-10.6-1PGDG.rhel6.x86_64                                            1/1<br/>  Verifying  : postgresql10-devel-10.6-1PGDG.rhel6.x86_64                                            1/1<br/>
                     <br/>Installed:<br/>  postgresql10-devel.x86_64 0:10.6-1PGDG.rhel6<br/>
                     <br/>Complete!<br/>$<br/>$ curl https://codeload.github.com/pgaudit/set_user/tar.gz/REL1_6_1 &gt; set_user-1.6.1.tgz<br/>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current<br/>                                 Dload  Upload   Total   Spent    Left  Speed<br/>100 14916    0 14916    0     0  57215      0 --:--:-- --:--:-- --:--:--  184k<br/>$<br/>$ tar xf set_user-1.6.1.tgz<br/>$ cd set_user-REL1_6_1<br/>$ export PATH=/usr/pgsql-10/bin:$PATH<br/>[root@centos6 set_user-REL1_6_1]# make USE_PGXS=1<br/>gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC -I. -I./ -I/usr/pgsql-10/include/server -I/usr/pgsql-10/include/internal -D_GNU_SOURCE -I/usr/include/libxml2  -I/usr/include  -c -o set_user.o set_user.c<br/>gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC -L/usr/pgsql-10/lib -Wl,--as-needed  -L/usr/lib64 -Wl,--as-needed -Wl,-rpath,'/usr/pgsql-10/lib',--enable-new-dtags -lm  -shared -o set_user.so set_user.o<br/>[root@centos6 set_user-REL1_6_1]# make USE_PGXS=1 install<br/>/bin/mkdir -p '/usr/pgsql-10/share/extension'<br/>/bin/mkdir -p '/usr/pgsql-10/share/extension'<br/>/bin/mkdir -p '/usr/pgsql-10/lib'<br/>/usr/bin/install -c -m 644 "set_user.h" /usr/pgsql-10/include<br/>/usr/bin/install -c -m 644 .//set_user.control '/usr/pgsql-10/share/extension/'<br/>/usr/bin/install -c -m 644 .//set_user--1.6.sql .//set_user--1.5--1.6.sql .//set_user--1.4--1.5.sql .//set_user--1.1--1.4.sql .//set_user--1.0--1.1.sql  '/usr/pgsql-10/share/extension/'<br/>/usr/bin/install -c -m 755  set_user.so '/usr/pgsql-10/lib/'
</xhtml:code>
                  <xhtml:p>Now that <xhtml:span class="inline_block">set_user</xhtml:span> is installed, we need to tell PostgreSQL to load its library:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ vi ~postgres/10/data/postgresql.conf<br/># load set_user libs before anything else<br/>shared_preload_libraries = 'set_user, other_libs'<br/>$ systemctl restart postgresql-10
</xhtml:code>
                  <xhtml:p>And now, we can install the extension from with SQL:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# select * from pg_available_extensions where name = 'set_user';<br/>   name   | default_version | installed_version |                  comment<br/>----------+-----------------+-------------------+--------------------------------------------<br/> set_user | 1.6.1           |                   | similar to SET ROLE but with added logging<br/>(1 row)<br/>
                     <br/>postgres=# create extension set_user;<br/>CREATE EXTENSION<br/>postgres=# select * from pg_available_extensions where name = 'set_user';<br/>   name   | default_version | installed_version |                  comment<br/>----------+-----------------+-------------------+--------------------------------------------<br/> set_user | 1.6.1           | 1.6.1             | similar to SET ROLE but with added logging<br/>(1 row)
</xhtml:code>
                  <xhtml:p>Now, we use <xhtml:span class="inline_block">GRANT</xhtml:span> to configure each DBA role to allow it to use the <xhtml:span class="inline_block">set_user</xhtml:span> functions. In the example below, we will configure my db user <xhtml:span class="inline_block">doug</xhtml:span>. (You would do this for each DBA's normal user role.)</xhtml:p>
                  <xhtml:code class="code_block">postgres=# grant execute on function set_user(text) to doug;<br/>GRANT<br/>postgres=# grant execute on function set_user_u(text) to doug;<br/>GRANT
</xhtml:code>
                  <xhtml:p>Connect to PostgreSQL as yourself and verify it works as expected:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>psql<br/>$ psql -U doug -d postgres<br/>postgres=&gt; select set_user('postgres');<br/>ERROR:  switching to superuser not allowed<br/>HINT:  Use 'set_user_u' to escalate.<br/>postgres=&gt; select set_user_u('postgres');<br/> set_user_u<br/>------------<br/> OK<br/>(1 row)<br/>
                     <br/>postgres=# select current_user, session_user;<br/> current_user | session_user<br/>--------------+--------------<br/> postgres     | doug<br/>(1 row)<br/>
                     <br/>postgres=# select reset_user();<br/> reset_user<br/>------------<br/> OK<br/>(1 row)<br/>
                     <br/>postgres=&gt; select current_user, session_user;<br/> current_user | session_user<br/>--------------+--------------<br/> doug         | doug<br/>(1 row)
</xhtml:code>
                  <xhtml:p>Once all DBA's normal user accounts have been <xhtml:span class="inline_block">GRANT</xhtml:span>ed permission, revoke the ability to login as the <xhtml:span class="inline_block">postgres</xhtml:span> (superuser) user:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# alter user postgres NOLOGIN;<br/>ALTER ROLE
</xhtml:code>
                  <xhtml:p>Which results in:</xhtml:p>
                  <xhtml:code class="code_block">$ psql<br/>psql: FATAL:  role "postgres" is not permitted to log in<br/>$ psql -U doug -d postgres<br/>psql (10.7)
</xhtml:code>
                  <xhtml:p>Make sure there are no other roles that are superuser's and can still login:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# SELECT rolname FROM pg_authid WHERE rolsuper and rolcanlogin;<br/> rolname<br/>---------<br/>(0 rows)
</xhtml:code>
                  <xhtml:p>Verify there are no unprivileged roles that can login directly that are granted a superuser role even if it is multiple layers removed:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# DROP VIEW IF EXISTS roletree;<br/>NOTICE:  view "roletree" does not exist, skipping<br/>DROP VIEW<br/>postgres=# CREATE OR REPLACE VIEW roletree AS<br/>postgres-# WITH RECURSIVE<br/>postgres-# roltree AS (<br/>postgres(#   SELECT u.rolname AS rolname,<br/>postgres(#          u.oid AS roloid,<br/>postgres(#          u.rolcanlogin,<br/>postgres(#          u.rolsuper,<br/>postgres(#          '{}'::name[] AS rolparents,<br/>postgres(#          NULL::oid AS parent_roloid,<br/>postgres(#          NULL::name AS parent_rolname<br/>postgres(#   FROM pg_catalog.pg_authid u<br/>postgres(#   LEFT JOIN pg_catalog.pg_auth_members m on u.oid = m.member<br/>postgres(#   LEFT JOIN pg_catalog.pg_authid g on m.roleid = g.oid<br/>postgres(#   WHERE g.oid IS NULL<br/>postgres(#   UNION ALL<br/>postgres(#   SELECT u.rolname AS rolname,<br/>postgres(#          u.oid AS roloid,<br/>postgres(#          u.rolcanlogin,<br/>postgres(#          u.rolsuper,<br/>postgres(#          t.rolparents || g.rolname AS rolparents,<br/>postgres(#          g.oid AS parent_roloid,<br/>postgres(#          g.rolname AS parent_rolname<br/>postgres(#   FROM pg_catalog.pg_authid u<br/>postgres(#   JOIN pg_catalog.pg_auth_members m on u.oid = m.member<br/>postgres(#   JOIN pg_catalog.pg_authid g on m.roleid = g.oid<br/>postgres(#   JOIN roltree t on t.roloid = g.oid<br/>postgres(# )<br/>postgres-# SELECT<br/>postgres-#   r.rolname,<br/>postgres-#   r.roloid,<br/>postgres-#   r.rolcanlogin,<br/>postgres-#   r.rolsuper,<br/>postgres-#   r.rolparents<br/>postgres-# FROM roltree r<br/>postgres-# ORDER BY 1;<br/>CREATE VIEW<br/>postgres=# SELECT<br/>postgres-#   ro.rolname,<br/>postgres-#   ro.roloid,<br/>postgres-#   ro.rolcanlogin,<br/>postgres-#   ro.rolsuper,<br/>postgres-#   ro.rolparents<br/>postgres-# FROM roletree ro<br/>postgres-# WHERE (ro.rolcanlogin AND ro.rolsuper)<br/>postgres-# OR<br/>postgres-# (<br/>postgres(#     ro.rolcanlogin AND EXISTS<br/>postgres(#     (<br/>postgres(#       SELECT TRUE FROM roletree ri<br/>postgres(#       WHERE ri.rolname = ANY (ro.rolparents)<br/>postgres(#       AND ri.rolsuper<br/>postgres(#     )<br/>postgres(# );<br/> rolname | roloid | rolcanlogin | rolsuper | rolparents<br/>---------+--------+-------------+----------+------------<br/>(0 rows)
</xhtml:code>
                  <xhtml:p>If any roles are identified by this query, use <xhtml:span class="inline_block">REVOKE</xhtml:span> to correct.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Much like the venerable <xhtml:span class="inline_block">sudo</xhtml:span> does for the OS, <xhtml:span class="inline_block">set_user</xhtml:span> manages superuser access for PostgreSQL. Complete configuration of <xhtml:span class="inline_block">set_user</xhtml:span> is documented at the extension's <xhtml:a href="https://github.com/pgaudit/set_user">website</xhtml:a> and should be reviewed to ensure the logging entries that your organization cares about are properly configured.</xhtml:p>
                     <xhtml:p>Note that some external tools assume they can connect as the <xhtml:span class="inline_block">postgres</xhtml:span> user by default and this is no longer true. You may find some tools need different options, reconfigured, or even abandoned to compensate for this.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.8_Make_use_of_default_roles" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Make use of default roles</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>PostgreSQL provides a set of default roles which provide access to certain, commonly needed, privileged capabilities and information. Administrators can GRANT these roles to users and/or other roles in their environment, providing those users with access to the specified capabilities and information.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>In keeping with the principle of least privilege, judicious use of the PostgreSQL default roles can greatly limit the access to privileged, or superuser, access.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/default-roles.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If you've determined that one or more of the default roles can be used, simply <xhtml:span class="inline_block">GRANT</xhtml:span> it:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# GRANT pg_monitor TO doug;<br/>GRANT ROLE
</xhtml:code>
                  <xhtml:p>And then remove <xhtml:span class="inline_block">superuser</xhtml:span> from the account:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# ALTER ROLE doug NOSUPERUSER;<br/>ALTER ROLE<br/>postgres=# select rolname from pg_roles where rolsuper is true;<br/> rolname  <br/>----------<br/> postgres<br/>(1 row)
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_5_Connection_and_Login">
      <xccdf:title xml:lang="en">Connection and Login</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The restrictions on client/user connections to the PostgreSQL database blocks unauthorized access to data and services by setting access rules. These security measures help to ensure that successful logins cannot be easily made through brute-force password attacks, pass the hash, or intuited by clever social engineering exploits.</xhtml:p>
         <xhtml:p>Settings are generally recommended to be applied to all defined profiles. The following presents standalone examples of logins for particular use cases. The authentication rules are read from the PostgreSQL host-based authentication file, <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>, from top to bottom. The first rule conforming to the condition of the request executes the METHOD <xhtml:em>and stops further processing of the file</xhtml:em>. Incorrectly applied rules, as defined by a single line instruction, can substantially alter the intended behavior resulting in either allowing or denying login attempts.</xhtml:p>
         <xhtml:p>It is strongly recommended that authentication configurations be constructed incrementally with rigid testing for each newly applied rule. Because of the large number of different variations, this benchmark limits itself to a small number of authentication methods that can be successfully applied under most circumstances. Further analysis, using the other authentication methods available in PostgreSQL, is encouraged.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1_Ensure_login_via_local_UNIX_Domain_Socket_is_configured_correctly" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure login via "local" UNIX Domain Socket is configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>A remote host login, via ssh, is arguably the most secure means of remotely accessing and administering the PostgreSQL server. Connecting with the <xhtml:span class="inline_block">psql</xhtml:span> client, via UNIX DOMAIN SOCKETS, using the <xhtml:span class="inline_block">peer</xhtml:span> authentication method is the most secure mechanism available for local connections. Provided a database user account of the same name of the UNIX account has already been defined in the database, even ordinary user accounts can access the cluster in a similarly highly secure manner.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en"/>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/3/subcontrol/4" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/5" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/client-authentication.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/auth-pg-hba-conf.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Creation of a database account that matches the local account allows PEER authentication:</xhtml:p>
                  <xhtml:code class="code_block">$ psql -c "CREATE ROLE user1 WITH LOGIN;"<br/>CREATE ROLE
</xhtml:code>
                  <xhtml:p>Execute the following as the UNIX user account, the default authentication rules should now permit the login:</xhtml:p>
                  <xhtml:code class="code_block">$ su - user1<br/>$ whoami<br/>user1<br/>$ psql -d postgres<br/>psql (10.6)<br/>Type "help" for help.<br/>
                     <br/>postgres=&gt;
</xhtml:code>
                  <xhtml:p>As per the host-based authentication rules in <xhtml:span class="inline_block">$PGDATA/pg_hba.conf</xhtml:span>, all login attempts via UNIX DOMAIN SOCKETS are processed on the line beginning with <xhtml:span class="inline_block">local</xhtml:span>.</xhtml:p>
                  <xhtml:p>This is the minimal rule that must be in place allowing PEER connections:</xhtml:p>
                  <xhtml:code class="code_block"># TYPE  DATABASE        USER            ADDRESS                 METHOD<br/>local   all             postgres                                peer
</xhtml:code>
                  <xhtml:p>More traditionally, a rule like the following would be used to allow any local PEER connection:</xhtml:p>
                  <xhtml:code class="code_block"># TYPE  DATABASE        USER            ADDRESS                 METHOD<br/>local   all             all                                     peer
</xhtml:code>
                  <xhtml:p>Once edited, the server process must reload the authentication file before it can take effect. Improperly configured rules cannot update i.e. the old rules remain in place. The PostgreSQL logs will report the outcome of the SIGHUP:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# select pg_reload_conf();<br/> pg_reload_conf<br/>----------------<br/> t<br/>(1 row)
</xhtml:code>
                  <xhtml:p>The following examples illustrate other possible configurations. The resultant "rule" of success/failure depends upon the first matching line:</xhtml:p>
                  <xhtml:code class="code_block"># allow postgres user logins
# TYPE  DATABASE        USER            ADDRESS                 METHOD<br/>local   all             postgres                                peer
</xhtml:code>
                  <xhtml:code class="code_block"># allow all local users
# TYPE  DATABASE        USER            ADDRESS                 METHOD<br/>local   all             all                                     peer
</xhtml:code>
                  <xhtml:code class="code_block"># allow all local users only if they are connecting to a db named the same as their username<br/># e.g. if user 'bob' is connecting to a db named 'bob'<br/># TYPE  DATABASE        USER                                    METHOD<br/>local   samerole        all                                     peer
</xhtml:code>
                  <xhtml:code class="code_block"># allow only local users who are members of the 'rw' role in the db<br/># TYPE  DATABASE        USER            ADDRESS                 METHOD<br/>local   all             +rw                                     peer
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_login_via_host_TCPIP_Socket_is_configured_correctly" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure login via "host" TCP/IP Socket is configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>A large number of authentication METHODs are available for hosts connecting using TCP/IP sockets, including:</xhtml:p>
            <xhtml:ul>
               <xhtml:li>
                  <xhtml:span class="inline_block">trust</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">reject</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">md5</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">scram-sha-256</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">password</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">gss</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">sspi</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">ident</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">pam</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">ldap</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">radius</xhtml:span>
               </xhtml:li>
               <xhtml:li>
                  <xhtml:span class="inline_block">cert</xhtml:span>
               </xhtml:li>
            </xhtml:ul>
            <xhtml:p>METHODs <xhtml:span class="inline_block">trust</xhtml:span>, <xhtml:span class="inline_block">password</xhtml:span>, and <xhtml:span class="inline_block">ident</xhtml:span> are <xhtml:strong>not</xhtml:strong> to be used for remote logins. METHOD <xhtml:span class="inline_block">md5</xhtml:span> is the most popular and can be used in both encrypted and unencrypted sessions,however, <xhtml:em>it is vulnerable to packet replay attacks</xhtml:em>. It is recommended that <xhtml:span class="inline_block">scram-sha-256</xhtml:span> be used instead of <xhtml:span class="inline_block">md5</xhtml:span>.</xhtml:p>
            <xhtml:p>Use of the <xhtml:span class="inline_block">gss</xhtml:span>, <xhtml:span class="inline_block">sspi</xhtml:span>, <xhtml:span class="inline_block">pam</xhtml:span>, <xhtml:span class="inline_block">ldap</xhtml:span>, <xhtml:span class="inline_block">radius</xhtml:span>, and <xhtml:span class="inline_block">cert</xhtml:span> METHODs, while more secure than <xhtml:span class="inline_block">md5</xhtml:span>, are dependent upon the availability of external authenticating processes/services and thus are not covered in this benchmark.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <notes:notes xml:lang="en">
               <xhtml:ol>
                  <xhtml:li>Use TYPE <xhtml:span class="inline_block">hostssl</xhtml:span> when administrating the database cluster as a superuser.</xhtml:li>
                  <xhtml:li>Use TYPE <xhtml:span class="inline_block">hostnossl</xhtml:span> for performance purposes and when DML operations are deemed safe without SSL connections.</xhtml:li>
                  <xhtml:li>No examples have been given for ADDRESS, i.e., CIDR, hostname, domain names, etc.</xhtml:li>
                  <xhtml:li>Only three (3) types of METHOD have been documented; there are many more.</xhtml:li>
               </xhtml:ol>
            </notes:notes>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en"/>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/client-authentication.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/auth-pg-hba-conf.html</xccdf:ident>
         <xccdf:ident system="URL">https://tools.ietf.org/html/rfc7677</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Confirm a login attempt has been made by looking for a logged error message detailing the nature of the authenticating failure. In the case of failed login attempts, whether encrypted or unencrypted, check the following:</xhtml:p>
                  <xhtml:ul>
                     <xhtml:li>The server should be sitting on a port exposed to the remote connecting host i.e. NOT ip address 127.0.0.1
<xhtml:code class="code_block">listen_addresses = '*'<br/>   ```<br/>* An authenticating rule must exist in the file `pg_hba.conf`<br/>
                           <br/>This example permits only encrypted sessions for the `postgres` role and denies all unencrypted session for the `postgres` role:
</xhtml:code>
                     </xhtml:li>
                  </xhtml:ul>
                  <xhtml:code class="code_block"> # TYPE    DATABASE           USER            ADDRESS                 METHOD
 hostssl    all             postgres         0.0.0.0/0                 scram-sha-256
 hostnossl  all             postgres         0.0.0.0/0                 reject
</xhtml:code>
                  <xhtml:p>The following examples illustrate other possible configurations. The resultant "rule" of success/failure depends upon the <xhtml:strong>first matching line</xhtml:strong>.</xhtml:p>
                  <xhtml:code class="code_block"># allow 'postgres' user only from 'localhost/loopback' connections
# and only if you know the password
# TYPE    DATABASE        USER            ADDRESS                 METHOD
host      all             postgres        127.0.0.1/32            scram-sha-256

# allow users to connect remotely only to the database named after them, 
# with the correct user password:
# (accepts both SSL and non-SSL connections)
# TYPE    DATABASE        USER            ADDRESS                 METHOD
host      samerole        all             0.0.0.0/0               scram-sha-256

# allow only those users who are a member of the 'rw' role to connect
# only to the database named after them, with the correct user password:
# (accepts both SSL and non-SSL connections)
# TYPE    DATABASE        USER            ADDRESS                 METHOD
host      samerole        +rw             0.0.0.0/0               scram-sha-256
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_6_PostgreSQL_Settings">
      <xccdf:title xml:lang="en">PostgreSQL Settings</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>As PostgreSQL evolves with each new iteration, configuration parameters are constantly being added, deprecated, or removed. These configuration parameters define not only server function but how well it performs.</xhtml:p>
         <xhtml:p>Many routine activities, combined with a specific set of configuration parameter values, can sometimes result in degraded performance and, under a specific set of conditions, even comprise the security of the RDBMS. The fact of the matter is that any parameter has the potential to affect the accessibility and performance of a running server.</xhtml:p>
         <xhtml:p>Rather than describing all the possible combination of events, this benchmark describes how a parameter can be compromised. Examples reflect the most common, and easiest to understand, exploits. Although by no means exhaustive, it is hoped that you will be able to understand the attack vectors in the context of your environment.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_Attack_Vectors_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure 'Attack Vectors' Runtime Parameters are Configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Understanding the vulnerability of PostgreSQL runtime parameters by the particular delivery method, or attack vector.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>There are as many ways of compromising a server as there are runtime parameters. A combination of any one or more of them executed at the right time under the right conditions has the potential to compromise the RDBMS. Mitigating risk is dependent upon one's understanding of the attack vectors and includes:</xhtml:p>
            <xhtml:ol>
               <xhtml:li>Via user session: includes those runtime parameters that can be set by a ROLE that persists for the life of a server-client session.</xhtml:li>
               <xhtml:li>Via attribute: includes those runtime parameters that can be set by a ROLE during a server-client session that can be assigned as an attribute for an entity such as a table, index, database, or role.</xhtml:li>
               <xhtml:li>Via server reload: includes those runtime parameters that can be set by the superuser using a SIGHUP or configuration file reload command and affects the entire cluster.</xhtml:li>
               <xhtml:li>Via server restart: includes those runtime parameters that can be set and effected by restarting the server process and affects the entire cluster.</xhtml:li>
            </xhtml:ol>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18/subcontrol/7" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>In the case of a changed parameter, the value is returned back to its default value. In the case of a successful exploit of an already set runtime parameter then an analysis must be carried out determining the best approach mitigating the risk.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>It can be difficult to totally eliminate risk. Once changed, detecting a miscreant parameter can become problematic.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_backend_runtime_parameters_are_configured_correctly" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure 'backend' runtime parameters are configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>In order to serve multiple clients efficiently, the PostgreSQL server launches a new "backend" process for each client. The runtime parameters in this benchmark section are controlled by the backend process. The server's performance, in the form of slow queries causing a denial of service, and the RDBM's auditing abilities for determining root cause analysis can be compromised via these parameters.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A denial of service is possible by denying the use of indexes and by slowing down client access to an unreasonable level. Unsanctioned behavior can be introduced by introducing rogue libraries which can then be called in a database session. Logging can be altered and obfuscated inhibiting root cause analysis.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18/subcontrol/7" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/view-pg-settings.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Once detected, the unauthorized/undesired change can be corrected by altering the configuration file and executing a server restart. In the case where the parameter has been on the command line invocation of <xhtml:span class="inline_block">pg_ctl</xhtml:span> the <xhtml:span class="inline_block">restart</xhtml:span> invocation is insufficient and an explicit <xhtml:span class="inline_block">stop</xhtml:span> and <xhtml:span class="inline_block">start</xhtml:span> must instead be made.</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>Query the view <xhtml:span class="inline_block">pg_settings</xhtml:span> and compare with previous query outputs for any changes.</xhtml:li>
                     <xhtml:li>Review configuration files <xhtml:span class="inline_block">postgresql.conf</xhtml:span> and <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span> and compare them with previously archived file copies for any changes.</xhtml:li>
                     <xhtml:li>Examine the process output and look for parameters that were used at server startup:
<xhtml:code class="code_block">ps aux | grep -E '[p]ostgres|[p]ostmaster'
</xhtml:code>
                     </xhtml:li>
                  </xhtml:ol>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>All changes made on this level will affect the overall behavior of the server. These changes can only be affected by a server restart after the parameters have been altered in the configuration files.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824600" value-id="xccdf_org.cisecurity.benchmarks_value_6.2.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824600"/>
            </xccdf:check>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824700" value-id="xccdf_org.cisecurity.benchmarks_value_6.2.2_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824700"/>
            </xccdf:check>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824800" value-id="xccdf_org.cisecurity.benchmarks_value_6.2.3_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824800"/>
            </xccdf:check>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7824900" value-id="xccdf_org.cisecurity.benchmarks_value_6.2.4_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7824900"/>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_Postmaster_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure 'Postmaster' Runtime Parameters are Configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>PostgreSQL runtime parameters that are executed by the postmaster process.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">postmaster</xhtml:span>, or <xhtml:span class="inline_block">postgres</xhtml:span>, process is the supervisory process that assigns a backend process to an incoming client connection. The <xhtml:span class="inline_block">postmaster</xhtml:span> manages key runtime parameters that are either shared by all backend connections or needed by the <xhtml:span class="inline_block">postmaster</xhtml:span> process itself to run.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/view-pg-settings.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Once detected, the unauthorized/undesired change can be corrected by editing the altered configuration file and executing a server restart. In the case where the parameter has been on the command line invocation of <xhtml:span class="inline_block">pg_ctl</xhtml:span> the <xhtml:span class="inline_block">restart</xhtml:span> invocation is insufficient and an explicit <xhtml:span class="inline_block">stop</xhtml:span> and <xhtml:span class="inline_block">start</xhtml:span> must instead be made.</xhtml:p>
                  <xhtml:p>Detecting a change is possible by one of the following methods:</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>Query the view <xhtml:span class="inline_block">pg_settings</xhtml:span> and compare with previous query outputs for any changes</xhtml:li>
                     <xhtml:li>Review the configuration files <xhtml:span class="inline_block">postgresql.conf</xhtml:span> and <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span> and compare with previously archived file copies for any changes</xhtml:li>
                     <xhtml:li>Examine the process output and look for parameters that were used at server startup:
<xhtml:code class="code_block">ps aux | grep -E '[p]ostgres|[p]ostmaster'
</xhtml:code>
                     </xhtml:li>
                  </xhtml:ol>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>All changes made on this level will affect the overall behavior of the server. These changes can be effected by editing the PostgreSQL configuration files and by either executing a server SIGHUP from the command line or, as superuser <xhtml:span class="inline_block">postgres</xhtml:span>, executing the SQL command <xhtml:span class="inline_block">select pg_reload_conf()</xhtml:span>. A denial of service is possible by the over-allocating of limited resources, such as RAM. Data can be corrupted by allowing damaged pages to load or by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Client messages can be altered in such a way as to interfere with the application logic. Logging can be altered and obfuscated inhibiting root cause analysis.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7825000"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_SIGHUP_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure 'SIGHUP' Runtime Parameters are Configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>PostgreSQL runtime parameters that are executed by the SIGHUP signal.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>In order to define server behavior and optimize server performance, the server's superuser has the privilege of setting these parameters which are found in the configuration files <xhtml:span class="inline_block">postgresql.conf</xhtml:span> and <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>. Alternatively, those parameters found in <xhtml:span class="inline_block">postgresql.conf</xhtml:span> can also be changed using a server login session and executing the SQL command <xhtml:span class="inline_block">ALTER SYSTEM</xhtml:span> which writes its changes in the configuration file <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span>.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/view-pg-settings.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Restore all values in the PostgreSQL configuration files and invoke the server to reload the configuration files.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>All changes made on this level will affect the overall behavior of the server. These changes can be effected by editing the PostgreSQL configuration files and by either executing a server SIGHUP from the command line or, as superuser <xhtml:span class="inline_block">postgres</xhtml:span>, executing the SQL command <xhtml:span class="inline_block">select pg_reload_conf()</xhtml:span>. A denial of service is possible by the over-allocating of limited resources, such as RAM. Data can be corrupted by allowing damaged pages to load or by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Client messages can be altered in such a way as to interfere with the application logic. Logging can be altered and obfuscated inhibiting root cause analysis.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7825100"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.5_Ensure_Superuser_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure 'Superuser' Runtime Parameters are Configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>PostgreSQL runtime parameters that can only be executed by the server's superuser, which is traditionally <xhtml:span class="inline_block">postgres</xhtml:span>.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>In order to improve and optimize server performance, the server's superuser has the privilege of setting these parameters which are found in the configuration file <xhtml:span class="inline_block">postgresql.conf</xhtml:span>. Alternatively, they can be changed in a PostgreSQL login session via the SQL command <xhtml:span class="inline_block">ALTER SYSTEM</xhtml:span> which writes its changes in the configuration file <xhtml:span class="inline_block">postgresql.auto.conf</xhtml:span>.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/view-pg-settings.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The exploit is made in the configuration files. These changes are effected upon server restart. Once detected, the unauthorized/undesired change can be made by editing the altered configuration file and executing a server restart. In the case where the parameter has been set on the command line invocation of <xhtml:span class="inline_block">pg_ctl</xhtml:span> the <xhtml:span class="inline_block">restart</xhtml:span> invocation is insufficient and an explicit <xhtml:span class="inline_block">stop</xhtml:span> and <xhtml:span class="inline_block">start</xhtml:span> must instead be made.</xhtml:p>
                  <xhtml:p>Detecting a change is possible by one of the following methods:</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>Query the view <xhtml:span class="inline_block">pg_settings</xhtml:span> and compare with previous query outputs for any changes.</xhtml:li>
                     <xhtml:li>Review the configuration files <xhtml:span class="inline_block">postgreql.conf</xhtml:span> and <xhtml:span class="inline_block">postgreql.auto.conf</xhtml:span> and compare with previously archived file copies for any changes</xhtml:li>
                     <xhtml:li>Examine the process output and look for parameters that were used at server startup:
<xhtml:code class="code_block">ps aux | grep -E '[p]ostgres|[p]ostmaster'
</xhtml:code>
                     </xhtml:li>
                  </xhtml:ol>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>All changes made on this level will affect the overall behavior of the server. These changes can only be affected by a server restart after the parameters have been altered in the configuration files. A denial of service is possible by the over allocating of limited resources, such as RAM. Data can be corrupted by allowing damaged pages to load or by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Client messages can be altered in such a way as to interfere with the application logic. Logging can be altered and obfuscated inhibiting root cause analysis.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7825200"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_User_Runtime_Parameters_are_Configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure 'User' Runtime Parameters are Configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>These PostgreSQL runtime parameters are managed at the user account (ROLE) level.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>In order to improve performance and optimize features, a <xhtml:span class="inline_block">ROLE</xhtml:span> has the privilege of setting numerous parameters in a transaction, session, or as an entity attribute. Any <xhtml:span class="inline_block">ROLE</xhtml:span> can alter any of these parameters.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/view-pg-settings.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>In the matter of a user session, the login sessions must be validated that it is not executing undesired parameter changes. In the matter of attributes that have been changed in entities, they must be manually reverted to its default value(s).</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>A denial of service is possible by the over-allocating of limited resources, such as RAM. Changing <xhtml:span class="inline_block">VACUUM</xhtml:span> parameters can force a server shutdown which is standard procedure preventing data corruption from transaction ID wraparound. Data can be corrupted by changing parameters to reinterpret values in an unexpected fashion, e.g. changing the time zone. Logging can be altered and obfuscated to inhibit root cause analysis.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7825300"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.7_Ensure_FIPS_140-2_OpenSSL_Cryptography_Is_Used" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure FIPS 140-2 OpenSSL Cryptography Is Used</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Install, configure, and use OpenSSL on a platform that has a NIST certified FIPS 140-2 installation of OpenSSL. This provides PostgreSQL instances the ability to generate and validate cryptographic hashes to protect unclassified information requiring confidentiality and cryptographic protection, in accordance with the data owner's requirements.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Federal Information Processing Standard (FIPS) Publication 140-2 is a computer security standard developed by a U.S. Government and industry working group for validating the quality of cryptographic modules. Use of weak, or untested, encryption algorithms undermine the purposes of utilizing encryption to protect data. PostgreSQL uses OpenSSL for the underlying encryption layer.</xhtml:p>
            <xhtml:p>The database and application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated. It is the responsibility of the data owner to assess the cryptography requirements in light of applicable federal laws, Executive Orders, directives, policies, regulations, and standards.</xhtml:p>
            <xhtml:p>For detailed information, refer to NIST FIPS Publication 140-2, <xhtml:em>Security Requirements for Cryptographic Modules</xhtml:em>. Note that the product's cryptographic modules must be validated and certified by NIST as FIPS-compliant. The security functions validated as part of FIPS 140-2 for cryptographic modules are described in FIPS 140-2 Annex A. Currently only Red Hat Enterprise Linux is certified as a FIPS 140-2 distribution of OpenSSL. For other operating systems, users must obtain or build their own FIPS 140-2 OpenSSL libraries.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="http://cce.mitre.org">https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html</xccdf:ident>
         <xccdf:ident system="URL">http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1758.pdf</xccdf:ident>
         <xccdf:ident system="URL">http://csrc.nist.gov/publications/PubsFIPS.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Configure OpenSSL to be FIPS compliant. PostgreSQL uses OpenSSL for cryptographic modules. To configure OpenSSL to be FIPS 140-2 compliant, see the <xhtml:a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html">official RHEL Documentation</xhtml:a>. Below is a general summary of the steps required:</xhtml:p>
                  <xhtml:ul>
                     <xhtml:li>Install the <xhtml:span class="inline_block">dracut-fips</xhtml:span> package</xhtml:li>
                  </xhtml:ul>
                  <xhtml:code class="code_block">  $ yum -y install dracut-fips<br/>Loaded plugins: fastestmirror<br/>Loading mirror speeds from cached hostfile<br/>[snip]<br/>Resolving Dependencies<br/>--&gt; Running transaction check<br/>---&gt; Package dracut-fips.x86_64 0:033-554.el7 will be installed<br/>--&gt; Processing Dependency: hmaccalc for package: dracut-fips-033-554.el7.x86_64<br/>--&gt; Running transaction check<br/>---&gt; Package hmaccalc.x86_64 0:0.9.13-4.el7 will be installed<br/>--&gt; Finished Dependency Resolution<br/>Dependencies Resolved<br/>
                     <br/> Package                      Arch                    Version                          Repository             Size<br/>
                     <br/>Installing:<br/> dracut-fips                  x86_64                  033-554.el7                      base                   61 k<br/>Installing for dependencies:<br/> hmaccalc                     x86_64                  0.9.13-4.el7                     base                   26 k<br/>
                     <br/>Transaction Summary<br/>Install  1 Package (+1 Dependent package)<br/>
                     <br/>Total download size: 87 k<br/>Installed size: 107 k<br/>Downloading packages:<br/>[snip]<br/>Running transaction check<br/>Running transaction test<br/>Transaction test succeeded<br/>Running transaction<br/>  Installing : hmaccalc-0.9.13-4.el7.x86_64                                                                    1/2 <br/>  Installing : dracut-fips-033-554.el7.x86_64                                                                  2/2 <br/>  Verifying  : hmaccalc-0.9.13-4.el7.x86_64                                                                    1/2 <br/>  Verifying  : dracut-fips-033-554.el7.x86_64                                                                  2/2 <br/>
                     <br/>Installed:<br/>  dracut-fips.x86_64 0:033-554.el7                                                                                 <br/>
                     <br/>Dependency Installed:<br/>  hmaccalc.x86_64 0:0.9.13-4.el7                                                                                   <br/>
                     <br/>Complete!
</xhtml:code>
                  <xhtml:ul>
                     <xhtml:li>Recreate the <xhtml:span class="inline_block">initramfs</xhtml:span> file
<xhtml:code class="code_block">$ dracut -f
</xhtml:code>
                     </xhtml:li>
                     <xhtml:li>Modify the kernel command line of the current kernel in the <xhtml:span class="inline_block">/boot/grub/grub.conf</xhtml:span> file by adding the following option: <xhtml:span class="inline_block">fips=1</xhtml:span>
                     </xhtml:li>
                     <xhtml:li>Reboot the system for changes to take effect.</xhtml:li>
                     <xhtml:li>Verify <xhtml:span class="inline_block">fips_enabled</xhtml:span> according to Audit Procedure above.</xhtml:li>
                  </xhtml:ul>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://open-scap.org/page/SCE">
            <xccdf:check-import import-name="stdout"/>
            <xccdf:check-content-ref href="sce/openssl_fips_140-2.sh"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_SSL_is_enabled_and_configured_correctly" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure SSL is enabled and configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>SSL on a PostgreSQL server should be enabled (set to <xhtml:span class="inline_block">on</xhtml:span>) and configured to encrypt TCP traffic to and from the server.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If SSL is not enabled and configured correctly, this increases the risk of data being compromised in transit.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/ssl-tcp.html</xccdf:ident>
         <xccdf:ident system="URL">http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/libpq-ssl.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>For this example, and ease of illustration, we will be using a self-signed certificate for the server generated via <xhtml:span class="inline_block">openssl</xhtml:span>, and the PostgreSQL defaults for file naming and location in the PostgreSQL <xhtml:span class="inline_block">$PGDATA</xhtml:span> directory.</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>postgres<br/>$ # create new certificate and enter details at prompts<br/>$ openssl req -new -text -out server.req<br/>Generating a 2048 bit RSA private key<br/>.....................+++<br/>..................................................................+++<br/>writing new private key to 'privkey.pem'<br/>Enter PEM pass phrase:<br/>Verifying - Enter PEM pass phrase:<br/>-----<br/>You are about to be asked to enter information that will be incorporated<br/>into your certificate request.<br/>What you are about to enter is what is called a Distinguished Name or a DN.<br/>There are quite a few fields but you can leave some blank<br/>For some fields there will be a default value,<br/>If you enter '.', the field will be left blank.<br/>-----<br/>Country Name (2 letter code) [XX]:US<br/>State or Province Name (full name) []:Ohio<br/>Locality Name (eg, city) [Default City]:Columbus<br/>Organization Name (eg, company) [Default Company Ltd]:Me Inc<br/>Organizational Unit Name (eg, section) []:IT<br/>Common Name (eg, your name or your server's hostname) []:my.me.inc<br/>Email Address []:me@meinc.com<br/>
                     <br/>Please enter the following 'extra' attributes<br/>to be sent with your certificate request<br/>A challenge password []:<br/>An optional company name []:<br/>
                     <br/>$ # remove passphrase (required for automatic server start up)<br/>$ openssl rsa -in privkey.pem -out server.key &amp;&amp; rm privkey.pem<br/>Enter pass phrase for privkey.pem:<br/>writing RSA key<br/>
                     <br/>$ # modify certificate to self signed, generate .key and .crt files<br/>$ openssl req -x509 -in server.req -text -key server.key -out server.crt<br/>
                     <br/>$ # copy .key and .crt files to appropriate location, here default $PGDATA<br/>$ cp server.key server.crt $PGDATA<br/>
                     <br/>$ # restrict file mode for server.key<br/>$ chmod og-rwx server.key
</xhtml:code>
                  <xhtml:p>Edit the PostgreSQL configuration file <xhtml:span class="inline_block">postgresql.conf</xhtml:span> to ensure the following items are set. Again, we are using defaults. Note that altering these parameters will require restarting the cluster.</xhtml:p>
                  <xhtml:code class="code_block"># (change requires restart)<br/>ssl = on<br/>
                     <br/># allowed SSL ciphers<br/>ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'<br/>
                     <br/># (change requires restart)<br/>ssl_cert_file = 'server.crt'<br/>
                     <br/># (change requires restart)<br/>ssl_key_file = 'server.key'<br/>
                     <br/>password_encryption = on
</xhtml:code>
                  <xhtml:p>Finally, restart PostgreSQL and confirm <xhtml:span class="inline_block">ssl</xhtml:span> using commands outlined in Audit Procedures:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# show ssl;<br/> ssl<br/>-----<br/> on<br/>(1 row)
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>A self-signed certificate can be used for testing, but a certificate signed by a certificate authority (CA) (either one of the global CAs or a local one) should be used in production so that clients can verify the server's identity. If all the database clients are local to the organization, using a local CA is recommended.</xhtml:p>
                     <xhtml:p>To ultimately enable and enforce <xhtml:span class="inline_block">ssl</xhtml:span> authentication for the server, appropriate <xhtml:span class="inline_block">hostssl</xhtml:span> records must be added to the <xhtml:span class="inline_block">pg_hba.conf</xhtml:span> file. Be sure to <xhtml:span class="inline_block">reload</xhtml:span> PostgreSQL after any changes (restart not required).</xhtml:p>
                     <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> The <xhtml:span class="inline_block">hostssl</xhtml:span> record matches connection attempts made using TCP/IP, but <xhtml:strong>only</xhtml:strong> when the connection is made with SSL encryption. The <xhtml:span class="inline_block">host</xhtml:span> record matches attempts made using TCP/IP, but allows both SSL and non-SSL connections. The <xhtml:span class="inline_block">hostnossl</xhtml:span> record matches attempts made using TCP/IP, but only those <xhtml:em>without</xhtml:em> SSL. <xhtml:em>Care should be taken to enforce SSL as appropriate.</xhtml:em>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7825500" value-id="xccdf_org.cisecurity.benchmarks_value_6.8.1_var"/>
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7825500"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_the_pgcrypto_extension_is_installed_and_configured_correctly" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure the pgcrypto extension is installed and configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>PostgreSQL must implement cryptographic mechanisms to prevent unauthorized disclosure or modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>PostgreSQL handling data that requires "data at rest" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to PostgreSQL or implemented via additional software or operating system/file system settings, as appropriate to the situation. Information at rest refers to the state of information when it is located on a secondary storage device (e.g. disk drive, tape drive) within an organizational information system.</xhtml:p>
            <xhtml:p>Selection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e. full disk encryption) or encrypt specific data structures (e.g. files, records, or fields). Organizations may also optionally choose to implement both to implement layered security.</xhtml:p>
            <xhtml:p>The decision whether, and what, to encrypt rests with the data owner and is also influenced by the physical measures taken to secure the equipment and media on which the information resides. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate. If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification.</xhtml:p>
            <xhtml:p>The PostgreSQL <xhtml:span class="inline_block">pgcrypto</xhtml:span> extension provides cryptographic functions for PostgreSQL and is intended to address the confidentiality and integrity of user and system information at rest in non-mobile devices.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/5" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/8" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">http://www.postgresql.org/docs/10/static/pgcrypto.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The <xhtml:span class="inline_block">pgcrypto</xhtml:span> extension is included with the PostgreSQL 'contrib' package. Although included, it needs to be created in the database.</xhtml:p>
                  <xhtml:p>As the database administrator, run the following:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# CREATE EXTENSION pgcrypto;<br/>CREATE EXTENSION
</xhtml:code>
                  <xhtml:p>Verify <xhtml:span class="inline_block">pgcrypto</xhtml:span> is installed:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# SELECT * FROM pg_available_extensions WHERE name='pgcrypto';<br/>   name   | default_version | installed_version |         comment<br/>----------+-----------------+-------------------+-------------------------<br/> pgcrypto | 1.3             | 1.3               | cryptographic functions<br/>(1 row)
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>When considering or undertaking any form of encryption, it is critical to understand the state of the encrypted data at all stages of the data lifecycle. The use of <xhtml:span class="inline_block">pgcrypto</xhtml:span> ensures that the data at rest in the tables (and therefore on disk) is encrypted, but for the data to be accessed by any users or applications, said users/applications will, by necessity, have access to the encrypt and decrypt keys and the data in question will be encrypted/decrypted in memory and then transferred to/from the user/application in that form.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7825400"/>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7_Replication">
      <xccdf:title xml:lang="en">Replication</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Data redundancy often plays a major role as part of an overall database strategy. Replication is an example of data redundancy and fulfills both High Availability and High Performance requirements. However, although the DBA may have expended much time and effort securing the PRIMARY host and taken the time to harden STANDBY configuration parameters, one sometimes overlooks the medium transmitting the data itself over the network. Consequently, replication is an appealing attack vector given that all DDL, and DML operations executed on the PRIMARY, or master, host is sent over the wire to the SECONDARY/STANDBY, or slave, hosts. Fortunately, when correctly understood, defeating such attacks can be implemented in a straight forward manner. This benchmark reviews those issues surrounding the most common mechanisms of replicating data between hosts. There are several PostgreSQL replication mechanisms and includes:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>Warm Standby (also known as LOG Shipping)
<xhtml:ul>
                  <xhtml:li>Transaction logs are copied from the PRIMARY to SECONDARY host that reads the logs in a "recovery" mode. For all intents and purposes the host ingesting the WAL cannot be read i.e. it's off-line.</xhtml:li>
               </xhtml:ul>
            </xhtml:li>
            <xhtml:li>Hot Standby
<xhtml:ul>
                  <xhtml:li>Operates in the exact same fashion as the Warm Standby Server except that, in addition, it offers a read-only environment for client connections to connect and query.</xhtml:li>
               </xhtml:ul>
            </xhtml:li>
            <xhtml:li>Point In Time Recovery (PITR)
<xhtml:ul>
                  <xhtml:li>Primarily used for database forensics and recovery at particular points in time such as in the case that important data may have been accidentally removed. One can restore the cluster to a point in time before the event occurred.</xhtml:li>
               </xhtml:ul>
            </xhtml:li>
            <xhtml:li>Streaming Replication
<xhtml:ul>
                  <xhtml:li>Uses an explicit connection, which in a manner of speaking is similar to the standard client connection, between the PRIMARY and STANDBY host. It too reads the transaction logs and ingests into a read-only server. What's different is that the connection uses a special replication protocol which is faster and more efficient than log shipping. Similar to standard client connections, it also honors the same authentication rules as expressed in the PostgreSQL host-based authentication file, <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>.</xhtml:li>
               </xhtml:ul>
            </xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.1_Ensure_a_replication-only_user_is_created_and_used_for_streaming_replication" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure a replication-only user is created and used for streaming replication</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Create a new user specifically for use by streaming replication instead of using the superuser account.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>As it is not necessary to be a superuser to initiate a replication connection, it is proper to create an account specifically for replication. This allows further 'locking down' the uses of the superuser account and follows the general principle of using the least privileges necessary.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/app-pgbasebackup.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/standby-settings.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>It will be necessary to create a new role for replication purposes:</xhtml:p>
                  <xhtml:code class="code_block">postgres=# create user replication_user REPLICATION encrypted password 'XXX';<br/>CREATE ROLE<br/>postgres=# select rolname from pg_roles where rolreplication is true;<br/>     rolname<br/>------------------<br/> postgres<br/> replication_user<br/>(2 rows)
</xhtml:code>
                  <xhtml:p>When using <xhtml:span class="inline_block">pg_basebackup</xhtml:span> (or other replication tools) and when configuring <xhtml:span class="inline_block">recovery.conf</xhtml:span> on your standby server, you would use the <xhtml:span class="inline_block">replication_user</xhtml:span> (and its password).</xhtml:p>
                  <xhtml:p>Ensure you allow the new user via your <xhtml:span class="inline_block">pg_hba.conf</xhtml:span> file:</xhtml:p>
                  <xhtml:code class="code_block"># note that 'replication' in the 2nd column is required and is a special<br/># keyword, not a real database<br/>hostssl replication     replication_user       0.0.0.0/0               md5
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2_Ensure_base_backups_are_configured_and_functional" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure base backups are configured and functional</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>A 'base backup' is a copy of the PRIMARY host's data cluster ($PGDATA) and is used to create STANDBY hosts and for Point In Time Recovery (PITR) mechanisms. Base backups should be copied across networks in a secure manner using an encrypted transport mechanism. The PostgreSQL CLI <xhtml:span class="inline_block">pg_basebackup</xhtml:span> can be used, however, SSL encryption should be enabled on the server as per section 6.8 of this benchmark. The pgBackRest tool detailed in section 8.3 of this benchmark can also be used to create a 'base backup'.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en"/>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/10/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/10/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/functions-admin.html#FUNCTIONS-ADMIN-BACKUP-TABLE</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/app-pgbasebackup.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Executing base backups using <xhtml:span class="inline_block">pg_basebackup</xhtml:span> requires the following steps on the <xhtml:strong>standby</xhtml:strong> server:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>postgres<br/>$ pg_basebackup -h name_or_IP_of_master \<br/>-p 5432 \<br/>-U replication_user \<br/>-D ~postgres/10/data \<br/>-P -v -R -Xs \
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3_Ensure_WAL_archiving_is_configured_and_functional" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure WAL archiving is configured and functional</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Write Ahead Log (WAL) Archiving, or Log Shipping, is the process of sending transaction log files from the PRIMARY host either to one or more STANDBY hosts or to be archived on a remote storage device for later use, e.g. <xhtml:span class="inline_block">PITR</xhtml:span>. There are several utilities that can copy WALs including, but not limited to, <xhtml:span class="inline_block">cp</xhtml:span>, <xhtml:span class="inline_block">scp</xhtml:span>, <xhtml:span class="inline_block">sftp</xhtml:span>, and <xhtml:span class="inline_block">rynsc</xhtml:span>. Basically, the server follows a set of runtime parameters which defines when the WAL should be copied using one of the aforementioned utilities.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Unless the server has been correctly configured, one runs the risk of sending WALs in an unsecured, unencrypted fashion.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-wal.html#RUNTIME-CONFIG-WAL-ARCHIVING</xccdf:ident>
         <xccdf:ident system="URL">https://linux.die.net/man/1/ssh-keygen</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Change parameters and restart the server as required.</xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Note:</xhtml:strong> SSH public keys must be generated and installed as per industry standards.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7826000" value-id="xccdf_org.cisecurity.benchmarks_value_7.3.1_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7826000"/>
            </xccdf:check>
            <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:var:7826100" value-id="xccdf_org.cisecurity.benchmarks_value_7.3.2_var"/>
               <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
               <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7826100"/>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4_Ensure_streaming_replication_parameters_are_configured_correctly" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure streaming replication parameters are configured correctly</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Streaming replication from a PRIMARY host transmits DDL, DML, passwords, and other potentially sensitive activities and data. These connections should be protected with Secure Sockets Layer (SSL).</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Unencrypted transmissions could reveal sensitive information to unauthorized parties. Unauthenticated connections could enable man-in-the-middle attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/14/subcontrol/2" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-connection.html#RUNTIME-CONFIG-CONNECTION-SECURITY</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/functions-admin.html#FUNCTIONS-ADMIN-BACKUP-TABLE</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/app-pgbasebackup.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-wal.html#RUNTIME-CONFIG-WAL-ARCHIVING</xccdf:ident>
         <xccdf:ident system="URL">https://linux.die.net/man/1/openssl</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Review prior sections in this benchmark regarding SSL certificates, replication user, and WAL archiving.</xhtml:p>
                  <xhtml:p>Confirm the file <xhtml:span class="inline_block">recovery.conf</xhtml:span> is present on the STANDBY host and contains lines similar to the following:</xhtml:p>
                  <xhtml:code class="code_block">standby_mode=on<br/>primary_conninfo = 'user=replication_user password=mypassword host=mySrcHost port=5432 sslmode=require sslcompression=1'
</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7826200"/>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8_Special_Configuration_Considerations">
      <xccdf:title xml:lang="en">Special Configuration Considerations</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The recommendations proposed here are to try and address some of the less come use cases which may warrant additional configuration guidance/consideration.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1_Ensure_PostgreSQL_configuration_files_are_outside_the_data_cluster" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure PostgreSQL configuration files are outside the data cluster</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>PostgreSQL configuration files within the data cluster's directory tree can be changed by anyone logging into the data cluster as the superuser, i.e. <xhtml:span class="inline_block">postgres</xhtml:span>. As a matter of default policy, configuration files such as <xhtml:span class="inline_block">postgresql.conf</xhtml:span>, <xhtml:span class="inline_block">pg_hba.conf</xhtml:span>, and <xhtml:span class="inline_block">pg_ident</xhtml:span>, are placed in the data cluster's directory, <xhtml:span class="inline_block">$PGDATA</xhtml:span>. PostgreSQL can be configured to relocate these files to locations outside the data cluster which cannot then be accessed by an ordinary superuser login session.</xhtml:p>
            <xhtml:p>Consideration should also be given to "include directives"; these are cluster subdirectories where one can locate files containing additional configuration parameters. Include directives are meant to add more flexibility for unique installs or large network environments while maintaining order and consistent architectural design.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Leaving PostgreSQL configuration files within the data cluster's directory tree increases the changes that they will be inadvertently or intentionally altered.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18/subcontrol/7" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-file-locations.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-connection.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/config-setting.html#CONFIG-INCLUDES</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Follow these steps to remediate the configuration file locations and permissions:</xhtml:p>
                  <xhtml:ul>
                     <xhtml:li>Determine appropriate locations for relocatable configuration files based on your organization's security policies. If necessary, relocate and/or rename configuration files outside of the data cluster.</xhtml:li>
                     <xhtml:li>Ensure their file permissions are restricted as much as possible, i.e. only superuser read access.</xhtml:li>
                     <xhtml:li>Change the settings accordingly in the <xhtml:span class="inline_block">postgresql.conf</xhtml:span> configuration file.</xhtml:li>
                     <xhtml:li>Restart the database cluster for the changes to take effect.</xhtml:li>
                  </xhtml:ul>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7826300"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2_Ensure_PostgreSQL_subdirectory_locations_are_outside_the_data_cluster" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure PostgreSQL subdirectory locations are outside the data cluster</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The PostgreSQL cluster is organized to carry out specific tasks in subdirectories. For the purposes of performance, reliability, and security these subdirectories should be relocated outside the data cluster.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Some subdirectories contain information, such as logs, which can be of value to others such as developers. Other subdirectories can gain a performance benefit when placed on fast storage devices. Finally, relocating a subdirectory to a separate and distinct partition mitigates denial of service and involuntary server shutdown when excessive writes fill the data cluster's partition, e.g. <xhtml:span class="inline_block">pg_xlog</xhtml:span> and <xhtml:span class="inline_block">pg_log</xhtml:span>.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18/subcontrol/7" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-file-locations.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following steps to remediate the subdirectory locations and permissions:</xhtml:p>
                  <xhtml:ul>
                     <xhtml:li>Determine appropriate data, log, and tablespace directories and locations based on your organization's security policies. If necessary, relocate all listed directories outside the data cluster.</xhtml:li>
                     <xhtml:li>Ensure file permissions are restricted as much as possible, i.e. only superuser read access.</xhtml:li>
                     <xhtml:li>When directories are relocated to other partitions, ensure that they are of sufficient size to mitigate against excessive space utilization.</xhtml:li>
                     <xhtml:li>Lastly, change the settings accordingly in the <xhtml:span class="inline_block">postgresql.conf</xhtml:span> configuration file and restart the database cluster for changes to take effect.</xhtml:li>
                  </xhtml:ul>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <xccdf:check-export export-name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql_all:var:2000000" value-id="xccdf_org.cisecurity_value_jdbc.url"/>
            <xccdf:check-content-ref href="CIS_PostgreSQL_10_Benchmark_v1.0.0-oval.xml" name="oval:org.cisecurity.benchmarks.a_postgresql_postgresql:def:7826400"/>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.3_Ensure_the_backup_and_restore_tool_pgBackRest_is_installed_and_configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure the backup and restore tool, 'pgBackRest', is installed and configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>pgBackRest aims to be a simple, reliable backup and restore system that can seamlessly scale up to the largest databases and workloads. Instead of relying on traditional backup tools like <xhtml:span class="inline_block">tar</xhtml:span> and <xhtml:span class="inline_block">rsync</xhtml:span>, pgBackRest implements all backup features internally and uses a custom protocol for communicating with remote systems. Removing reliance on <xhtml:span class="inline_block">tar</xhtml:span> and <xhtml:span class="inline_block">rsync</xhtml:span> allows for better solutions to database-specific backup challenges. The custom remote protocol allows for more flexibility and limits the types of connections that are required to perform a backup which increases security.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The native PostgreSQL backup facility <xhtml:span class="inline_block">pg_dump</xhtml:span> provides adequate logical backup operations but does not provide for Point In Time Recovery (PITR). The PostgreSQL facility <xhtml:span class="inline_block">pg_basebackup</xhtml:span> performs physical backup of the database files and does provide for PITR, but it is constrained by single threading. Both of these methodologies are standard in the PostgreSQL ecosystem and appropriate for particular backup/recovery needs. <xhtml:span class="inline_block">pgBackRest</xhtml:span> offers another option with much more robust features and flexibility.</xhtml:p>
            <xhtml:p>
               <xhtml:span class="inline_block">pgBackRest</xhtml:span> is open source software developed to perform efficient backups on PostgreSQL databases that measure in tens of terabytes and greater. It supports per file checksums, compression, partial/failed backup resume, high-performance parallel transfer, asynchronous archiving, tablespaces, expiration, full/differential/incremental, local/remote operation via SSH, hard-linking, restore, <xhtml:strong>backup encryption</xhtml:strong>, and more. <xhtml:span class="inline_block">pgBackRest</xhtml:span> is written in C and Perl and does not depend on <xhtml:span class="inline_block">rsync</xhtml:span> or <xhtml:span class="inline_block">tar</xhtml:span> but instead performs its own deltas which gives it maximum flexibility. Finally, <xhtml:span class="inline_block">pgBackRest</xhtml:span> provides an easy to use internal repository listing backup details accessible via the <xhtml:span class="inline_block">pgbackrest info</xhtml:span> command, as illustrated below.</xhtml:p>
            <xhtml:code class="code_block">$ pgbackrest info<br/>stanza: proddb01<br/>status: ok<br/>
               <br/>db (current)<br/>  wal archive min/max (10.6-1): 000000010000000000000012 / 000000010000000000000017<br/>
               <br/>        full backup: 20181002-153106F<br/>            timestamp start/stop: 2018-10-02 15:31:06 / 2018-10-02 15:31:49<br/>            wal start/stop: 000000010000000000000012 / 000000010000000000000012<br/>            database size: 29.4MB, backup size: 29.4MB<br/>            repository size: 3.4MB, repository backup size: 3.4MB<br/>
               <br/>        diff backup: 20181002-153106F_20181002-173109D<br/>            timestamp start/stop: 2018-10-02 17:31:09 / 2018-10-02 17:31:19<br/>            wal start/stop: 000000010000000000000015 / 000000010000000000000015<br/>            database size: 29.4MB, backup size: 2.6MB<br/>            repository size: 3.4MB, repository backup size: 346.8KB<br/>            backup reference list: 20181002-153106F<br/>
               <br/>        incr backup: 20181002-153106F_20181002-183114I<br/>            timestamp start/stop: 2018-10-02 18:31:14 / 2018-10-02 18:31:22<br/>            wal start/stop: 000000010000000000000017 / 000000010000000000000017<br/>            database size: 29.4MB, backup size: 8.2KB<br/>            repository size: 3.4MB, repository backup size: 519B<br/>            backup reference list: 20181002-153106F, 20181002-153106F_20181002-173109D
</xhtml:code>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/10" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/10/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/10/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://pgbackrest.org/</xccdf:ident>
         <xccdf:ident system="URL">https://github.com/pgbackrest/pgbackrest</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/app-pgdump.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/app-pgbasebackup.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
                     <xhtml:span class="inline_block">pgBackRest</xhtml:span> is not installed nor configured for PostgreSQL by default, but instead is maintained as a GitHub project. Fortunately, it is a part of the PGDG repository and can be easily installed:</xhtml:p>
                  <xhtml:code class="code_block">$ whoami<br/>root<br/>$ Loaded plugins: fastestmirror<br/>Loading mirror speeds from cached hostfile<br/> * base: mirror.cc.columbia.edu<br/> * epel: mirror.us.leaseweb.net<br/> * extras: mirror.es.its.nyu.edu<br/> * updates: mirror.cogentco.com<br/>Resolving Dependencies<br/>[snip]<br/>
                     <br/>Dependencies Resolved<br/>
                     <br/> =================================================================================================================<br/> Package                               Arch               Version                         Repository          Size<br/> =================================================================================================================<br/>Installing:<br/> pgbackrest                            x86_64             2.10-1.rhel7                    pgdg10             241 k<br/>Installing for dependencies:<br/> mailcap                               noarch             2.1.41-2.el7                    base                31 k<br/> perl-Business-ISBN                    noarch             2.06-2.el7                      base                25 k<br/> perl-Business-ISBN-Data               noarch             20120719.001-2.el7              base                24 k<br/> perl-Compress-Raw-Bzip2               x86_64             2.061-3.el7                     base                32 k<br/> perl-Compress-Raw-Zlib                x86_64             1:2.061-4.el7                   base                57 k<br/> perl-DBD-Pg                           x86_64             2.19.3-4.el7                    base               195 k<br/> perl-DBI                              x86_64             1.627-4.el7                     base               802 k<br/> perl-Data-Dumper                      x86_64             2.145-3.el7                     base                47 k<br/> perl-Digest                           noarch             1.17-245.el7                    base                23 k<br/> perl-Digest-MD5                       x86_64             2.52-3.el7                      base                30 k<br/> perl-Digest-SHA                       x86_64             1:5.85-4.el7                    base                58 k<br/> perl-Encode-Locale                    noarch             1.03-5.el7                      base                16 k<br/> perl-File-Listing                     noarch             6.04-7.el7                      base                13 k<br/> perl-HTML-Parser                      x86_64             3.71-4.el7                      base               115 k<br/> perl-HTML-Tagset                      noarch             3.20-15.el7                     base                18 k<br/> perl-HTTP-Cookies                     noarch             6.01-5.el7                      base                26 k<br/> perl-HTTP-Daemon                      noarch             6.01-8.el7                      base                21 k<br/> perl-HTTP-Date                        noarch             6.02-8.el7                      base                14 k<br/> perl-HTTP-Message                     noarch             6.06-6.el7                      base                82 k<br/> perl-HTTP-Negotiate                   noarch             6.01-5.el7                      base                17 k<br/> perl-IO-Compress                      noarch             2.061-2.el7                     base               260 k<br/> perl-IO-HTML                          noarch             1.00-2.el7                      base                23 k<br/> perl-IO-Socket-IP                     noarch             0.21-5.el7                      base                36 k<br/> perl-IO-Socket-SSL                    noarch             1.94-7.el7                      base               115 k<br/> perl-JSON-PP                          noarch             2.27202-2.el7                   base                55 k<br/> perl-LWP-MediaTypes                   noarch             6.02-2.el7                      base                24 k<br/> perl-Mozilla-CA                       noarch             20130114-5.el7                  base                11 k<br/> perl-Net-Daemon                       noarch             0.48-5.el7                      base                51 k<br/> perl-Net-HTTP                         noarch             6.06-2.el7                      base                29 k<br/> perl-Net-LibIDN                       x86_64             0.12-15.el7                     base                28 k<br/> perl-Net-SSLeay                       x86_64             1.55-6.el7                      base               285 k<br/> perl-PlRPC                            noarch             0.2020-14.el7                   base                36 k<br/> perl-TimeDate                         noarch             1:2.30-2.el7                    base                52 k<br/> perl-URI                              noarch             1.60-9.el7                      base               106 k<br/> perl-WWW-RobotRules                   noarch             6.02-5.el7                      base                18 k<br/> perl-XML-LibXML                       x86_64             1:2.0018-5.el7                  base               373 k<br/> perl-XML-NamespaceSupport             noarch             1.11-10.el7                     base                18 k<br/> perl-XML-SAX                          noarch             0.99-9.el7                      base                63 k<br/> perl-XML-SAX-Base                     noarch             1.08-7.el7                      base                32 k<br/> perl-libwww-perl                      noarch             6.05-2.el7                      base               205 k<br/> perl-version                          x86_64             3:0.99.07-3.el7                 base                84 k<br/>
                     <br/>Transaction Summary<br/>===================================================================================================================<br/>Install  1 Package (+41 Dependent packages)<br/>
                     <br/>Total download size: 3.7 M<br/>Installed size: 9.4 M<br/>[snip]<br/>Running transaction check<br/>Running transaction test<br/>Transaction test succeeded<br/>Running transaction<br/>[snip]<br/>Installed:<br/>  pgbackrest.x86_64 0:2.10-1.rhel7                                                                                 <br/>
                     <br/>Dependency Installed:<br/>  mailcap.noarch 0:2.1.41-2.el7                               perl-Business-ISBN.noarch 0:2.06-2.el7              <br/>  perl-Business-ISBN-Data.noarch 0:20120719.001-2.el7         perl-Compress-Raw-Bzip2.x86_64 0:2.061-3.el7        <br/>  perl-Compress-Raw-Zlib.x86_64 1:2.061-4.el7                 perl-DBD-Pg.x86_64 0:2.19.3-4.el7                   <br/>  perl-DBI.x86_64 0:1.627-4.el7                               perl-Data-Dumper.x86_64 0:2.145-3.el7               <br/>  perl-Digest.noarch 0:1.17-245.el7                           perl-Digest-MD5.x86_64 0:2.52-3.el7                 <br/>  perl-Digest-SHA.x86_64 1:5.85-4.el7                         perl-Encode-Locale.noarch 0:1.03-5.el7              <br/>  perl-File-Listing.noarch 0:6.04-7.el7                       perl-HTML-Parser.x86_64 0:3.71-4.el7                <br/>  perl-HTML-Tagset.noarch 0:3.20-15.el7                       perl-HTTP-Cookies.noarch 0:6.01-5.el7               <br/>  perl-HTTP-Daemon.noarch 0:6.01-8.el7                        perl-HTTP-Date.noarch 0:6.02-8.el7                  <br/>  perl-HTTP-Message.noarch 0:6.06-6.el7                       perl-HTTP-Negotiate.noarch 0:6.01-5.el7             <br/>  perl-IO-Compress.noarch 0:2.061-2.el7                       perl-IO-HTML.noarch 0:1.00-2.el7                    <br/>  perl-IO-Socket-IP.noarch 0:0.21-5.el7                       perl-IO-Socket-SSL.noarch 0:1.94-7.el7              <br/>  perl-JSON-PP.noarch 0:2.27202-2.el7                         perl-LWP-MediaTypes.noarch 0:6.02-2.el7             <br/>  perl-Mozilla-CA.noarch 0:20130114-5.el7                     perl-Net-Daemon.noarch 0:0.48-5.el7                 <br/>  perl-Net-HTTP.noarch 0:6.06-2.el7                           perl-Net-LibIDN.x86_64 0:0.12-15.el7                <br/>  perl-Net-SSLeay.x86_64 0:1.55-6.el7                         perl-PlRPC.noarch 0:0.2020-14.el7                   <br/>  perl-TimeDate.noarch 1:2.30-2.el7                           perl-URI.noarch 0:1.60-9.el7                        <br/>  perl-WWW-RobotRules.noarch 0:6.02-5.el7                     perl-XML-LibXML.x86_64 1:2.0018-5.el7               <br/>  perl-XML-NamespaceSupport.noarch 0:1.11-10.el7              perl-XML-SAX.noarch 0:0.99-9.el7                    <br/>  perl-XML-SAX-Base.noarch 0:1.08-7.el7                       perl-libwww-perl.noarch 0:6.05-2.el7                <br/>  perl-version.x86_64 3:0.99.07-3.el7                        <br/>
                     <br/>Complete!
</xhtml:code>
                  <xhtml:p>Once installed, <xhtml:span class="inline_block">pgBackRest</xhtml:span> must be configured for things like stanza name, backup location, retention policy, logging, etc. Please consult the <xhtml:a href="http://pgbackrest.org/configuration.html">configuration guide</xhtml:a>.</xhtml:p>
                  <xhtml:p>If employing <xhtml:span class="inline_block">pgBackRest</xhtml:span> for your backup/recovery solution, ensure the repository, base backups, and WAL archives are stored on a reliable file system separate from the database server. Further, the external storage system where backups resided should have limited access to only those system administrators as necessary. Finally, as with any backup/recovery solution, stringent testing must be conducted. A backup is only good if it can be restored successfully.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.4_Ensure_miscellaneous_configuration_settings_are_correct" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure miscellaneous configuration settings are correct</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This recommendation covers non-regular, special files, and dynamic libraries.</xhtml:p>
            <xhtml:p>PostgreSQL permits local logins via the UNIX DOMAIN SOCKET and, for the most part, anyone with a legitimate Unix login account can make the attempt. Limiting PostgreSQL login attempts can be made by relocating the UNIX DOMAIN SOCKET to a subdirectory with restricted permissions.</xhtml:p>
            <xhtml:p>The creation and implementation of user-defined dynamic libraries is an extraordinary powerful capability. In the hands of an experienced DBA/programmer, it can significantly enhance the power and flexibility of the RDBMS. But new and unexpected behavior can also be assigned to the RDBMS, resulting in a very dangerous environment in what should otherwise be trusted.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en"/>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.1/control/18/subcontrol/7" system="http://cisecurity.org/20-cc/v6.1"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/11" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-file-locations.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-connection.html</xccdf:ident>
         <xccdf:ident system="URL">https://www.postgresql.org/docs/10/static/runtime-config-client.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Follow these steps to remediate the configuration:</xhtml:p>
                  <xhtml:ul>
                     <xhtml:li>Determine permissions based on your organization's security policies.</xhtml:li>
                     <xhtml:li>Relocate all files and ensure their permissions are restricted as much as possible, i.e. only superuser read access.</xhtml:li>
                     <xhtml:li>Ensure all directories where these files are located have restricted permissions such that the superuser can read but not write.</xhtml:li>
                     <xhtml:li>Lastly, change the settings accordingly in the <xhtml:span class="inline_block">postgresql.conf</xhtml:span> configuration file and restart the database cluster for changes to take effect.</xhtml:li>
                  </xhtml:ul>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>HiQFjX2DRUXq6DxE2oxNzoEQb/c=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
NX1YHbh10GF6wgH8566MLEXfNmH7GJDCiBX/w9SRNB1VQs0JBVRvMdp3AJLbR0jAfBPT10GsBUBD
iBX4c+hliyTvZi46kPoDJhAVqumpy5x3nd0LSBiyCqKlOwUEY7uIQNzXDSzubS9T8bycyHQtYEsp
7eg6rvD6LcSlQ6428kiyED72RN+YFNvBA0ohrdUvfCeIZL3mlyiKaAmJUze5Ve5epNKtFt5BTLuk
Xc51O8WUBagChq/5JMa/DSrziG2Vib3h1wsIssVFR7jgnulvt04Zo/xiNsvR98I/Zja6IOHBVilQ
AgWPpx0XY0Dx9ykXDVGGF18slSNXKsjBpTa3oA==
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIFUjCCBDqgAwIBAgIIPx+qZKptEY4wDQYJKoZIhvcNAQELBQAwgbQxCzAJBgNVBAYTAlVTMRAw
DgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5LmNv
bSwgSW5jLjEtMCsGA1UECxMkaHR0cDovL2NlcnRzLmdvZGFkZHkuY29tL3JlcG9zaXRvcnkvMTMw
MQYDVQQDEypHbyBEYWRkeSBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwHhcNMjAw
OTA4MTMzOTM5WhcNMjMxMDI4MDAzMjA1WjCBkzELMAkGA1UEBhMCVVMxETAPBgNVBAgTCE5ldyBZ
b3JrMRcwFQYDVQQHEw5FYXN0IEdyZWVuYnVzaDErMCkGA1UEChMiQ2VudGVyIGZvciBJbnRlcm5l
dCBTZWN1cml0eSwgSW5jLjErMCkGA1UEAxMiQ2VudGVyIGZvciBJbnRlcm5ldCBTZWN1cml0eSwg
SW5jLjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANDBp4+sl9kB5JRmnQH0wcbLLz/t
n2HoD6TRl3xJj12V61njBNgaiGzvoSl07sFLnESukb0CU44MzYDoUMdx3HJUcEAeMY/9eITqGUnk
N4WsP145eFqH7FoszOY/4NYlgYMYt8ZP2kRHyim9LpQTLT/1mBaUkY2f2e5uUCootH3iT8W3/sK2
flLzWfLgXTvkhJm4Uvw1RErBFs15+krW0KWtnZ6NmiDhmV0CnFGNnd1meGZPs2sBXEVGLJVSKzoT
G9Ht/oWyRLRcJuXpHoXTYpkqM2MsixmSaJy5b6/D35r0NXHru3p1gkX2a0VgJQxxWqLi3bVPzpl3
PlJu3C8M/FUCAwEAAaOCAYUwggGBMAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYBBQUHAwMw
DgYDVR0PAQH/BAQDAgeAMDUGA1UdHwQuMCwwKqAooCaGJGh0dHA6Ly9jcmwuZ29kYWRkeS5jb20v
Z2RpZzJzNS02LmNybDBdBgNVHSAEVjBUMEgGC2CGSAGG/W0BBxcCMDkwNwYIKwYBBQUHAgEWK2h0
dHA6Ly9jZXJ0aWZpY2F0ZXMuZ29kYWRkeS5jb20vcmVwb3NpdG9yeS8wCAYGZ4EMAQQBMHYGCCsG
AQUFBwEBBGowaDAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuZ29kYWRkeS5jb20vMEAGCCsGAQUF
BzAChjRodHRwOi8vY2VydGlmaWNhdGVzLmdvZGFkZHkuY29tL3JlcG9zaXRvcnkvZ2RpZzIuY3J0
MB8GA1UdIwQYMBaAFEDCvSeOzDSDMKIz1/tss/C0LIDOMB0GA1UdDgQWBBT7fOf4ISDprbE+qUFe
+friFTKgHjANBgkqhkiG9w0BAQsFAAOCAQEAT0XLw2vmuq6e58bkLDXdqKeGQjREDChLw2Mae9LI
JB93QgdA2OCLA1FwU2s7lawEDcma9wPiugxVGoaQNOfRw2/+cz0xmR3uaKQq6I24dWbHF20N2tSz
1RAAK1lRZKewA1fj+qqKWjzETA0LpqZlaFF+CKBpQcyfYyQRZxpHkB1vvKMf4kMIRKruvl4ixLjN
uAZrbQUWlXuq/MUkVP3FgdxWBPfmMGyngHs4hNMaSQGb1TEhBjj+PGoSunAyaOgO/P94XJPQQX3O
2oNDsPou6gKcNtbZrH+iYTJ8rcqQTontMwSP/HrYj8lgG3neG53vk05p0jCn2M5W0ukJ4LPEnA==
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>
0MGnj6yX2QHklGadAfTBxssvP+2fYegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzN
gOhQx3HcclRwQB4xj/14hOoZSeQ3haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WY
FpSRjZ/Z7m5QKii0feJPxbf+wrZ+UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKc
UY2d3WZ4Zk+zawFcRUYslVIrOhMb0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7
enWCRfZrRWAlDHFaouLdtU/OmXc+Um7cLwz8VQ==
</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></xccdf:Benchmark>